<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DS.Documents.Pdf</name>
    </assembly>
    <members>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.AcroForm">
            <summary>
            Defines properties of AcroForm within PDF document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.AcroForm.c_sfSignaturesExist">
            <summary>
            If set, the document contains at least one signature field.
            This flag allows a viewer application to enable user interface items (such as menu items or pushbuttons)
            related to signature processing without having to scan the entire document for the presence of
            signature fields.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.AcroForm.c_sfAppendOnly">
            <summary>
            If set, the document contains signatures that may be invalidated if the file is saved (written)
            in a way that alters its previous contents, as opposed to an incremental update.
            Merely updating the file by appending new information to the end of the previous version
            is safe (see Section G.6, “Updating Example”).
            Viewer applications can use this flag to present a user requesting a full save with an additional
            alert box warning that signatures will be invalidated and requiring explicit confirmation before
            continuing with the operation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.AcroForm.c_DefSigFlags">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.AcroForms.AcroForm.SigFlags"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.AcroForm.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.AcroForm.Fields">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.FieldCollection"/> collection containing document fields.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField">
            <summary>
            Represents CheckBox AcroForm field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.HasRadioButtonBehavior">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/> actually behaves as a <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/>.
            This situation takes place if the checkbox field owns more than one <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>s,
            and the widgets' appearance streams used to show checked state have different names.
            </summary>
            <returns><see langword="true"/> if this checkbox behaves as a radio button, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.GetCheckedAppearanceStreamNames">
            <summary>
            Gets the names of appearance streams of the widget annotations associated with this field
            that are used to display the widgets in checked state.
            In Acrobat these names are specified as "Export Value" option in the Check Box field properties.
            </summary>
            <returns>The names of the widget annotations' appearance streams that are used to display the widgets in checked state.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.GetCheckedAppearanceStreamName(GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation)">
            <summary>
            Gets the name of a widget annotation's appearance stream that is used to display the widget in checked state.
            In Acrobat this name is specified as "Export Value" option in the Check Box field properties.
            </summary>
            <param name="wa">One of <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>s associated with this field.</param>
            <returns>The name of the widget annotation's appearance stream that is used to display the widget in checked state.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.SetCheckedAppearanceStreamName(GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,System.String)">
            <summary>
            Sets the name of a widget annotation's appearance stream that will be used to display the widget in checked state.
            In Acrobat this name is specified as "Export Value" option in the Check Box field properties.
            </summary>
            <param name="wa">One of <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>s associated with this field.</param>
            <param name="name">The name of the appearance stream to use for checked state.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.SetCheckedAppearanceStreamNames(System.String)">
            <summary>
            Sets the name of an appearance stream that will be used by the widget annotations
            associated with this field to display the widgets in checked state.
            In Acrobat this name is specified as "Export Value" option in the Check Box field properties.
            </summary>
            <param name="name">The name of the appearance stream to use for checked state.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.Opt">
            <summary>
            Gets or sets an array of strings containing one entry for each widget annotation.
            defining export values for its constituent check boxes.
            See the PDF spec for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.Widget">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> defining view properties of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.ValueObj">
            <summary>
            Gets or sets the object value of this checkbox field.
            <para>
            Gets <see langword="false"/> if none of the associated widgets is checked.
            Otherwise gets <see langword="true"/> if all widgets use the same name for the checked appearance stream,
            or the name of the appearance stream that is used to display the checked state.
            </para>
            When set, if a Boolean value is specified, it is assigned as is to the checked state.
            If the assigned value is not a Boolean, it is converted to string and is interpreted
            as the name of the widget's appearance stream used to show the widget's checked state.
            If no such stream exists, the checkbox will show as unchecked.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.Checked"/>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.DefaultValueObj"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.HasRadioButtonBehavior"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.DefaultValueObj">
            <summary>
            Gets or sets the default value of this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/>.
            See <see cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.ValueObj"/> for details.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.ValueObj"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.HasRadioButtonBehavior"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.Checked">
            <summary>
            Gets or sets the value of this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/> as a Boolean value.
            See <see cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.ValueObj"/> for details.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.ValueObj"/>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.DefaultChecked"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.HasRadioButtonBehavior"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.DefaultChecked">
            <summary>
            Gets or sets the default value of this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/> as a Boolean value.
            See <see cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.ValueObj"/> for details.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.Checked"/>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.ValueObj"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.HasRadioButtonBehavior"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.Value">
            <summary>
            Gets or sets the value of this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/>.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.Checked"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.DefaultValue">
            <summary>
            Gets or sets the default value of this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/>.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField.DefaultChecked"/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem">
            <summary>
            Represents an item displayed in <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceField"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem"/> class.
            </summary>
            <param name="text">The item's text.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem"/> class.
            </summary>
            <param name="text">The item's text.</param>
            <param name="value">The item's value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.Text">
            <summary>
            Gets or sets the text used to display an item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.Value">
            <summary>
            Gets or sets the value of item, if not specified then <see cref="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem.Text"/> will be used as value.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceField">
            <summary>
            Base class for choice fields: ComboBox and ListBox.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ChoiceField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.Widget">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> defining view properties of the text field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.Items">
            <summary>
            Gets the list of items displayed in field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.SelectedIndex">
            <summary>
            Gets or sets the index of selected item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.DefaultSelectedIndex">
            <summary>
            Gets or sets the index of item selected by default.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.Sort">
            <summary>
            Gets or sets a value indicating whether the field’s option items should be sorted alphabetically.
            This flag is intended for use by form authoring tools, not by PDF viewer applications.
            Viewers should simply display the options in the order in which they occur in the Opt array
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.SpellCheck">
            <summary>
            Gets or sets a value indicating whether the text entered in the field is spell-checked.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ChoiceField.CommitOnSelChange">
            <summary>
            Gets or sets a value indicating whether the new value is committed as soon as a selection is made
            with the pointing device.
            This option enables applications to perform an action once a selection is made,
            without requiring the user to exit the field.
            If false, the new value is not committed until the user exits the field.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField">
            <summary>
            Represents the ComboBox field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.Text">
            <summary>
            Gets or sets the value of this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/> as a string.
            This property is used to specify the value of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>
            if its <see cref="P:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.Editable"/> property is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.DefaultText">
            <summary>
            Gets or sets the default value of this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/> as a string.
            This property is used to specify the default value of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>
            if its <see cref="P:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.Editable"/> property is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.Value">
            <summary>
            Gets or sets the value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>,
            value is specified as index of selected item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.DefaultValue">
            <summary>
            Gets or sets the default value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>,
            value is specified as index of selected item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.Editable">
            <summary>
            Gets or sets a value indicating whether the combo box includes an editable text box as well as a drop-down list.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.SetPercentFormat(System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle)">
            <summary>
            Imposes the specified percentage formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>.
            <para>
            Note that this method initializes the values of <b>Field.Events.FormatValue</b> and <b>Field.Events.KeyPress</b> only,
            it does not change the field's value or widget appearance streams.
            </para>
            </summary>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.SetPercentValue(System.Double,System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle)">
            <summary>
            Imposes the specified percentage formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>,
            and assigns to it the specified value as percentage.
            </summary>
            <param name="value">The percentage value to assign. For example, 1 corresponds to 100%, 0.5 to 50%, and so on.</param>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.SetNumberFormat(System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle,GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle,System.String,GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle)">
            <summary>
            Imposes the specified numeric formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>.
            <para>
            Note that this method initializes the values of <b>Field.Events.FormatValue</b> and <b>Field.Events.KeyPress</b> only,
            it does not change the field's value or widget appearance streams.
            </para>
            </summary>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
            <param name="negativeStyle">How negative numbers are displayed.</param>
            <param name="currencySymbol">The currency symbol, or <see langword="null"/> or empty string.</param>
            <param name="currencySymbolStyle">The location of the currency symbol in relation to the number.
            This parameter is meaningful only if <paramref name="currencySymbol"/> is not <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.SetNumberValue(System.Double,System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle,GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle,System.String,GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle)">
            <summary>
            Imposes the specified numeric formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>,
            and assigns to it the specified value as a number.
            </summary>
            <param name="value">The value to assign.</param>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
            <param name="negativeStyle">How negative numbers are displayed.</param>
            <param name="currencySymbol">The currency symbol, or <see langword="null"/> or empty string.</param>
            <param name="currencySymbolStyle">The location of the currency symbol in relation to the number.
            This parameter is meaningful only if <paramref name="currencySymbol"/> is not <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.SetDateFormat(System.String)">
            <summary>
            Imposes the specified date format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"m/d/yyyy"</b> or <b>"d-mmm-yy"</b>.
            </para>
            <para>
            Note that this method initializes the values of <b>Field.Events.FormatValue</b> and <b>Field.Events.KeyPress</b> only,
            it does not change the field's value or widget appearance streams.
            </para>
            </summary>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.SetDateValue(System.DateTime,System.String)">
            <summary>
            Imposes the specified date format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>,
            and assigns to it the specified value as a date.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"m/d/yyyy"</b> or <b>"d-mmm-yy"</b>.
            </para>
            </summary>
            <param name="value">The value to assign.</param>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.SetTimeFormat(System.String)">
            <summary>
            Imposes the specified time format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"HH:MM"</b> or <b>"H:MM tt"</b>.
            </para>
            <para>
            Note that this method initializes the values of <b>Field.Events.FormatValue</b> and <b>Field.Events.KeyPress</b> only,
            it does not change the field's value or widget appearance streams.
            </para>
            </summary>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.SetTimeValue(System.DateTime,System.String)">
            <summary>
            Imposes the specified time format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>,
            and assigns to it the specified value as time.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"HH:MM"</b> or <b>"H:MM tt"</b>.
            </para>
            </summary>
            <param name="value">The value to assign.</param>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.SetSpecialFormat(GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat)">
            <summary>
            Imposes the specified special format on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>.
            <para>
            Note that this method initializes the values of <b>Field.Events.FormatValue</b> and <b>Field.Events.KeyPress</b> only,
            it does not change the field's value or widget appearance streams.
            </para>
            </summary>
            <param name="specialFormat">The special format to use.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField.SetSpecialFormatValue(System.String,GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat)">
            <summary>
            Sets the value of the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/> as a value
            formatted according to <paramref name="format"/>.
            <para>
            This method assumes that <paramref name="value"/> is already formatted as required.
            E.g. if <paramref name="format"/> is SSN, <paramref name="value"/> should look like <b>"123-45-6789"</b>.
            </para>
            </summary>
            <param name="value">The value to assign.</param>
            <param name="format">The special format to use.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.CombTextField">
            <summary>
            Represents the text field divided into as many equally spaced positions, or combs, as the value of MaxLen,
            and the text is laid out into those combs.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CombTextField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CombTextField"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.IFieldCollectionOwner">
            <summary>
            Should be implemented by the class owning <see cref="T:GrapeCity.Documents.Pdf.AcroForms.FieldCollection"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.IFieldCollectionOwner.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> containing this object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.FieldCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.FindByName(System.String)">
            <summary>
            Searches <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> with specified name, search is case sensitive.
            </summary>
            <param name="fieldName">The field's name.</param>
            <returns>Returns found <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> or null if not found.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> with specified name, throws an exception if field not found.
            </summary>
            <param name="fieldName">The field's name.</param>
            <returns>Returns the field with specified name.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.HasSignatures">
            <summary>
            Gets a value indicating whether collection contains Signature fields.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.IFieldCollectionOwner"/> object that owns this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.AcroForm">
            <summary>
            Gets the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.AcroForm"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldCollection.Field">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> owning this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.FieldType">
            <summary>
            Defines possible field types.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldType.Btn">
            <summary>
            Button field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldType.Tx">
            <summary>
            Text field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldType.Ch">
            <summary>
            Choice field, ComboBox or ListBox.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldType.Sig">
            <summary>
            Signature field.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.FieldWidgetCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> objects owned by <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.FieldWidgetCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> object that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.FieldFlags">
            <summary>
            Defines possible values of the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Flags"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.ReadOnly">
            <summary>
            If set, the user may not change the value of the field.
            Any associated widget annotations will not interact with the user;
            that is, they will not respond to mouse clicks or change their appearance in response to mouse motions.
            This flag is useful for fields whose values are computed or imported from a database.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Required">
            <summary>
            If set, the field must have a value at the time it is exported by a submit-form action.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.NoExport">
            <summary>
            If set, the field must not be exported by a submit-form action.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.NoToggleToOff">
            <summary>
            (Radio buttons only) If set, exactly one radio button must be selected at all times;
            clicking the currently selected button has no effect.
            If clear, clicking the selected button deselects it, leaving no button selected.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Radio">
            <summary>
            If set, the field is a set of radio buttons; if clear, the field is a check box.
            This flag is meaningful only if the Pushbutton flag is clear.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Pushbutton">
            <summary>
            If set, the field is a pushbutton that does not retain a permanent value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.RadiosInUnison">
            <summary>
            (PDF 1.5) If set, a group of radio buttons within a radio button field that use the same value
            for the on state will turn on and off in unison; that is if one is checked, they are all checked.
            If clear, the buttons are mutually exclusive (the same behavior as HTML radio buttons).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Multiline">
            <summary>
            If set, the field can contain multiple lines of text; if clear, the field’s text is restricted to a single line.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Password">
            <summary>
            If set, the field is intended for entering a secure password that should not be echoed visibly to the screen.
            Characters typed from the keyboard should instead be echoed in some unreadable form,
            such as asterisks or bullet characters.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.FileSelect">
            <summary>
            If set, the text entered in the field represents the pathname of a file whose contents
            are to be submitted as the value of the field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.DoNotSpellCheck">
            <summary>
            If set, text entered in the field is not spell-checked.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.DoNotScroll">
            <summary>
            If set, the field does not scroll (horizontally for single-line fields, vertically for multiple-line fields) to accommodate more text than fits within its annotation rectangle.
            Once the field is full, no further text is accepted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Comb">
            <summary>
            Meaningful only if the MaxLen entry is present in the text field dictionary and if the
            Multiline, Password, and FileSelect flags are clear.
            If set, the field is automatically divided into as many equally spaced positions, or combs,
            as the value of MaxLen, and the text is laid out into those combs.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.RichText">
            <summary>
            If set, the value of this field should be represented as a rich text string.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Combo">
            <summary>
            If set, the field is a combo box; if clear, the field is a list box.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Edit">
            <summary>
            If set, the combo box includes an editable text box as well as a drop-down list;
            if clear, it includes only a drop-down list. This flag is meaningful only if the <see cref="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Combo"/> flag is set.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.Sort">
            <summary>
            If set, the field’s option items should be sorted alphabetically.
            This flag is intended for use by form authoring tools, not by PDF viewer applications.
            Viewers should simply display the options in the order in which they occur in the Opt array.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.MultiSelect">
            <summary>
            If set, more than one of the field’s option items may be selected simultaneously;
            if clear, no more than one item at a time may be selected.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.FieldFlags.CommitOnSelChange">
            <summary>
            If set, the new value is committed as soon as a selection is made with the pointing device.
            This option enables applications to perform an action once a selection is made,
            without requiring the user to exit the field. If clear,
            the new value is not committed until the user exits the field.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.Field">
            <summary>
            Defines AcroForm field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.NumberFormats">
            <summary>
            Used to get the <see cref="T:System.Globalization.NumberFormatInfo"/> object by <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.mi_MixedAnnotation">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> what should be serialized with this field
            in a single PDF dictionary, calculated in BeforeSave() method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.ParseFinished">
            <summary>
            Called from <see cref="M:GrapeCity.Documents.Pdf.AcroForms.Field.Parse(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.AcroForms.Field)"/>,
            can be used for additional initializations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.GetDA">
            <summary>
            Returns the value of DA entry, it can be specified in the Field dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.OnRemove">
            <summary>
            Called when field removed from the document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.GetFlag(GrapeCity.Documents.Pdf.AcroForms.FieldFlags)">
            <summary>
            For internal use.
            Returns a value indicating whether the specified flag in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Flags"/> is set.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetFlag(GrapeCity.Documents.Pdf.AcroForms.FieldFlags,System.Boolean)">
            <summary>
            For internal use.
            Sets specified flag in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Flags"/> to specified value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.GetDefaultExportValue">
            <summary>
            The method should return the export value used if actual field value is null.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetPdfValue(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Sets the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.PdfValue"/> without resetting appearance of linked annotations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetPdfValueProp(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Called from setter of <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.PdfValue"/> property.
            Can be overridden by default class if required.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetPdfDefaultValueProp(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Called from setter of <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.PdfDefaultValue"/> property.
            Can be overridden by default class if required.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.ConvertImportedValue(System.Collections.Generic.IList{System.String},GrapeCity.Documents.Pdf.Spec.IPdfObject@)">
            <summary>
            Tries to convert a value from the GcPdfDocument.ImportXXX(...) method to the PDF value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetPercentFormatInternal(System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle)">
            <summary>
            Imposes the specified percentage formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/>.
            </summary>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetPercentValueInternal(System.Double,System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle,System.Action{GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,System.String,System.Nullable{System.Drawing.Color}})">
            <summary>
            Imposes the specified percentage formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/>,
            and assigns to it the specified value as percentage.
            </summary>
            <param name="value">The percentage value to assign. For example, 1 corresponds to 100%, 0.5 to 50%, and so on.</param>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods.</param>
            <param name="buildAppearance">The build appearance method.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetNumberFormatInternal(System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle,GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle,System.String,GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle)">
            <summary>
            Imposes the specified numeric formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/>.
            </summary>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
            <param name="negativeStyle">How negative numbers are displayed.</param>
            <param name="currencySymbol">The currency symbol, or <see langword="null"/> or empty string.</param>
            <param name="currencySymbolStyle">The location of the currency symbol in relation to the number.
            This parameter is meaningful only if <paramref name="currencySymbol"/> is not <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetNumberValueInternal(System.Double,System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle,GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle,System.String,GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle,System.Action{GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,System.String,System.Nullable{System.Drawing.Color}})">
            <summary>
            Imposes the specified numeric formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/>,
            and assigns to it the specified value as a number.
            </summary>
            <param name="value">The value to assign.</param>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
            <param name="negativeStyle">How negative numbers are displayed.</param>
            <param name="currencySymbol">The currency symbol, or <see langword="null"/> or empty string.</param>
            <param name="currencySymbolStyle">The location of the currency symbol in relation to the number.
            This parameter is meaningful only if <paramref name="currencySymbol"/> is not <see langword="null"/> or empty.</param>
            <param name="buildAppearance">The build appearance method.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetDateFormatInternal(System.String)">
            <summary>
            Imposes the specified date format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/>.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"m/d/yyyy"</b> or <b>"d-mmm-yy"</b>.
            </para>
            </summary>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetDateValueInternal(System.DateTime,System.String,System.Action{GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,System.String,System.Nullable{System.Drawing.Color}})">
            <summary>
            Imposes the specified date format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ComboBoxField"/>,
            and assigns to it the specified value as a date.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"m/d/yyyy"</b> or <b>"d-mmm-yy"</b>.
            </para>
            </summary>
            <param name="value">The value to assign.</param>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
            <param name="buildAppearance">The build appearance method.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetTimeFormatInternal(System.String)">
            <summary>
            Imposes the specified time format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/>.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"HH:MM"</b> or <b>"H:MM tt"</b>.
            </para>
            </summary>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetTimeValueInternal(System.DateTime,System.String,System.Action{GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,System.String,System.Nullable{System.Drawing.Color}})">
            <summary>
            Imposes the specified time format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/>,
            and assigns to it the specified value as time.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"HH:MM"</b> or <b>"H:MM tt"</b>.
            </para>
            </summary>
            <param name="value">The value to assign.</param>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
            <param name="buildAppearance">The build appearance method.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetSpecialFormatInternal(GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat)">
            <summary>
            Imposes the specified special format on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/>.
            </summary>
            <param name="specialFormat">The special format to use.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.SetSpecialFormatValueInternal(System.String,GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat,System.Action{GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,System.String,System.Nullable{System.Drawing.Color}})">
            <summary>
            Sets the value of the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> as a value
            formatted according to <paramref name="format"/>.
            <para>
            This method assumes that <paramref name="value"/> is already formatted as required.
            E.g. if <paramref name="format"/> is SSN, <paramref name="value"/> should look like <b>"123-45-6789"</b>.
            </para>
            </summary>
            <param name="value">The value to assign.</param>
            <param name="format">The special format to use.</param>
            <param name="buildAppearance">The build appearance method.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Type">
            <summary>
            Gets or sets type of the field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Flags">
            <summary>
            Gets or sets the field's flags, change this property carefully.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.UserData">
            <summary>
            Gets or sets arbitrary data associated with the current field.
            <para>Note that this data is runtime only and is not persisted in the PDF.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Justification">
            <summary>
            Gets or sets the justification to be used in displaying the field’s text.
            <para>Note that this field is used only if <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Justification"/> is not specified.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.ActualJustification">
            <summary>
            Gets the actual justification to be used when displaying the field’s text.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Justification"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Children">
            <summary>
            Gets the list of child fields.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Parent">
            <summary>
            Gets the parent field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.AcroForm">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.AcroForm"/> that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.FieldCollection"/> containing this field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Widgets">
            <summary>
            Gets the list of widget annotations associated with this field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Name">
            <summary>
            Gets or sets the field's name.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.AlternateName">
            <summary>
            Gets or sets an alternate field name to be used in place of the actual field name wherever
            the field must be identified in the user interface (such as in error or status messages referring to the field).
            This text is also useful when extracting the document’s contents in support of accessibility
            to users with disabilities or for other purposes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.MappingName">
            <summary>
            Gets or sets the mapping name to be used when exporting interactive form field data from the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Events">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents"/> object defining events of this field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.PdfValue">
            <summary>
            Gets or sets the field's value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Value">
            <summary>
            Gets or sets the field's value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.PdfDefaultValue">
            <summary>
            Gets or sets the default field's value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.DefaultValue">
            <summary>
            Gets or sets the field's default value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the user may not change the value of the field.
            Any associated widget annotations will not interact with the user; that is,
            they will not respond to mouse clicks or change their appearance in response to mouse motions.
            This flag is useful for fields whose values are computed or imported from a database.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Required">
            <summary>
            Gets or sets a value indicating whether the field must have a value at the time it is
            exported by a <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/> action.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.Export">
            <summary>
            Gets or sets a value indicating whether the field must not be exported by a <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/> action.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.CalculationIndex">
            <summary>
            Gets or sets an index that is used to determine the field's calculation order.
            Fields with lower indices are calculated before fields with higher indices.
            <para>
            If several fields have the same CalculationIndex, the calculation order is determined
            by the order of fields in the collection.
            </para>
            <para>
            <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.RecalculateValue"/> can be used to specify JavaScript that is used to calculate the field's value.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.HasGcProps">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.GcProps"/> is not empty
            (i.e. whether this filed has any associated custom properties).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.GcProps">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> object that can be used to associate
            arbitrary data with this field.
            <para>
            Note that for text values, in most cases the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> type should be used
            rather than <see cref="T:System.String"/>.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.FormatPercentValue(System.Double,System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle)">
            <summary>
            Formats a value using the specified percentage formatting options.
            </summary>
            <param name="value">The value to format.</param>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
            <returns>The string containing the formatted value.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.FormatNumberValue(System.Double,System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle,GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle,System.String,GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle)">
            <summary>
            Formats a value using the specified numeric formatting options.
            </summary>
            <param name="value">The value to format.</param>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
            <param name="negativeStyle">How negative numbers are displayed.</param>
            <param name="currencySymbol">The currency symbol, or <see langword="null"/> or empty string.</param>
            <param name="currencySymbolStyle">The location of the currency symbol in relation to the number.
            This parameter is meaningful only if <paramref name="currencySymbol"/> is not <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.Field.FormatDateTimeValue(System.DateTime,System.String)">
            <summary>
            Formats a <see cref="T:System.DateTime"/> value using the specified date format string.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"m/d/yyyy"</b> or <b>"d-mmm-yy"</b>.
            </para>
            </summary>
            <param name="value">The value to format.</param>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat">
            <summary>
            Defines the supported special formats.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat.ZipCode">
            <summary>
            A five digit zip code, e.g. <b>"12345"</b>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat.ZipCode4">
            <summary>
            A zip plus-four code, e.g. <b>"12345-6789"</b>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat.Phone">
            <summary>
            A long or short (depending on the number of digits) telephone number, e.g. <b>"(123) 456-7890"</b> or <b>"456-7890"</b>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat.SSN">
            <summary>
            A social security number, e.g. <b>"123-45-6789"</b>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle">
            <summary>
            Defines the location of the currency symbol in relation to the number.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle.BeforeWithSpace">
            <summary>
            Show the currency symbol before the number, delimited with a space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle.BeforeNoSpace">
            <summary>
            Show the currency symbol before the number.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle.AfterWithSpace">
            <summary>
            Show the currency symbol after the number, delimited with a space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle.AfterNoSpace">
            <summary>
            Show the currency symbol after the number.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle">
            <summary>
            Defines how negative numbers are displayed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle.None">
            <summary>
            Do not use any special style to show negative numbers.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle.ShowParentheses">
            <summary>
            Negative numbers are shown in parentheses.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle.UseRedText">
            <summary>
            Negative numbers are shown in red color.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle">
            <summary>
            Defines the placement of commas and periods in numbers.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle.CommaDot">
            <summary>
            Use comma as the thousands separator, dot (period) as the decimal separator, e.g. <b>1,234.56</b>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle.Dot">
            <summary>
            Use dot (period) as the decimal separator, no thousands separator, e.g. <b>1234.56</b>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle.DotComma">
            <summary>
            Use dot (period) as the thousands separator, comma as the decimal separator, e.g. <b>1.234,56</b>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle.Comma">
            <summary>
            Use comma as the decimal separator, no thousands separator, e.g. <b>1234,56</b>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle.ApostropheDot">
            <summary>
            Use apostrophe as the thousands separator, dot (period) as the decimal separator, e.g. <b>1'234.56</b>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents">
            <summary>
            Defines events common for acroform fields with value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.KeyPress">
            <summary>
            Gets or sets a JavaScript action to be performed when the user types a keystroke into a
            text field or combo box or modifies the selection in a scrollable list box.
            This action can check the keystroke for validity and reject or modify it.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.FormatValue">
            <summary>
            Gets or sets a JavaScript action to be performed before the field is formatted to display its current value.
            This action can modify the field’s value before formatting.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.ValueChanged">
            <summary>
            Gets or sets a JavaScript action to be performed when the field’s value is changed.
            This action can check the new value for validity.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.Field.TriggerEvents.RecalculateValue">
            <summary>
            Gets or sets a JavaScript action to be performed to recalculate the value of this field when
            that of another field changes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxWriter.GetValues(GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Spec.PdfName[]@,System.Boolean@)">
            <summary>
            Returns the names of appearance streams used by annotations to show checked state.
            Returns "Yes" for annotations without appearance streams.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxWriter.GetChecked(GrapeCity.Documents.Pdf.AcroForms.Field,System.Int32,GrapeCity.Documents.Pdf.Spec.PdfName[],System.Boolean)">
            <summary>
            Checks whether the annotation with specified index should be displayed checked.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.CheckBoxWriter.BuildDefaultAnnotationAppearance(GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Builds default appearance streams for a <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.FieldWriter.BuildDefaultAnnotationAppearance(GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation)">
            <summary>
            Builds default appearance for specified widget.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.FieldWriter.GetAnnotationRenderFromXObject(GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation)">
            <summary>
            Builds default appearance for specified widget.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.FieldWriter.DrawAnnotation(GrapeCity.Documents.Drawing.GcGraphics,GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,System.Drawing.RectangleF)">
            <summary>
            Draws field's annotation on specified graphics.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.FieldWriter.TryGetAnnotationCheckedAppearanceStreamName(GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,GrapeCity.Documents.Pdf.Spec.PdfName@)">
            <summary>
            Tries to get the name of appearance stream used to show an annotation in checked state.
            The method has the meaning for <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/> or <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/> only.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonWriter.GetChecked(System.Int32,GrapeCity.Documents.Pdf.Spec.PdfName[],GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Returns a value indicating whether the annotation with specified index
            should be in the checked state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonWriter.GetValues(GrapeCity.Documents.Pdf.AcroForms.Field)">
            <summary>
            Returns the names of appearance streams used by annotations to show checked state.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.ListBoxField">
            <summary>
            Represents the ListBoxField field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.ListBoxField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.ListBoxField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ListBoxField.TopIndex">
            <summary>
            Gets or sets the index of top visible item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ListBoxField.SelectedIndexes">
            <summary>
            Gets or sets the indexes of selected items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ListBoxField.DefaultSelectedIndexes">
            <summary>
            Gets or sets the indexes of default selected items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.ListBoxField.MultiSelect">
            <summary>
            Gets or sets a value indicating whether more than one of the field’s option items may be selected simultaneously.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.PushButtonField">
            <summary>
            Represents push button AcroForm field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.PushButtonField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.PushButtonField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.PushButtonField.Widget">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> defining view properties of the button.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField">
            <summary>
            Represents group of radio buttons.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.AddItem(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Annotations.CheckStyle,GrapeCity.Documents.Pdf.Annotations.BorderStyle)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> and adds it to the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Widgets"/> collection.
            </summary>
            <param name="page">The page on which the new <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> will be placed.</param>
            <param name="bounds">The bounds of the new <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> on <paramref name="page"/>.</param>
            <param name="checkStyle">The check mark style.</param>
            <param name="borderStyle">The border style.</param>
            <returns>Returns the created <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.GetCheckedAppearanceStreamNames">
            <summary>
            Gets the names of appearance streams of the widget annotations associated with this field
            that are used to display the widgets in checked state.
            <para>
            In Acrobat this name is specified as "Radio Button Choice" option
            in the Radio Button field properties.</para>
            Note that if the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.Opt"/> property is specified, then it is used in the Acrobat interface.
            </summary>
            <returns>The names of the widget annotations' appearance streams that are used to display the widgets in checked state.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.GetCheckedAppearanceStreamName(GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation)">
            <summary>
            Gets the name of a widget annotation's appearance stream that is used to display the widget in checked state.
            <para>
            In Acrobat this name is specified as "Radio Button Choice" option
            in the Radio Button field properties.</para>
            Note that if the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.Opt"/> property is specified, then it is used in the Acrobat interface.
            </summary>
            <param name="wa">One of <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>s associated with this field.</param>
            <returns>The name of the widget annotation's appearance stream that is used to display the widget in checked state.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.SetCheckedAppearanceStreamName(GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation,System.String)">
            <summary>
            Sets the name of a widget annotation's appearance stream that will be used to display the widget in checked state.
            <para>
            In Acrobat this name is specified as "Radio Button Choice" option
            in the Radio Button field properties.</para>
            Note that if the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.Opt"/> property is specified, then it is used in the Acrobat interface.
            </summary>
            <param name="wa">One of <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>s associated with this field.</param>
            <param name="name">The name of the appearance stream to use for checked state.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.SetCheckedAppearanceStreamNames(System.String)">
            <summary>
            Sets the name of an appearance stream that will be used by the widget annotations
            associated with this field to display the widgets in checked state.
            <para>
            In Acrobat this name is specified as "Radio Button Choice" option
            in the Radio Button field properties.</para>
            Note that if the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.Opt"/> property is specified, then it is used in the Acrobat interface.
            </summary>
            <param name="name">The name of the appearance stream to use for checked state.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.Opt">
            <summary>
            Gets or sets an array of strings containing one entry for each widget annotation,
            defining export values for its constituent radio buttons.
            See the PDF spec for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.Value">
            <summary>
            Gets or sets the value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/>.
            Value can be specified as index of the widget in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Widgets"/> list,
            as string containing name of the widget.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.DefaultValue">
            <summary>
            Gets or sets the default value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/>.
            Default value can be specified as index of the widget in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Widgets"/> list,
            as string containing name of the widget.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField.RadiosInUnison">
            <summary>
            Gets or sets a value indicating whether a group of radio buttons within a radio button field
            that use the same value for the on state will turn on and off in unison;
            that is if one is checked, they are all checked.
            If clear, the buttons are mutually exclusive (the same behavior as HTML radio buttons).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFieldsType">
            <summary>
            Defines possible values of <see cref="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.Type"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFieldsType.All">
            <summary>
            All fields should be processed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFieldsType.SpecifiedOnly">
            <summary>
            Fields which names are specified in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.FieldNames"/> are processed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFieldsType.AllButSpecified">
            <summary>
            Fields which names are NOT specified in <see cref="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.FieldNames"/> are submitted.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields">
            <summary>
            Defines range of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> objects to be locked when <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureField"/> is signed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.#ctor(GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFieldsType,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields"/> class.
            </summary>
            <param name="type">The type of range.</param>
            <param name="fieldNames">The list of fields' names to include / exclude.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.EnumerateFields(GrapeCity.Documents.Pdf.AcroForms.FieldCollection,System.Action{GrapeCity.Documents.Pdf.AcroForms.Field})">
            <summary>
            Enumerates fields processed by this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.Type">
            <summary>
            Gets or sets the type of the range.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.FieldNames">
            <summary>
            Gets or sets the list of fields' names which should be included / excluded from processing depending on <see cref="P:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields.Type"/> property.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.SignatureField">
            <summary>
            Represents the signature field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.SignatureField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.SignatureField.Widget">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> defining view properties of the text field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.SignatureField.LockedFields">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields"/> object defining
            a set of form fields to be locked when this signature field is signed,
            if null then no fields are locked.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.SignatureField.Value">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object that defines this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureField"/>.
            <para>Setting this property to null removes the signature from the document.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AcroForms.TextField">
            <summary>
            Represents the text field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.RichTextValue">
            <summary>
            Gets or sets the rich text to be displayed in the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>.
            This text can be formatted using HTML tags, see PDF specification for details.
            <para>Note that GcPdf does not automatically regenerates appearance streams for text fields containing RTF text.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.DefaultStyleString">
            <summary>
            Gets or sets the default style string used when the field value is specified using <see cref="P:GrapeCity.Documents.Pdf.AcroForms.TextField.RichTextValue"/>.
            See PDF specification for details.
            <para>Note that GcPdf does not automatically regenerates appearance streams for text fields containing RTF text.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Widget">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> defining view properties of the text field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Value">
            <summary>
            Gets or sets the value of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.DefaultValue">
            <summary>
            Gets or sets the default value of this <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>,
            applied when the field is reset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.MaxLen">
            <summary>
            Gets or sets the maximum length of the field’s text, in characters.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Multiline">
            <summary>
            Gets or sets a value indicating whether the field can contain multiple lines of text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Password">
            <summary>
            Gets or sets a value indicating whether the field is intended for entering a secure password that
            should not be echoed visibly to the screen.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.SpellCheck">
            <summary>
            Gets or sets a value indicating whether the text entered in the field is spell-checked.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Scrollable">
            <summary>
            Gets or sets a value indicating whether the field is scrollable to accommodate more text than
            fits within its annotation rectangle.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.AcroForms.TextField.RichText">
            <summary>
            Gets or sets a value indicating whether the value of this field should be represented as a rich text string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.SetPercentFormat(System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle)">
            <summary>
            Imposes the specified percentage formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>.
            <para>
            Note that this method initializes the values of <b>Field.Events.FormatValue</b> and <b>Field.Events.KeyPress</b> only,
            it does not change the field's value or widget appearance streams.
            </para>
            </summary>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.SetPercentValue(System.Double,System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle)">
            <summary>
            Imposes the specified percentage formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>,
            and assigns to it the specified value as percentage.
            </summary>
            <param name="value">The percentage value to assign. For example, 1 corresponds to 100%, 0.5 to 50%, and so on.</param>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.SetNumberFormat(System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle,GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle,System.String,GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle)">
            <summary>
            Imposes the specified numeric formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>.
            <para>
            Note that this method initializes the values of <b>Field.Events.FormatValue</b> and <b>Field.Events.KeyPress</b> only,
            it does not change the field's value or widget appearance streams.
            </para>
            </summary>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
            <param name="negativeStyle">How negative numbers are displayed.</param>
            <param name="currencySymbol">The currency symbol, or <see langword="null"/> or empty string.</param>
            <param name="currencySymbolStyle">The location of the currency symbol in relation to the number.
            This parameter is meaningful only if <paramref name="currencySymbol"/> is not <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.SetNumberValue(System.Double,System.Int32,GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle,GrapeCity.Documents.Pdf.AcroForms.Field.NumberNegativeStyle,System.String,GrapeCity.Documents.Pdf.AcroForms.Field.CurrencySymbolStyle)">
            <summary>
            Imposes the specified numeric formatting options on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>,
            and assigns to it the specified value as a number.
            </summary>
            <param name="value">The value to assign.</param>
            <param name="decimalPlaces">The number of digits that appear to the right of the decimal point. Valid values are from 0 to 10, inclusive.</param>
            <param name="separatorStyle">The placement of commas and periods, see <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field.NumberSeparatorStyle"/>.</param>
            <param name="negativeStyle">How negative numbers are displayed.</param>
            <param name="currencySymbol">The currency symbol, or <see langword="null"/> or empty string.</param>
            <param name="currencySymbolStyle">The location of the currency symbol in relation to the number.
            This parameter is meaningful only if <paramref name="currencySymbol"/> is not <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.SetDateFormat(System.String)">
            <summary>
            Imposes the specified date format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"m/d/yyyy"</b> or <b>"d-mmm-yy"</b>.
            </para>
            <para>
            Note that this method initializes the values of <b>Field.Events.FormatValue</b> and <b>Field.Events.KeyPress</b> only,
            it does not change the field's value or widget appearance streams.
            </para>
            </summary>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.SetDateValue(System.DateTime,System.String)">
            <summary>
            Imposes the specified date format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>,
            and assigns to it the specified value as a date.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"m/d/yyyy"</b> or <b>"d-mmm-yy"</b>.
            </para>
            </summary>
            <param name="value">The value to assign.</param>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.SetTimeFormat(System.String)">
            <summary>
            Imposes the specified time format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"HH:MM"</b> or <b>"H:MM tt"</b>.
            </para>
            <para>
            Note that this method initializes the values of <b>Field.Events.FormatValue</b> and <b>Field.Events.KeyPress</b> only,
            it does not change the field's value or widget appearance streams.
            </para>
            </summary>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.SetTimeValue(System.DateTime,System.String)">
            <summary>
            Imposes the specified time format string on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>,
            and assigns to it the specified value as time.
            <para>
            The syntax of the format string is similar to .NET format strings. Some examples are <b>"HH:MM"</b> or <b>"H:MM tt"</b>.
            </para>
            </summary>
            <param name="value">The value to assign.</param>
            <param name="format">The format string. Cannot be <see langword="null"/> or empty.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.SetSpecialFormat(GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat)">
            <summary>
            Imposes the specified special format on the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/>.
            <para>
            Note that this method initializes the values of <b>Field.Events.FormatValue</b> and <b>Field.Events.KeyPress</b> only,
            it does not change the field's value or widget appearance streams.
            </para>
            </summary>
            <param name="specialFormat">The special format to use.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.AcroForms.TextField.SetSpecialFormatValue(System.String,GrapeCity.Documents.Pdf.AcroForms.Field.SpecialFormat)">
            <summary>
            Sets the value of the current <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/> as a value
            formatted according to <paramref name="format"/>.
            <para>
            This method assumes that <paramref name="value"/> is already formatted as required.
            E.g. if <paramref name="format"/> is SSN, <paramref name="value"/> should look like <b>"123-45-6789"</b>.
            </para>
            </summary>
            <param name="value">The value to assign.</param>
            <param name="format">The special format to use.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionBase">
            <summary>
            Base class for PDF actions which can be performed when user clicks links, document outlines etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionBase.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionBase.Next">
            <summary>
            Gets or sets the next <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> or sequence of actions to be performed after this action.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionGoTo">
            <summary>
            Defines a go-to action changes the view to a specified destination (page, location, and magnification factor),
            defined by the <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionGoTo.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoTo"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionGoTo.#ctor(GrapeCity.Documents.Pdf.DestinationBase)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoTo"/> class.
            </summary>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object defining the new document view.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionGoTo.Dest">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object defining the new document view.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionGoTo.PageIndex">
            <summary>
            Gets the index of this destination's target page.
            Returns null if the target page was specified as a <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionGoTo.Page">
            <summary>
            Gets this destination's target <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            Returns null if the target page was specified by index.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionGoToR">
            <summary>
            Defines a remote go-to action is similar to an ordinary go-to action <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoTo"/>
            but jumps to a destination in another PDF file instead of the current file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionGoToR.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoToR"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionGoToR.#ctor(GrapeCity.Documents.Pdf.FileSpecification,GrapeCity.Documents.Pdf.DestinationBase,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoToR"/> class.
            </summary>
            <param name="file">The <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object defining another file.</param>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object defining the new document view.</param>
            <param name="newWindow">A flag specifying whether to open the destination document in a new window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionGoToR.#ctor(System.String,GrapeCity.Documents.Pdf.DestinationBase,System.Boolean)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoToR"/> class.
            </summary>
            <param name="fileName">The name of another file.</param>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object defining the new document view.</param>
            <param name="newWindow">A flag specifying whether to open the destination document in a new window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionGoToR.File">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object defining the another file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionGoToR.Dest">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> object defining the new document view.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionGoToR.NewWindow">
            <summary>
            Gets a value indicating whether to open the destination document in a new window.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionLaunch">
            <summary>
            Defines a launch action launches an application or opens or prints a document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionLaunch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionLaunch"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.File">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object defining application to be launched
            or the document to be opened or printed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.Win">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs"/> object defining windows-specific parameters of the launch action.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.NewWindow">
            <summary>
            Gets or sets a value indicating whether to open the destination document in a new window.
            This property is ignored if this action is not a PDF document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs">
            <summary>
            Defines windows-specific launch parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.FileName">
            <summary>
            Gets or sets the file name of the application to be launched or the document to be opened or printed,
            in standard Windows pathname format.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.Directory">
            <summary>
            Gets or sets the directory in standard DOS syntax.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.Operation">
            <summary>
            Gets or sets the operation to perform.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.Parameter">
            <summary>
            Gets or sets the parameter to be passed to the application.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.OperationType">
            <summary>
            Defines possible operations for windows platform.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.OperationType.Open">
            <summary>
            Open a document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionLaunch.WinAttrs.OperationType.Print">
            <summary>
            Print a document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionHide">
            <summary>
            Represents a hide action, hides or shows one or more <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>s on
            screen by setting or clearing their Hidden flag.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionHide.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionHide"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionHide.LinkedObjects">
            <summary>
            Gets or sets an array of objects which are linked with this <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionHide"/>.
            It can be an <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> object or a string defining the fully qualified field name of an
            interactive form field whose associated widget annotation or annotations are to be affected.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionHide.Hide">
            <summary>
            Gets or sets a flag indicating whether to hide the annotation (if property is true) or show it.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionHide.ILinkedObject">
            <summary>
            The common interface for objects which can be added to the
            <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionHide.LinkedObjects"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionHide.LinkedObjectCollection">
            <summary>
            Represents a collection of objects supporting the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionHide.ILinkedObject"/> interface:
            <list type="bullet">
            <item>IPdfString</item>
            <item>WidgetAnnotation</item>
            <item>Field</item>
            </list>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionHide.LinkedObjectCollection.Add(System.String)">
            <summary>
            Creates an instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> from <paramref name="item"/>
            and adds it to the collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionURI">
            <summary>
            Defines an URI action causes navigation to specified URI.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionURI.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionURI"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionURI.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionURI"/> class,
            specifying the URI to navigate to.
            <para>
            Note that if the <paramref name="uri"/> includes non-ASCII characters, it should be encoded
            as a URL, using methods such as System.Web.HttpUtility.UrlPathEncode or similar.
            </para>
            </summary>
            <param name="uri">The URI to navigate to.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionURI.URI">
            <summary>
            Gets or sets the URI to navigate.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionURI.IsMap">
            <summary>
            Gets or sets a value indicating whether to track the mouse position when the URI is resolved.
            </summary>
            <remarks>
            This property applies only to actions triggered by the user’s clicking an annotation;
            it is ignored for actions associated with <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> or with a <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.OpenAction"/>
            property.
            </remarks>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionJavaScript">
            <summary>
            Defines an action causes a script to be compiled and executed by the JavaScript interpreter.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionJavaScript.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionJavaScript"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionJavaScript.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionJavaScript"/> class.
            </summary>
            <param name="javaScript">The JavaScript to execute.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionJavaScript.JavaScript">
            <summary>
            Gets or sets the JavaScript to execute.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase">
            <summary>
            Base class for <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/> and <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionResetForm"/>,
            which operates over set of specified fields.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.Fields">
            <summary>
            Gets the list of fields that should be processed or excluded from processing
            (depending on the value of <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.ExcludeSpecifiedFields"/>) by this action.
            An item in this list can be either a field's name specified as a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>,
            or the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> object itself.
            An empty list means that all fields are included.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.ExcludeSpecifiedFields">
            <summary>
            Gets or sets a value indicating whether the fields specified by the <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.Fields"/> list
            should be excluded for processing.
            By default this property is <see langword="false"/>, which means that the fields
            in the list are processed. If this property is set to <see langword="true"/>,
            the fields in the list are excluded from processing.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.IFieldDef">
            <summary>
            The common interface for objects which can be added to the
            <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.Fields"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm">
            <summary>
            Defines an action that transmits the names and values of selected interactive form fields to a specified
            uniform resource locator (URL), presumably the address of a Web server that will process them and send back a response.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/>.
            </summary>
            <param name="uri">The URL of the script at the Web server that will process the submission.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.URI">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object defining URL of the script at the Web server that will process the submission.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.IncludeFieldsWithNoValue">
            <summary>
            Gets or sets a value indicating whether the fields without a value should be included in request.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.Fields"/>
            <seealso cref="P:GrapeCity.Documents.Pdf.Actions.ActionFieldsBase.ExcludeSpecifiedFields"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.CanonicalDateFormat">
            <summary>
            Gets or sets a value indicating whether any submitted field values representing dates are converted to
            the standard format described in PDF specification.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormat">
            <summary>
            Gets or sets the format which should be used in request.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.HtmlFormFormat">
            <summary>
            Gets or sets additional flags used if <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormat"/> is <see cref="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.HtmlForm"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormat">
            <summary>
            Gets or sets additional flags used if <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormat"/> is <see cref="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.FDF"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.PDFFormat">
            <summary>
            Gets or sets additional flags used if <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormat"/> is <see cref="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.PDF"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType">
            <summary>
            Defines possible values of <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormat"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.HtmlForm">
            <summary>
            Field names and values are submitted in HTML Form format.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.FDF">
            <summary>
            Field names and values are submitted in Forms Data Format (FDF).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.XFDF">
            <summary>
            Field names and values are submitted as XFDF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.SubmitFormatType.PDF">
            <summary>
            Document is submitted as PDF, using the MIME content type "application/pdf".
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.HtmlFormFormatFlags">
            <summary>
            Defines possible values of <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.HtmlFormFormat"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.HtmlFormFormatFlags.GetMethod">
            <summary>
            Indicates whether field names and values are submitted using an HTTP GET request,
            otherwise they are submitted using a POST request.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.HtmlFormFormatFlags.SubmitCoordinates">
            <summary>
            Indicates whether the coordinates of the mouse click that caused the submit-form
            action are transmitted as part of the form data.
            </summary>
            <remarks>
            The coordinate values are relative to the upper-left corner of the field’s rectangle.
            They are represented in the data in the format
            name.x = xval &amp; name.y = yval
            where name is the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.MappingName"/> if present; otherwise, name is the field name.
            If the value of the <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.MappingName"/> is a single space character,
            both the name and the dot following it are suppressed, resulting in the format
            x = xval &amp; y = yval
            </remarks>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags">
            <summary>
            Defines possible values of <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormat"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.IncludeAppendSaves">
            <summary>
            If set, the submitted FDF file includes the contents of all incremental updates to the underlying PDF document,
            as contained in the Differences entry in the FDF dictionary.
            If clear, the incremental updates are not included.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.IncludeAnnotations">
            <summary>
            If set, the submitted FDF file includes all markup annotations in the underlying PDF document.
            If clear, markup annotations are not included.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.ExclNonUserAnnots">
            <summary>
            Meaningful only when the <see cref="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.IncludeAnnotations"/> flag is set.
            If set, it includes only those markup annotations whose <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.UserName"/> matches the name of the current user,
            as determined by the remote server to which the form is being submitted.
            This allows multiple users to collaborate in annotating a single remote PDF document
            without affecting one another’s annotations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.ExclFKey">
            <summary>
            If set, the submitted FDF excludes the F entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.FDFFormatFlags.EmbedForm">
            <summary>
            If set, the F entry of the submitted FDF is a file specification containing an embedded file stream
            representing the PDF file from which the FDF is being submitted.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.PDFFormatFlags">
            <summary>
            Defines possible values of <see cref="P:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.PDFFormat"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm.PDFFormatFlags.GetMethod">
            <summary>
            Indicates whether the PDF document submitted using an HTTP GET request,
            otherwise it is submitted using a POST request.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionResetForm">
            <summary>
            Defines an action resets selected interactive form fields to their default values;
            If no default value is defined for a field, its value is cleared.
            For fields that can have no value (such as <see cref="T:GrapeCity.Documents.Pdf.AcroForms.PushButtonField"/>), the action has no effect.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionResetForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionSubmitForm"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionImportData">
            <summary>
            Defines an action imports Forms Data Format (FDF) data into the document’s interactive form from a specified file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionImportData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionImportData"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionImportData.#ctor(GrapeCity.Documents.Pdf.FileSpecification)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionImportData"/>.
            </summary>
            <param name="file">The <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object defining FDF file from which to import data.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionImportData.File">
            <summary>
            Gets or sets the FDF file from which to import the data.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionNamed">
            <summary>
            Defines an action performs some viewer application action: Go to next / previous page, etc.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionNamed.NextPage">
            <summary>
            Go to the next page of the document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionNamed.PrevPage">
            <summary>
            Go to the previous page of the document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionNamed.FirstPage">
            <summary>
            Go to the first page of the document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Actions.ActionNamed.LastPage">
            <summary>
            Go to the last page of the document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionNamed.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionNamed"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Actions.ActionNamed.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionNamed"/>.
            </summary>
            <param name="name">The name of the action.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Actions.ActionNamed.Name">
            <summary>
            Gets or sets the name of action.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Actions.ActionUnknown">
            <summary>
            Defines an unknown action.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.HighlightingMode">
            <summary>
            Specifies the possible highlighting modes for various annotations, <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> etc.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.HighlightingMode.None">
            <summary>
            No highlighting.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.HighlightingMode.Invert">
            <summary>
            Invert the contents of the annotation rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.HighlightingMode.Outline">
            <summary>
            Invert the annotation’s border.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.HighlightingMode.Push">
            <summary>
            Display the annotation as if it were being pushed below the surface of the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AnnotationCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> objects owned by the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object that owns this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AnnotationPagesCollection">
            <summary>
            Defines collection of <see cref="T:GrapeCity.Documents.Pdf.Page"/> objects referenced from <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationPagesCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> object that owns this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationPagesCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationPagesCollection.RemoveAllExcept(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Removes all items from this collection except <paramref name="item"/>.
            </summary>
            <param name="item">The item what should not be removed.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags">
            <summary>
            Specifies the various characteristics of an <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.None">
            <summary>
            Empty.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.Invisible">
            <summary>
            Do not display the annotation if it does not belong to one of the standard annotation types and no annotation handler
            is available. If clear, display such an unknown annotation using an appearance stream specified by its
            appearance dictionary, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.Hidden">
            <summary>
            Do not display or print the annotation or allow it to interact with the user,
            regardless of its annotation type or whether an annotation handler is available.
            In cases where screen space is limited, the ability to hide and show annotations selectively
            can be used in combination with appearance streams to display auxiliary pop-up information similar
            in function to online help systems.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.Print">
            <summary>
            Print the annotation when the page is printed.
            If clear, never print the annotation, regardless of whether it is displayed on the screen.
            This can be useful, for example, for annotations representing interactive pushbuttons,
            which would serve no meaningful purpose on the printed page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.NoZoom">
            <summary>
            Do not scale the annotation’s appearance to match the magnification of the page.
            The location of the annotation on the page (defined by the upper-left corner of its annotation rectangle) remains fixed,
            regardless of the page magnification.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.NoRotate">
            <summary>
            Do not rotate the annotation’s appearance to match the rotation of the page.
            The upper-left corner of the annotation rectangle remains in a fixed location on the page,
            regardless of the page rotation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.NoView">
            <summary>
            Do not display the annotation on the screen or allow it to interact with the user.
            The annotation may be printed (depending on the setting of the Print flag) but should be considered hidden
            for purposes of on-screen display and user interaction.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.ReadOnly">
            <summary>
            Do not allow the annotation to interact with the user.
            The annotation may be displayed or printed (depending on the settings of the NoView and Print flags)
            but should not respond to mouse clicks or change its appearance in response to mouse motions.
            This flag is ignored for widget annotations; its function is subsumed by the ReadOnly flag of the associated form field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.Locked">
            <summary>
            Do not allow the annotation to be deleted or its properties (including position and size) to be modified by the user.
            However, this flag does not restrict changes to the annotation’s contents, such as the value of a form field.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.ToggleNoView">
            <summary>
            Invert the interpretation of the NoView flag for certain events.
            A typical use is to have an annotation that appears only when a mouse cursor is held over it.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationFlags.LockedContents">
            <summary>
            Do not allow the contents of the annotation to be modified by the user.
            This flag does not restrict deletion of the annotation or changes to other annotation properties,
            such as position and size.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle">
            <summary>
            Specifies the possible line ending styles.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.None">
            <summary>
            No line ending.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.Square">
            <summary>
            A square filled with the annotation’s interior color, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.Circle">
            <summary>
            A circle filled with the annotation’s interior color, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.Diamond">
            <summary>
            A diamond shape filled with the annotation’s interior color, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.OpenArrow">
            <summary>
            Two short lines meeting in an acute angle to form an open arrowhead.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.ClosedArrow">
            <summary>
            Two short lines meeting in an acute angle as in the OpenArrow style and connected by a third line to form
            a triangular closed arrowhead filled with the annotation’s interior color, if any.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.Butt">
            <summary>
            A short line at the endpoint perpendicular to the line itself.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.ROpenArrow">
            <summary>
            Two short lines in the reverse direction from OpenArrow.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.RClosedArrow">
            <summary>
            A triangular closed arrowhead in the reverse direction from ClosedArrow.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineEndingStyle.Slash">
            <summary>
            A short line at the endpoint approximately 30 degrees clockwise from perpendicular to the line itself
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase">
            <summary>
            The abstract base class for all PDF annotation types.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.EmptyPdfNameArray">
            <summary>
            The array of one element containing <b>PdfName.Std.EmptyName</b>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AutoBuildAppearance">
            <summary>
            Indicates whether appearance properties (appearance streams, default appearance string etc) should be auto generated
            for this annotation when document saved.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.TopLeftRect">
            <summary>
            Indicates whether the value of Rect entry is specified relative to the top left corner of the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.TopLeftRD">
            <summary>
            Indicates whether the value of RD entry is specified relative to the top left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.InitBorder">
            <summary>
            Initializes the <see cref="F:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.m_Border"/> field from underlying PDF dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.BorderToPdfDictionary">
            <summary>
            Copies properties of the <see cref="F:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.m_Border"/> to the underlying PDF object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.ConvertToPdfCoords">
            <summary>
            Called from <see cref="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.BeforeSave"/> method converts all coordinates relative to top-left
            corner of the page to PDF user space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.EnumerateAppearanceDict(GrapeCity.Documents.Pdf.Spec.IPdfDict,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.FormXObject,System.Boolean})">
            <summary>
            Enumerates all appearance streams in the appearance dict like
            "D", "N", "R".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.EnumerateAppearanceStreams(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.FormXObject,System.Boolean})">
            <summary>
            Enumerates appearance streams (<see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects) for specified
            appearance entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Border">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.Border"/> object defining annotation's border.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.DefaultAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance"/> object, allows editing <b>DA</b> entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Opacity">
            <summary>
            Gets or sets the opacity value to be used in painting the annotation.
            This value applies to all visible elements of the annotation in its closed state
            (including its background and border) but not to the pop-up window that appears when the annotation is opened.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.TryGetLE(GrapeCity.Documents.Pdf.Spec.IPdfArray@)">
            <summary>
            Tries to get <b>LE</b> entry, it should be an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetOrCreateLE">
            <summary>
            Gets existing or create new <b>LE</b> entry, by default it has value: [/None, /None].
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetLEItem(System.Int32)">
            <summary>
            Gets the value of <b>LE</b> entry at specified index.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.SetLEItem(System.Int32,GrapeCity.Documents.Pdf.Annotations.LineEndingStyle)">
            <summary>
            Sets the value of <b>LE</b> entry at specified index,
            returns true if value was actually changed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetC">
            <summary>
            Returns a value of "C" entry, the <see cref="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetDefColor"/> used as default value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.SetC(System.Drawing.Color)">
            <summary>
            Sets a value of "C" entry, the <see cref="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetDefColor"/> used as default value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetIC(System.Drawing.Color)">
            <summary>
            Returns a value of "IC" entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.SetIC(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Sets a value of "IC" entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetRect">
            <summary>
            Gets value of <b>Rect</b> entry related to the top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.SetRectSilent(System.Drawing.RectangleF)">
            <summary>
            Sets value of <b>Rect</b> entry, does not change the <b>Changed</b>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.SetRect(System.Drawing.RectangleF)">
            <summary>
            Sets value of <b>Rect</b> entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.TryGetAP(GrapeCity.Documents.Pdf.Spec.IPdfDict@)">
            <summary>
            Tries to get the <b>AP</b> dict.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.RemoveAppearanceStreams">
            <summary>
            Removes all appearance streams.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.RemoveAppearanceStreams(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Remove appearance steams for specified appearance.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.RemoveAppearanceStream(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Removes the appearance stream.
            </summary>
            <param name="appearanceKey">The name of appearance entry "N", "D" or "R".</param>
            <param name="appearanceStreamName">The name of appearance stream in the appearance entry.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetAppearanceStream(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Gets the appearance stream.
            </summary>
            <param name="appearanceKey">The name of appearance entry "N", "D" or "R".</param>
            <param name="appearanceStreamName">The name of appearance stream in the appearance entry.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.SetAppearanceStream(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.FormXObject)">
            <summary>
            Sets the appearance stream.
            </summary>
            <param name="appearanceKey">The name of appearance entry "N", "D" or "R".</param>
            <param name="appearanceStreamName">The name of appearance stream in the appearance entry.</param>
            <param name="value">The new appearance stream, can be null, in this case it will be removed.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.ChangeAppearanceStreamName(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Changes the name of appearance stream, does nothing if appearance stream with name
            <paramref name="curAppearanceStreamName"/> does not exist.
            </summary>
            <param name="appearanceKey">The name of appearance entry "N", "D" or "R".</param>
            <param name="curAppearanceStreamName">The current name of appearance stream in the appearance entry.</param>
            <param name="newAppearanceStreamName">The new name of appearance stream in the appearance entry.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetAppearanceStreamNames(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> objects with names of appearance streams
            for specified appearance entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetAppearanceStreamNames(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> objects with names of appearance streams
            for specified appearance entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetCheckedAppearanceStreamName(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns name of appearance stream used to show the annotation in the checked state,
            the method has the meaning for <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> of 
            <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/> or <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.GetCheckedAppearanceStreamName(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns name of appearance stream used to show the annotation in the checked state,
            the method has the meaning for <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> of 
            <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/> or <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.OnPropertyAffectingAppearanceChanged">
            <summary>
            Called when property affecting annotation's appearance was changed.
            This method sets <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AutoBuildAppearance"/> to true, so annotation's appearance
            properties will be automatically regenerated when document saved.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.OnAppearancePropertyChanged">
            <summary>
            Called when property defining annotation's appearance was changed.
            This method sets <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AutoBuildAppearance"/> to false so annotation's appearance
            properties will NOT automatically regenerated.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.BuildAppearance">
            <summary>
            Builds widgets appearance streams and other appearance properties.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.EnumerateAppearanceStreams(System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.FormXObject,System.Boolean})">
            <summary>
            Enumerates all appearance streams (<see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects) for ALL
            appearance entries.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.EnumerateResourceDictionaries(System.Func{GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.Boolean})">
            <summary>
            Enumerates the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> objects referenced by this annotation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.CreateAppearanceContentStreamCheckContext">
            <summary>
            Creates an instance of <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> that can be used
            to define the annotation's appearance stream.
            <para>
            Note that when this method is called, the annotation must already 
            have been added to the document, otherwise an exception will be thrown.
            Note depending on context the created <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> references
            the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> of the <see cref="T:GrapeCity.Documents.Pdf.Page"/> owning
            the annotation or uses its own <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/>.
            </para>
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> object.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.propAppearanceState">
            <summary>
            Gets or sets the value of "AS" entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.CreateAppearanceContentStream">
            <summary>
            Creates an instance of <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> that can be used
            to define the annotation's appearance stream.
            <para>
            Note that when this method is called, the annotation must already 
            have been added to the document, otherwise an exception will be thrown.
            </para>
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.ResetAppearance">
            <summary>
            Forces regeneration of the annotation's appearance streams
            next time the document is saved.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.RemoveAppearance">
            <summary>
            Removes all appearance streams associated with the current annotation,
            and disables generation of appearance steams for this annotation when the document is saved.
            <para>
            Note that if any property affecting the annotation's appearance (such as <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect"/>) is then changed,
            the appearance streams will be regenerated. So this method would usually be called after
            initializing all annotation's properties.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rotate">
            <summary>
            For internal use only.
            <para>
            Gets or sets the annotation rotation angle in degrees.
            </para>
            <para>
            Note 1: This angle does NOT affect the area occupied by the annotation area on a page,
            it only affects the image inside the annotation bounds.
            </para>
            <para>
            Note 2: This property is not documented in the PDF specification, 
            but it has been experimentally found that this property is used by Acrobat
            for some kinds of annotations, currently it works for <see cref="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotation"/>.
            </para>
            <para>
            Note 3: The <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> has a similar property
            Orientation that can have values 0, 90, 180 or 270, and is stored
            as a property in the MK sub-dictionary.
            The <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rotate"/> property does not affect <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Layer">
            <summary>
            Gets or sets an object that specifies the layer to which this annotation belongs.
            <para>
            This can be either an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.ModifiedDate">
            <summary>
            Gets or sets the date and time when the annotation was modified.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.UserData">
            <summary>
            Gets or sets arbitrary data associated with the current annotation.
            <para>Note that this data is runtime only and is not persisted in the PDF.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Contents">
            <summary>
            Gets or sets the text to be displayed for the annotation or,
            if this type of annotation does not display text,
            an alternate description of the annotation’s contents in human-readable form.
            In either case, this text is useful when extracting the document’s contents in support of accessibility
            to users with disabilities or for other purposes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect">
            <summary>
            Gets or sets the rectangle that defines the location and size of the annotation on a page.
            The coordinates of the rectangle are relative to the upper left corner of the page's
            media box, with the Y (vertical) coordinates increasing from top to bottom.
            <para>
            Note that if the annotation is associated with more than one page,
            the media box of the first of those pages is used to calculate the rectangle's location.
            </para>
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.PdfRect"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.PdfRect">
            <summary>
            Gets or sets the rectangle that defines the location and size of the annotation on a page
            in PDF user space coordinates. 
            The positive X axis extends horizontally to the right, and the positive Y axis
            extends vertically upward, with the origin usually in the lower left corner of the page.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Flags">
            <summary>
            Gets or sets the flags specifying various characteristics of the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AssociatedFiles">
            <summary>
            Gets the list of embedded files associated with this <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Pages">
            <summary>
            Gets the list of pages that reference this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Page">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> that contains this annotation.
            <para>
            Note that an annotation may be referenced by several pages.
            In that case this property returns the first element in the 
            <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Pages"/> collection.
            </para>
            <para>
            When setting this property, the following applies:
            <list type="bullet">
            <item>If the new value is null, this annotation is removed from all pages.</item>
            <item>Otherwise, this annotation is assigned exclusively to the specified page.</item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Name">
            <summary>
            Gets or sets the annotation name, a text string uniquely identifying it among all annotations on its page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AppearanceStreams">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams"/> object that allows defining this annotation's appearance streams.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AppearanceState">
            <summary>
            Gets or sets the annotation’s appearance state, which selects the applicable appearance stream
            from an appearance sub-dictionary.
            Note! If you change this property then GcPdf will NOT automatically generates appearance
            content streams in <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.AppearanceStreams"/>.
            See PDF specification for more details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Locked">
            <summary>
            Gets or sets a value indicating whether the annotation can be deleted or its properties (including position and size) can be modified by the user.
            However, this flag does not restrict changes to the annotation’s contents, such as the value of a form field.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.LockedContents">
            <summary>
            Gets or sets a value indicating whether the contents of the annotation can be modified by the user.
            This flag does not restrict deletion of the annotation or changes to other annotation properties,
            such as position and size.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.Appearance">
            <summary>
            Represents the appearance of an annotation in normal, rollover and down states.
            <para>
            In the simplest case the appearance can be defined by a single <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> 
            specified by the <see cref="P:GrapeCity.Documents.Pdf.Annotations.Appearance.Default"/> property.
            </para>
            <para>
            In more complex cases it can be defined as a subdictionary
            specified by the <see cref="P:GrapeCity.Documents.Pdf.Annotations.Appearance.Item(System.String)"/> property.
            For example, an annotation representing an interactive check box might have two appearance states named On and Off.
            </para>
            <para>See PDF specification for details.</para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Appearance.Clear">
            <summary>
            Clears all defined appearances.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Appearance.GetStates">
            <summary>
            Gets the names of the appearance streams specified for the AnnotationBase.
            </summary>
            <returns>A string array containing the appearance streams' names.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Appearance.GetOnState">
            <summary>
            Gets the name of the appearance stream that is used to show
            RadioButtonField or CheckBoxField in the checked state.
            </summary>
            <returns>The name of the checked appearance stream.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Appearance.Annotation">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Appearance.Default">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> that is used when the widget has separate states.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Appearance.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> object for a specified state.
            </summary>
            <param name="state">The state of the annotation.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> associated with the specified state.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams">
            <summary>
            Represents a PDF Appearance Streams object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.Clear">
            <summary>
            Clears all appearances.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.Normal">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.Appearance"/> object defining normal appearance,
            used when the annotation is not interacting with the user.
            This appearance is also used for printing the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.Rollover">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.Appearance"/> object defining rollover appearance,
            used when the user moves the cursor into the annotation’s active area without pressing the mouse button.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.AppearanceStreams.Down">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.Appearance"/> object defining down appearance,
            used when the mouse button is pressed or held down within the annotation’s active area.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.BorderStyle">
            <summary>
            Defines possible border styles for fields.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.None">
            <summary>
            No border.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Solid">
            <summary>
            Solid border.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Dashed">
            <summary>
            Dashed border.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Beveled">
            <summary>
            Beveled, a simulated embossed rectangle that appears to be raised above the surface of the page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Inset">
            <summary>
            Inset, a simulated engraved rectangle that appears to be recessed below the surface of the page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Underline">
            <summary>
            Underline, a single line along the bottom of the annotation rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.Border">
            <summary>
            Defines properties of the annotation's border.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Border.IsVisible(System.Nullable{System.Drawing.Color})">
            <summary>
            Returns true if border is visible and should be rendered.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Border.AssignFrom(GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Copies all property values from another object.
            Note! This method does not raise <see cref="E:GrapeCity.Documents.Common.NotifyObject.PropertyChanged"/> event.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.Border.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Border.Width">
            <summary>
            Gets or sets the border's width in points (1/72 inch).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Border.Style">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Border.DashPattern">
            <summary>
            Gets or sets the dash pattern, used if <see cref="P:GrapeCity.Documents.Pdf.Annotations.Border.Style"/> == <see cref="F:GrapeCity.Documents.Pdf.Annotations.BorderStyle.Dashed"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.Border.Color">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.BorderEffectType">
            <summary>
            Enumerates the possible types of border effects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderEffectType.None">
            <summary>
            No effect.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.BorderEffectType.Cloudy">
            <summary>
            The border should appear "cloudy".
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.BorderEffect">
            <summary>
            Represents an effect to be applied to the border of an annotations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.BorderEffect.GetCloudyDiameter(System.Single)">
            <summary>
            Gets the diameter of the "cloudy" effect.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.BorderEffect.GetSize">
            <summary>
            Returns the size (in points, 1/72 inch) used to draw this <see cref="T:GrapeCity.Documents.Pdf.Annotations.BorderEffect"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.BorderEffect.Intensity">
            <summary>
            Gets or sets a number describing the intensity of the effect. Suggested values range from 0 to 2.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.BorderEffect.Type">
            <summary>
            Gets or sets the border effect type.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.CaretAnnotation">
            <summary>
            Represents a caret annotation, shown in a PDF as a visual symbol that indicates the presence of text edits.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.CaretAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.CircleAnnotation">
            <summary>
            Represents a circle annotation, which displays a circle on a page.
            When opened, they display a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.CircleAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.CircleAnnotation"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance">
            <summary>
            Represents the default appearance of an annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance.Text">
            <summary>
            Gets or sets the text representing the appearance as it will be stored in a PDF stream
            (e.g. "/DF0 10 Tf 0 0 0 rg").
            <para>Please see the PDF specification for details.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance.Font">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Text.Font"/> object.
            <para>
            In a newly created document the value of this property is null.
            If the value has not been set when the document is saved
            (and for fields, the owner field has been added to <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.AcroForm"/>),
            a default value is automatically assigned depending on the type
            of the current object's owner:
            </para>
            <para>
            <list type="bullet">
            <item><term>TextField, ComboBoxField, CombTextBoxField, ListBoxField, PushButton</term><description>The default font is Helvetica, 9pt, Black.</description></item>
            <item><term>CheckBoxField, RadioButtonField</term><description>The default font is ZapfDingbats, 0 (meaning auto-size), Black.
            (Note that for these field types ZapfDingbats will always be used regardless of the current setting.)</description></item>
            <item>RedactAnnotation, FreeTextAnnotation<term></term><description>The default font is Helvetica, 9pt, Black.</description></item>
            </list>
            </para>
            <para>
            When setting this property, you may use <see cref="M:GrapeCity.Documents.Text.FontCollection.FindFamilyName(System.String,System.Boolean,System.Boolean)"/>
            or other <see cref="T:GrapeCity.Documents.Text.FontCollection"/> methods to find a suitable font.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance.FontSize">
            <summary>
            Gets or sets the font size in points.
            <para>
            In a newly created document the value of this property is null.
            If the value has not been set when the document is saved
            (and for fields, the owner field has been added to <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.AcroForm"/>),
            a default value is automatically assigned depending on the type
            of the current object's owner:
            </para>
            <para>
            <list type="bullet">
            <item><term>TextField, ComboBoxField, CombTextBoxField, ListBoxField, PushButton</term><description>The default font is Helvetica, 9pt, Black.</description></item>
            <item><term>CheckBoxField, RadioButtonField</term><description>The default font is ZapfDingbats, 0 (meaning auto-size), Black.
            (Note that for these field types ZapfDingbats will always be used regardless of the current setting.)</description></item>
            <item>RedactAnnotation, FreeTextAnnotation<term></term><description>The default font is Helvetica, 9pt, Black.</description></item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance.ForeColor">
            <summary>
            Gets or sets the foreground color.
            <para>
            In a newly created document the value of this property is null.
            If the value has not been set when the document is saved
            (and for fields, the owner field has been added to <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.AcroForm"/>),
            a default value is automatically assigned depending on the type
            of the current object's owner:
            </para>
            <para>
            <list type="bullet">
            <item><term>TextField, ComboBoxField, CombTextBoxField, ListBoxField, PushButton</term><description>The default font is Helvetica, 9pt, Black.</description></item>
            <item><term>CheckBoxField, RadioButtonField</term><description>The default font is ZapfDingbats, 0 (meaning auto-size), Black.
            (Note that for these field types ZapfDingbats will always be used regardless of the current setting.)</description></item>
            <item>RedactAnnotation, FreeTextAnnotation<term></term><description>The default font is Helvetica, 9pt, Black.</description></item>
            </list>
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotationIcon">
            <summary>
            Specifies the type of attachment icon to use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotationIcon.Paperclip">
            <summary>
            Paper Clip attachment icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotationIcon.PushPin">
            <summary>
            Pushpin attachment icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotationIcon.Tag">
            <summary>
            Tag attachment icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotationIcon.Graph">
            <summary>
            Graph attachment icon.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation">
            <summary>
            Represents a reference to a file which typically is embedded in the PDF file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation.Icon">
            <summary>
            Gets or sets the type of the icon used to display the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation.File">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object that defines the referenced file.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation">
            <summary>
            Represents a free text annotation that displays text directly on a page.
            Unlike an ordinary text annotation (see <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotation"/>),
            a free text annotation has no open or closed state.
            Instead of being displayed in a pop-up window, the text is always visible.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.DefaultAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance"/> object that specifies
            the visual properties (font, font size etc.) used to format the content of the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.TextOffsets">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Common.Offsets"/> structure that defines
            the numerical differences between two rectangles:
            the <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect"/> and an inner rectangle contained within that rectangle.
            The inner rectangle is where the <see cref="T:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation"/>’s text should be displayed.
            <para>Note that if this rectangle is not specified then <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect"/>
            is used as the text rectangle.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.Opacity">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.Justification">
            <summary>
            Gets or sets the justification to be used in displaying the annotation’s text.
            See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.Color">
            <summary>
            Gets or sets the annotation color.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.StyleString">
            <summary>
            Gets or sets the default style string.
            See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.CalloutLine">
            <summary>
            Gets or sets an array of 2 or 3 <see cref="T:System.Drawing.PointF"/> structures specifying a callout line attached to the free text annotation.
            3 points represent the starting coordinates, the knee point, and the ending coordinates of the line.
            2 points represent the starting and ending coordinates of the line.
            The coordinates are in default user space relative to the upper left corner of the page's media box,
            with the Y (vertical) coordinates increasing from top to bottom.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.PdfCalloutLine">
            <summary>
            Gets or sets an array of 2 or 3 <see cref="T:System.Drawing.PointF"/> structures specifying a callout line attached to the free text annotation.
            3 points represent the starting coordinates, the knee point, and the ending coordinates of the line.
            2 points represent the starting and ending coordinates of the line.
            The coordinates are specified in PDF user space.
            The positive X axis extends horizontally to the right, and the positive Y axis
            extends vertically upward, with the origin usually in the lower left corner of the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.LineWidth">
            <summary>
            Gets or sets the line width in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.LineDashPattern">
            <summary>
            Gets or sets the line dash pattern. Null means a solid line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation.LineEndStyle">
            <summary>
            Gets or sets the style of end callout line.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.InkAnnotation">
            <summary>
            Represents a line annotation, that displays a single straight line on a page.
            When opened, it displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.InkAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.InkAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.InkAnnotation.LineWidth">
            <summary>
            Gets or sets the line width in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.InkAnnotation.LineDashPattern">
            <summary>
            Gets or sets the line dash pattern. Null means a solid line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.InkAnnotation.Paths">
            <summary>
            Gets or sets the list of lists of points, in which each list of points represents a stroked path.
            The coordinates of points are relative to the upper left corner of the page's
            media box, with the Y (vertical) coordinates increasing from top to bottom.
            <para>
            Note that if the annotation is associated with more than one page,
            the media box of the first of those pages is used to calculate the coordinates.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.InkAnnotation.PdfPaths">
            <summary>
            Gets or sets the list of lists of points, in which each list of points represents a stroked path
            in PDF user space coordinates.
            The positive X axis extends horizontally to the right, and the positive Y axis
            extends vertically upward, with the origin usually in the lower left corner of the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.LineAnnotationTextPosition">
            <summary>
            Specifies the possible positions of a text for <see cref="T:GrapeCity.Documents.Pdf.Annotations.LineAnnotation"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineAnnotationTextPosition.None">
            <summary>
            Text is not shown.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineAnnotationTextPosition.Inline">
            <summary>
            Text is centered inside the line.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.LineAnnotationTextPosition.Top">
            <summary>
            Text is on top of the line.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.LineAnnotation">
            <summary>
            Represents a line annotation, that displays a single straight line on a page.
            When opened, it displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LineAnnotation"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.TryGetL(GrapeCity.Documents.Pdf.Spec.IPdfArray@)">
            <summary>
            Tries to get <b>L</b> entry, it should be an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.GetOrCreateL">
            <summary>
            Gets existing or create new <b>L</b> entry, by default it has value: [0, 0, 0, 0].
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.GetLItem(System.Int32,System.Boolean)">
            <summary>
            Gets the point of <b>L</b> entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.SetLItem(System.Int32,System.Drawing.PointF,System.Boolean)">
            <summary>
            Sets the point of <b>L</b> entry,
            returns true if value was actually changed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.ConvertToPDFCoordsL">
            <summary>
            Converts values of <b>L</b> entry to PDF user space
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.TryGetCO(GrapeCity.Documents.Pdf.Spec.IPdfArray@)">
            <summary>
            Tries to get <b>CO</b> entry, it should be an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.GetOrCreateCO">
            <summary>
            Gets existing or create new <b>CO</b> entry, by default it has value: [0, 0].
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.GetCOItem(System.Int32)">
            <summary>
            Gets the value of <b>CO</b> entry at specified index.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.SetCOItem(System.Int32,System.Single)">
            <summary>
            Sets the value of <b>CO</b> entry at specified index,
            returns true if value was actually changed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.Start">
            <summary>
            Gets or sets the start point of the line annotation.
            The coordinates of the point are relative to the upper left corner of the page's
            media box, with the Y (vertical) coordinates increasing from top to bottom.
            <para>
            Note that if the annotation is associated with more than one page,
            the media box of the first of those pages is used to calculate the rectangle's location.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.PdfStart">
            <summary>
            Gets or sets the start point of the line annotation in PDF user space coordinates.
            The positive X axis extends horizontally to the right, and the positive Y axis
            extends vertically upward, with the origin usually in the lower left corner of the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.End">
            <summary>
            Gets or sets the end point of the line.
            The coordinates of the point are relative to the upper left corner of the page's
            media box, with the Y (vertical) coordinates increasing from top to bottom.
            <para>
            Note that if the annotation is associated with more than one page,
            the media box of the first of those pages is used to calculate the rectangle's location.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.PdfEnd">
            <summary>
            Gets or sets the end point of the line annotation in PDF user space coordinates.
            The coordinates of the point are in PDF user space coordinates.
            The positive X axis extends horizontally to the right, and the positive Y axis
            extends vertically upward, with the origin usually in the lower left corner of the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LineWidth">
            <summary>
            Gets or sets the line width in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LineDashPattern">
            <summary>
            Gets or sets the line dash pattern. Null means a solid line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LineStartStyle">
            <summary>
            Gets or sets the style of line start.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LineEndStyle">
            <summary>
            Gets or sets the style of line end.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LineEndingsFillColor">
            <summary>
            Gets or sets the interior color with which to fill the annotation’s line endings.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LeaderLinesLength">
            <summary>
            Gets or sets the length of leader lines in default user space that extend from each endpoint of the line perpendicular to the line itself.
            A positive value means that the leader lines appear in the direction that is clockwise when traversing
            the line from its starting point to its ending point.
            A negative value indicates the opposite direction.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LeaderLinesExtension">
            <summary>
            Gets or sets a non-negative number representing the length of leader line extensions that extend
            from the line proper 180 degrees from the leader lines.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.LeaderLineOffset">
            <summary>
            Gets or sets a non-negative number representing the length of the leader line offset,
            which is the amount of empty space between the endpoints of the annotation and the beginning
            of the leader lines.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.TextPosition">
            <summary>
            Gets or sets the annotation's text positioning.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.HorizontalTextOffset">
            <summary>
            Gets or sets the horizontal offset along the annotation line from its midpoint,
            with a positive value indicating offset to the right and a negative value indicating offset to the left.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LineAnnotation.VerticalTextOffset">
            <summary>
            Gets or sets the vertical offset perpendicular to the annotation line, with a positive value
            indicating a shift up and a negative value indicating a shift down.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation">
            <summary>
            Represents a hypertext link.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.#ctor(System.Drawing.RectangleF,GrapeCity.Documents.Pdf.DestinationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> class.
            </summary>
            <param name="rect">The bounds of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> on the containing page.</param>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> to be displayed when the annotation is activated.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.#ctor(System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Actions.ActionBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> class.
            </summary>
            <param name="rect">The bounds of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> on the containing page.</param>
            <param name="action">The <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> to be activated when the annotation is activated.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Dest">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> to be displayed when this <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> is activated.
            If both this property and <see cref="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Action"/> are specified, then <see cref="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Action"/> takes precedence
            and will be written into the PDF file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Action">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> to be performed when this <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/> is activated.
            If both <see cref="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Dest"/> and this property are specified, then this property takes precedence
            and will be written into the PDF file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Highlighting">
            <summary>
            Gets or sets the annotation's highlighting mode.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation.Border">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.AnnotationReferenceType">
            <summary>
            Specifies the possible relationships between related annotations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationReferenceType.Reply">
            <summary>
            The current annotation is a reply to a referenced annotation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.AnnotationReferenceType.Group">
            <summary>
            The current annotation and a referenced annotation is a single group.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation">
            <summary>
            The abstract base class for annotations that are used primarily to mark up PDF documents.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.UserName">
            <summary>
            Gets or sets the text label to be displayed in the title bar of the annotation’s pop-up window
            when open and active. By convention, this entry identifies the user who added the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.Opacity">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.RichText">
            <summary>
            Gets or sets the text to be displayed in the pop-up window when the annotation is opened.
            This text can be formatted using HTML tags, see PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.CreationDate">
            <summary>
            Gets or sets the date and time when the annotation was created.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.Subject">
            <summary>
            Gets or sets the text representing a short description of the subject being addressed by the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.ReferenceAnnotation">
            <summary>
            Gets or sets the annotation referenced by this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.ReferenceType">
            <summary>
            Gets or sets the relationship (reference type) between this annotation and the annotation specified by the <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.ReferenceAnnotation"/> property.
            The referenced annotation should be on the same page with the current annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.Popup">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation"/> annotation for entering or editing text associated with this annotation.
            Setting this property changes the <see cref="P:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation.Parent"/> property.
            A separate <see cref="T:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation"/> allows defining additional properties of 
            the popup window: color, position etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.Color">
            <summary>
            Gets or sets the annotation color,
            it used as color of popup window, lines color etc.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation">
            <summary>
            Represents a polygon annotation that displays a polygon on a page.
            When opened, it displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation.BorderEffect">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.BorderEffect"/> object defining the effect applied to the polygon.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase">
            <summary>
            Base class for <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation"/> and <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.FillColor">
            <summary>
            Gets or sets the interior color with which to fill the annotation's elements.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.Points">
            <summary>
            Gets or sets the points of polygon or polyline.
            The coordinates of points are relative to the upper left corner of the page's
            media box, with the Y (vertical) coordinates increasing from top to bottom.
            <para>
            Note that if the annotation is associated with more than one page,
            the media box of the first of those pages is used to calculate the coordinates.
            </para>
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.PdfPoints"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.PdfPoints">
            <summary>
            Gets or sets the points of polygon or polyline in PDF user space coordinates.
            The positive X axis extends horizontally to the right, and the positive Y axis
            extends vertically upward, with the origin usually in the lower left corner of the page.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.Points"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.LineWidth">
            <summary>
            Gets or sets the line width in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.LineDashPattern">
            <summary>
            Gets or sets the line dash pattern. Null means a solid line.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation">
            <summary>
            Represents a polyline annotation.
            When opened, it displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation.LineStartStyle">
            <summary>
            Gets or sets the style of line start.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation.LineEndStyle">
            <summary>
            Gets or sets the style of line end.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PolyLineAnnotation.LineEndingsFillColor">
            <summary>
            Gets or sets the interior color with which to fill the annotation’s line endings.
            Note! This property is a same as <see cref="P:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotationBase.FillColor"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation">
            <summary>
            The base class for annotations which are used primarily to mark up PDF documents.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation.Parent">
            <summary>
            Gets the parent <see cref="T:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation"/> of the current annotation.
            This property changes when the <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.ReferenceAnnotation"/> is changed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation.Open">
            <summary>
            Gets or sets a value specifying whether the pop-up annotation should initially
            be displayed open.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.PopupAnnotation.Color">
            <summary>
            Gets or sets the popup window color.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation">
            <summary>
            Represents a line annotation, that displays a single straight line on a page.
            When opened, it displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.Area">
            <summary>
            Gets or sets the list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> structures defining the annotation area.
            The coordinates of the quadrilaterals' points are relative to the upper left corner of the page's
            media box, with the Y (vertical) coordinates increasing from top to bottom.
            <para>
            Note that if the annotation is associated with more than one page,
            the media box of the first of those pages is used to calculate the coordinates.
            </para>
            <para>
            If not empty, these quadrilaterals denote the content region that is intended to be redacted.
            If this list is empty, the <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect"/> entry denotes the content region that is intended to be redacted.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.PdfArea">
            <summary>
            Gets or sets the list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> structures defining the annotation area.
            The coordinates of the quadrilaterals' points are in PDF user space coordinates.
            The positive X axis extends horizontally to the right, and the positive Y axis
            extends vertically upward, with the origin usually in the lower left corner of the page.
            <para>
            If not empty, these quadrilaterals denote the content region that is intended to be redacted.
            If this list is empty, the <see cref="P:GrapeCity.Documents.Pdf.Annotations.AnnotationBase.Rect"/> entry denotes the content region that is intended to be redacted.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayFillColor">
            <summary>
            Gets or sets the overlay fill color with which to fill the redacted region after the affected
            content has been removed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayText">
            <summary>
            Gets or sets the overlay text that should be drawn over the redacted region
            after the affected content has been removed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayTextRepeat">
            <summary>
            Gets or sets a value indicating whether the text specified by <see cref="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayText"/> should be repeated
            to fill the redacted region after the affected content has been removed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance"/> object that specifies
            the visual properties (font, font size etc.) used to format the overlay text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.Justification">
            <summary>
            Gets or sets the justification to be used in displaying the overlay text.
            See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.MarkBorderColor">
            <summary>
            Gets or sets the outline color used to highlight the annotation rectangle.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.MarkFillColor">
            <summary>
            Gets or sets the color used to fill the annotation rectangle.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.OverlayAppearanceStream">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.AddPolygon(System.Drawing.PointF[],GrapeCity.Documents.Drawing.FillMode)">
            <summary>
            Tessellates a polygon specified by its vertices into triangles,
            and adds those triangles to this annotation's <see cref="P:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation.Area"/>.
            </summary>
            <param name="points">The array of points that specify the vertices of the polygon.</param>
            <param name="fillMode">The fill mode.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotationIcon">
            <summary>
            Specifies the predefined icons used by <see cref="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.SoundAnnotationIcon.Speaker">
            <summary>
            The speaker icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.SoundAnnotationIcon.Mic">
            <summary>
            The microphone icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.SoundAnnotationIcon.Ear">
            <summary>
            The "ear" icon.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation"/> is analogous to a text annotation except that instead of a text note,
            it contains sound recorded from the computer’s microphone or imported from a file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation.Icon">
            <summary>
            Gets or sets a string specifying the name of an icon used to display the annotation.
            <para>
            The PDF specification provides a predefined set of icons, those are provided by the <see cref="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotationIcon"/> class.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation.Sound">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/> defining the sound to be played when the annotation is activated.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation">
            <summary>
            Represents a square annotation which displays a rectangle on a page.
            When opened, a square annotation displays a pop-up window containing the text of the associated note.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation.BorderEffect">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.BorderEffect"/> object defining effect applied to the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation.LineWidth">
            <summary>
            Gets or sets the line width in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation.LineDashPattern">
            <summary>
            Gets or sets the line dash pattern. Null means a solid line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation.FillColor">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon">
            <summary>
            Specifies the possible icons used to display a <see cref="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotation"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Approved">
            <summary>
            Approved icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.AsIs">
            <summary>
            AsIs icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Confidential">
            <summary>
            Confidential icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Departmental">
            <summary>
            Departmental icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Draft">
            <summary>
            Draft icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Experimental">
            <summary>
            Experimental icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Expired">
            <summary>
            Expired icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Final">
            <summary>
            Final icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.ForComment">
            <summary>
            ForComment icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.ForPublicRelease">
            <summary>
            ForPublicRelease icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.NotApproved">
            <summary>
            NotApproved icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.NotForPublicRelease">
            <summary>
            NotForPublicRelease icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.Sold">
            <summary>
            Sold icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon.TopSecret">
            <summary>
            TopSecret icon.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotation">
            <summary>
            Represents an annotation that displays text or graphics
            intended to look as if they were stamped on the page with a rubber stamp.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.RotationAngle">
            <summary>
            Gets the angle, in degrees, by which the stamp is rotated.
            Positive values indicate counterclockwise rotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.Icon">
            <summary>
            Gets or sets a string specifying the name of an icon used to display the annotation.
            <para>
            The PDF specification provides a predefined set of icons, those are provided by the <see cref="T:GrapeCity.Documents.Pdf.Annotations.StampAnnotationIcon"/> enumeration.
            </para>
            <para>
            In practice though this entry often contains names of custom icons specific to the application that created the document,
            hence this property is a string so it can accommodate arbitrary values.
            </para>
            To assign a predefined icon, use code like the following:
            <code>
            Icon = StampAnnotationIcon.Approved.ToString();
            </code>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.Font">
            <summary>
            Gets or sets a font to draw the stamp.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.ShowUserName">
            <summary>
            Gets or sets a value indicating whether to show <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.UserName"/> on the stamp.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.ShowCreationDate">
            <summary>
            Gets or sets a value indicating whether to show <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.CreationDate"/> on the stamp.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.CreationDateFormat">
            <summary>
            Gets or sets the format which should be used to display <see cref="P:GrapeCity.Documents.Pdf.Annotations.MarkupAnnotation.CreationDate"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.BorderWidth">
            <summary>
            Gets or sets the border width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.StampAnnotation.RotateContent(System.Single)">
            <summary>
            Rotates the annotation content by the specified angle.
            Positive values indicate counterclockwise rotation.
            <para>
            Note that the annotation must be added to a document before calling this method.
            </para>
            </summary>
            <param name="angleDegrees">The rotation angle in degrees.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon">
            <summary>
            Specifies the possible icons used to display a <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotation"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Note">
            <summary>
            Note icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Comment">
            <summary>
            Comment icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Key">
            <summary>
            Key icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Help">
            <summary>
            Help icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.NewParagraph">
            <summary>
            New paragraph icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Paragraph">
            <summary>
            Paragraph icon.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon.Insert">
            <summary>
            Insert icon.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotation">
            <summary>
            Represents a sticky note attached to a point in a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotation"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.GetIconSize(GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon,System.Single,System.Single)">
            <summary>
            Returns the size of the specified <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon"/>.
            </summary>
            <param name="icon">The <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextAnnotationIcon"/> value specifies the icon.</param>
            <param name="dpiX">The horizontal resolution used to calculate bounds of the icon.</param>
            <param name="dpiY">The vertical resolution used to calculate bounds of the icon.</param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.Open">
            <summary>
            Gets or sets a flag specifying whether the annotation should initially be displayed open.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.Icon">
            <summary>
            Gets or sets the type of the icon used to display the annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.State">
            <summary>
            Gets or sets the state to which the original annotation shall be set.
            <para>
            The following describes the predefined combinations of State and StateModel, and their meanings:
            </para>
            
            <list type="bullet">
            <term>StateModel "Marked", State "Marked"</term>
            <description>The annotation has been marked by the user.</description>
            <term>StateModel "Marked", State "Unmarked"</term>
            <description>The annotation has not been marked by the user (the default).</description>
            
            <term>StateModel "Review", State "Accepted"</term>
            <description>The user agrees with the change.</description>
            <term>StateModel "Review", State "Rejected"</term>
            <description>The user disagrees with the change.</description>
            <term>StateModel "Review", State "Cancelled"</term>
            <description>The change has been cancelled.</description>
            <term>StateModel "Review", State "Completed"</term>
            <description>The change has been completed.</description>
            <term>StateModel "Review", State "None"</term>
            <description>The user has indicated nothing about the change (the default).</description>
            </list>
            See PDF specification for more details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.StateModel">
            <summary>
            Gets or sets the state model corresponding to <see cref="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.State"/>.
            <para>
            See <see cref="P:GrapeCity.Documents.Pdf.Annotations.TextAnnotation.State"/> and PDF specification for details.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupType">
            <summary>
            Defines possible text markup types.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextMarkupType.Highlight">
            <summary>
            Highlighting markup.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextMarkupType.Underline">
            <summary>
            Underline markup.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextMarkupType.Squiggly">
            <summary>
            Squiggly markup.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.TextMarkupType.StrikeOut">
            <summary>
            Strikeout markup.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation"/> appear as highlights, underlines, strikeouts, or jagged (“squiggly”) underlines in the text of a document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation.#ctor(GrapeCity.Documents.Pdf.Annotations.TextMarkupType)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation"/> class.
            </summary>
            <param name="markupType">The annotation type.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation.MarkupType">
            <summary>
            Gets or sets the markup type.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation.Area">
            <summary>
            Gets or sets the list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> structures defining the markup area.
            The coordinates of the quadrilaterals' points are relative to the upper left corner of the page's
            media box, with the Y (vertical) coordinates increasing from top to bottom.
            <para>
            Note that if the annotation is associated with more than one page,
            the media box of the first of those pages is used to calculate the coordinates.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation.PdfArea">
            <summary>
            Gets or sets the list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> structures defining the markup area.
            The coordinates of the quadrilaterals' points are in PDF user space coordinates.
            The positive X axis extends horizontally to the right, and the positive Y axis
            extends vertically upward, with the origin usually in the lower left corner of the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.UnknownAnnotation">
            <summary>
            Represents an annotation of a type that is not currently supported by GcPdf.
            <para>
            An instance of this type cannot be created by user code.
            Instances of this type will be created if a PDF containing annotations
            of unsupported types is loaded into a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.UnknownAnnotation.#ctor(GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.UnknownAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.UnknownAnnotation.Subtype">
            <summary>
            Gets the annotation type according to the PDF specification.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation">
            <summary>
            Defines a graphics that are expected to be printed at a fixed size and position on a page,
            regardless of the dimensions of the printed page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Text">
            <summary>
            Gets or sets the text of <see cref="T:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation"/>,
            if both <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Text"/> and <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Image"/> are specified then <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Image"/>
            is used as watermark content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.TextFormat">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Text.TextFormat"/> object
            that specifies the formatting of the annotation's text.
            <para>
            Note that this object itself is not persisted in the PDF, 
            just its properties are used to generate the appearance of
            this watermark annotation.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Image">
            <summary>
            Gets or sets the image if <see cref="T:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation"/>,
            if both <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Text"/> and <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Image"/> are specified then <see cref="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Image"/>
            is used as watermark content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.Matrix">
            <summary>
            Gets or sets the matrix used to transform the annotation’s rectangle before rendering.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.HorzTranslate">
            <summary>
            Gets or sets the amount to translate the associated content horizontally,
            as a percentage of the width of the target media (or if unknown,
            the width of the page’s MediaBox). 1.0 represents 100% and 0.0 represents 0%.
            Negative values are not recommended, since they may cause content to be drawn off the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation.VertTranslate">
            <summary>
            Gets or sets the amount to translate the associated content vertically, as a percentage of
            the height of the target media (or if unknown, the height of the page’s MediaBox).
            1.0 represents 100% and 0.0 represents 0%. Negative values are not recommended,
            since they may cause content to be drawn off the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.CheckStyle">
            <summary>
            Defines possible check mark styles for <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/> and <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Check">
            <summary>
            The check mark looks like a check.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Circle">
            <summary>
            The check mark looks like a circle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Cross">
            <summary>
            The check mark looks like a cross.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Diamond">
            <summary>
            The check mark looks like a diamond.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Square">
            <summary>
            The check mark looks like a square.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Star">
            <summary>
            The check mark looks like a star.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation">
            <summary>
            Specifies the relative positions of text and image in an annotation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionOnly">
            <summary>
            No image; caption only.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.ImageOnly">
            <summary>
            No caption; image only.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionBelowIcon">
            <summary>
            Caption below the image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionAboveIcon">
            <summary>
            Caption above the image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionAtRight">
            <summary>
            Caption to the right of the image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionAtLeft">
            <summary>
            Caption to the left of the image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation.CaptionOverlaid">
            <summary>
            Caption overlaid directly on the image.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.ImageScaleMode">
            <summary>
            Specifies the circumstances under which the image should be scaled inside the button rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.ImageScaleMode.Always">
            <summary>
            Always scale.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.ImageScaleMode.Bigger">
            <summary>
            Scale only when the image is bigger than the button rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.ImageScaleMode.Smaller">
            <summary>
            Scale only when the image is smaller than the button rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Annotations.ImageScaleMode.Never">
            <summary>
            Never scale.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.StateAppearance">
            <summary>
            Represents the appearance attributes for a <see cref="T:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance"/>
            used when the state of a button field is changed: user presses the button, mouse is over the button.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StateAppearance.Caption">
            <summary>
            Gets or sets the button caption.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.StateAppearance.Image">
            <summary>
            Gets or sets an image specified by the <see cref="T:GrapeCity.Documents.Pdf.Graphics.IXObject"/> interface.
            <para>
            You can use <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> to assign an image to this property, for example:
            <code>
            GrapeCity.Documents.Drawing.Image img = Image.FromFile("example.png");
            btn.ButtonAppearance.DownAppearance.Image = doc.ImageHandlers.GetImageHandler(img);
            </code>
            </para>
            </summary>
            <seealso cref="M:GrapeCity.Documents.Drawing.Image.FromFile(System.String,GrapeCity.Documents.Drawing.ImageBinding,System.Int32)"/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.ImageScale">
            <summary>
            Represents image alignment within a rectangle.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.ImageScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.ImageScale"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.Mode">
            <summary>
            Gets or sets the scaling mode.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.Proportional">
            <summary>
            Gets or sets a value indicating whether an image should be scaled proportionally.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.Position">
            <summary>
            Gets or sets the position of an image.
            <para>
            The two numbers between 0.0 and 1.0 indicate the fraction of leftover space to allocate at the left and bottom of an image.
            A value of (0.0, 0.0) positions the image at the bottom-left corner of the button rectangle.
            A value of (0.5, 0.5) centers it within the rectangle.
            </para>
            This value is used only if the image is scaled proportionally.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.IgnoreBorder">
            <summary>
            Gets or sets a value indicating whether a button's appearance should be scaled to fit fully
            within the bounds of the annotation without taking into consideration the line width of the border.
            </summary>
        </member>
        <member name="E:GrapeCity.Documents.Pdf.Annotations.ImageScale.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance">
            <summary>
            Represents the appearance of a <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> when it is linked with a pushbutton or a signature field.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.Caption">
            <summary>
            Gets or sets the button's caption.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.Image">
            <summary>
            Gets or sets the button's image specified by the <see cref="T:GrapeCity.Documents.Pdf.Graphics.IXObject"/> interface.
            <para>
            You can use <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> to assign an image to this property, for example:
            <code>
            GrapeCity.Documents.Drawing.Image img = Image.FromFile("example.png");
            btn.ButtonAppearance.DownAppearance.Image = doc.ImageHandlers.GetImageHandler(img);
            </code>
            </para>
            </summary>
            <seealso cref="M:GrapeCity.Documents.Drawing.Image.FromFile(System.String,GrapeCity.Documents.Drawing.ImageBinding,System.Int32)"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.CaptionImageRelation">
            <summary>
            Gets or sets a value indicating how to position the button's caption relative to image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.DownAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.StateAppearance"/> object defining the button attributes
            used when the mouse button is pressed within its active area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.RolloverAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.StateAppearance"/> object defining the button attributes
            used when the user rolls the cursor into its active area without pressing the mouse button.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.ImageScale">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.ImageScale"/> object defining attributes of image scaling.
            </summary>
        </member>
        <member name="E:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation">
            <summary>
            Represents a widget annotation used in interactive forms to represent the appearance of fields and
            to manage user interactions.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.#ctor(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> class.
            </summary>
            <param name="page">The page containing created annotation.</param>
            <param name="rect">The annotation's bounds on the page.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.DefaultAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.DefaultAppearance"/> object that specifies
            the visual properties (font, font size etc.) used to format the content of this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.CheckStyle">
            <summary>
            Gets or sets the style of check mark that is used if this <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>
            is linked with a <see cref="T:GrapeCity.Documents.Pdf.AcroForms.CheckBoxField"/> or a <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/>.
            <para>
            Note that this property works over the <see cref="P:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance.Caption"/> property, 
            for example if <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.CheckStyle"/> is <see cref="F:GrapeCity.Documents.Pdf.Annotations.CheckStyle.Cross"/>,
            then ButtonAppearance.Caption will be "8".
            </para>
            If the value of this property is null, it indicates that ButtonAppearance.Caption
            contains an unknown value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Justification">
            <summary>
            Gets or sets the justification to be used in displaying the annotation’s text.
            <para>Note that if this property is not specified (the value is null) then <see cref="P:GrapeCity.Documents.Pdf.AcroForms.Field.Justification"/> is used.
            See PDF specification for details.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.ActualJustification">
            <summary>
            Gets the actual justification to be used in displaying the annotation’s text.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Justification"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Name">
            <summary>
            Gets or sets the name of the annotation.
            If <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> is used with <see cref="T:GrapeCity.Documents.Pdf.AcroForms.RadioButtonField"/> then
            <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Name"/> is used as a value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Field">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.Field"/> associated with this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Highlighting">
            <summary>
            Gets or sets the annotation’s highlighting mode.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Border">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.RotationAngle">
            <summary>
            Gets or sets the angle, in degrees, by which the widget annotation
            is rotated counterclockwise relative to the page.
            The value must be a multiple of 90.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.BackColor">
            <summary>
            Gets or sets the annotation's background color.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Activate">
            <summary>
            Gets or sets an action to be performed when the annotation is activated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Events">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents"/> object that specifies the events for this annotation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.ButtonAppearance">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Annotations.ButtonAppearance"/> object that specifies the look of the widget
            if it is linked with a push button field.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents">
            <summary>
            Defines events common for all acroform fields.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.Activate">
            <summary>
            Gets or sets an action to be performed when the annotation is activated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.MouseEnter">
            <summary>
            Gets or sets an action to be performed when the mouse enters the field’s active area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.MouseLeave">
            <summary>
            Gets or sets an action to be performed when the cursor exits the field’s active area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.MouseDown">
            <summary>
            Gets or sets an action to be performed when the mouse button is pressed inside the field’s active area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.MouseUp">
            <summary>
            Gets or sets an action to be performed when the mouse button is released inside the field’s active area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.Enter">
            <summary>
            Gets or sets an action to be performed when the annotation receives the input focus.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.Leave">
            <summary>
            Gets or sets an action to be performed when the annotation loses the input focus.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.AnnotationPageOpened">
            <summary>
            Gets or sets an action to be performed when the page containing the annotation is opened
            (for example, when the user navigates to it from the next or previous page or by means of a link annotation
            or outline item).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.AnnotationPageClosed">
            <summary>
            Gets or sets an action to be performed when the page containing the annotation is closed
            (for example, when the user navigates to the next or previous page, or follows a link annotation or outline item).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.AnnotationPageShow">
            <summary>
            Gets or sets an action to be performed when the page containing the annotation becomes visible in
            the viewer application’s user interface.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.TriggerEvents.AnnotationPageHide">
            <summary>
            Gets or sets an action to be performed when the page containing the annotation is no longer visible in
            the viewer application’s user interface.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Articles.ArticleBead">
            <summary>
            Represents a bead of a PDF article thread.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ArticleBead.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ArticleBead.#ctor(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> class.
            </summary>
            <param name="page">The bead's page.</param>
            <param name="bounds">The bead's bounds on the page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ArticleBead.#ctor(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> class.
            </summary>
            <param name="page">The bead's page.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.TopLeftBounds">
            <summary>
            Indicates whether the value of Bounds is specified relative to the top left corner of the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> containing this bead.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.Thread">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleThread"/> object containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.Page">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object where this <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> is displayed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.Bounds">
            <summary>
            Gets or sets the location of this <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> on the page.
            The coordinates of the rectangle are relative to the upper left corner of the page's
            media box, with the Y (vertical) coordinates increasing from top to bottom.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.PdfBounds">
            <summary>
            Gets or sets the rectangle that defines the location and size of this <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> on a page
            in PDF user space coordinates. 
            The positive X axis extends horizontally to the right, and the positive Y axis
            extends vertically upward, with the origin usually in the lower left corner of the page.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Articles.ArticleBead.Bounds"/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Articles.ArticleThread">
            <summary>
            Represents a PDF article thread.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ArticleThread.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleThread"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThread.FirstBead">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> object defining first bead in the thread.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThread.Doc">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThread.Beads">
            <summary>
            Gets a collection of the thread's beads.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThread.Info">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> object
            containing information about the thread, such as its title, author, and creation date.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThread.Metadata">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Metadata"/> object
            containing information about the thread, such as its title, author, and creation date.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> objects owned by an <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleThread"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.EnumerateItems(System.Func{GrapeCity.Documents.Pdf.Articles.ArticleBead,System.Boolean})">
            <summary>
            Enumerates items in the collection, returns item where enumeration was stopped,
            i.e. <paramref name="callback"/> returned false, and null if all collection was enumerated.
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.CopyTo(GrapeCity.Documents.Pdf.Articles.ArticleBead[],System.Int32)">
            <summary>
            Copies the entire collection into a one-dimensional array,
            starting at the specified index in the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection.</param>
            <param name="index">The zero-based index in the array at which copying begins.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at a specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Add(GrapeCity.Documents.Pdf.Articles.ArticleBead)">
            <summary>
            Adds an object to the end of the collection.
            </summary>
            <param name="item">The object to be added to the end of the collection.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Insert(System.Int32,GrapeCity.Documents.Pdf.Articles.ArticleBead)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Remove(GrapeCity.Documents.Pdf.Articles.ArticleBead)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>true if item was actually removed, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.Contains(GrapeCity.Documents.Pdf.Articles.ArticleBead)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Articles.ThreadArticleBeadCollection.IndexOf(GrapeCity.Documents.Pdf.Articles.ArticleBead)">
            <summary>
            Searches for the specified object and returns the zero-based index of the
            first occurrence within the entire collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of item within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Articles.ArticleThreadCollection.Owner">
            <summary>
            Gets the owner <see cref="T:GrapeCity.Documents.Pdf.DocumentCatalog"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AssociatedFiles">
            <summary>
            Represents the Associated Files collection. 
            This is collection of <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> objects associated with some document object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.AiffStreamReader">
            <summary>
            The AIFF stream reader.
            Note! AIFC (compressed AIFF) not supported.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Audio.AiffStreamReader.GetStreamInfo(System.IO.Stream,System.Boolean)">
            <summary>
            Parses AIFF stream and returns <see cref="T:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo"/> object describing it.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.Utils.IEEE">
            <summary>
            Methods for converting between IEEE 80-bit extended double precision
            and standard C# double precision.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Audio.Utils.IEEE.ConvertToIeeeExtended(System.Double)">
            <summary>
            Converts a C# double precision number to an 80-bit
            IEEE extended double precision number (occupying 10 bytes).
            </summary>
            <param name="num">The double precision number to convert to IEEE extended.</param>
            <returns>An array of 10 bytes containing the IEEE extended number.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Audio.Utils.IEEE.ConvertFromIeeeExtended(System.Byte[])">
            <summary>
            Converts an IEEE 80-bit extended precision number to a
            C# double precision number.
            </summary>
            <param name="bytes">The 80-bit IEEE extended number (as an array of 10 bytes).</param>
            <returns>A C# double precision number that is a close representation of the IEEE extended number.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding">
            <summary>
            Summary description for WaveFormatEncoding.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Unknown">
            <summary>WAVE_FORMAT_UNKNOWN,	Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Pcm">
            <summary>WAVE_FORMAT_PCM		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Adpcm">
            <summary>WAVE_FORMAT_ADPCM		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.IeeeFloat">
            <summary>WAVE_FORMAT_IEEE_FLOAT Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vselp">
            <summary>WAVE_FORMAT_VSELP		Compaq Computer Corp.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.IbmCvsd">
            <summary>WAVE_FORMAT_IBM_CVSD	IBM Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.ALaw">
            <summary>WAVE_FORMAT_ALAW		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MuLaw">
            <summary>WAVE_FORMAT_MULAW		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Dts">
            <summary>WAVE_FORMAT_DTS		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Drm">
            <summary>WAVE_FORMAT_DRM		Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WmaVoice9">
            <summary>WAVE_FORMAT_WMAVOICE9 </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.OkiAdpcm">
            <summary>WAVE_FORMAT_OKI_ADPCM	OKI</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DviAdpcm">
            <summary>WAVE_FORMAT_DVI_ADPCM	Intel Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.ImaAdpcm">
            <summary>WAVE_FORMAT_IMA_ADPCM  Intel Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MediaspaceAdpcm">
            <summary>WAVE_FORMAT_MEDIASPACE_ADPCM Videologic</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.SierraAdpcm">
            <summary>WAVE_FORMAT_SIERRA_ADPCM Sierra Semiconductor Corp </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.G723Adpcm">
            <summary>WAVE_FORMAT_G723_ADPCM Antex Electronics Corporation </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DigiStd">
            <summary>WAVE_FORMAT_DIGISTD DSP Solutions, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DigiFix">
            <summary>WAVE_FORMAT_DIGIFIX DSP Solutions, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DialogicOkiAdpcm">
            <summary>WAVE_FORMAT_DIALOGIC_OKI_ADPCM Dialogic Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MediaVisionAdpcm">
            <summary>WAVE_FORMAT_MEDIAVISION_ADPCM Media Vision, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.CUCodec">
            <summary>WAVE_FORMAT_CU_CODEC Hewlett-Packard Company </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.YamahaAdpcm">
            <summary>WAVE_FORMAT_YAMAHA_ADPCM Yamaha Corporation of America</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.SonarC">
            <summary>WAVE_FORMAT_SONARC Speech Compression</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DspGroupTrueSpeech">
            <summary>WAVE_FORMAT_DSPGROUP_TRUESPEECH DSP Group, Inc </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.EchoSpeechCorporation1">
            <summary>WAVE_FORMAT_ECHOSC1 Echo Speech Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.AudioFileAf36">
            <summary>WAVE_FORMAT_AUDIOFILE_AF36, Virtual Music, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Aptx">
            <summary>WAVE_FORMAT_APTX Audio Processing Technology</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.AudioFileAf10">
            <summary>WAVE_FORMAT_AUDIOFILE_AF10, Virtual Music, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Prosody1612">
            <summary>WAVE_FORMAT_PROSODY_1612, Aculab plc</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Lrc">
            <summary>WAVE_FORMAT_LRC, Merging Technologies S.A. </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DolbyAc2">
            <summary>WAVE_FORMAT_DOLBY_AC2, Dolby Laboratories</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Gsm610">
            <summary>WAVE_FORMAT_GSM610, Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MsnAudio">
            <summary>WAVE_FORMAT_MSNAUDIO, Microsoft Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.AntexAdpcme">
            <summary>WAVE_FORMAT_ANTEX_ADPCME, Antex Electronics Corporation</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.ControlResVqlpc">
            <summary>WAVE_FORMAT_CONTROL_RES_VQLPC, Control Resources Limited </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DigiReal">
            <summary>WAVE_FORMAT_DIGIREAL, DSP Solutions, Inc. </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.DigiAdpcm">
            <summary>WAVE_FORMAT_DIGIADPCM, DSP Solutions, Inc.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.ControlResCr10">
            <summary>WAVE_FORMAT_CONTROL_RES_CR10, Control Resources Limited</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_NMS_VBXADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CS_IMAADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ECHOSC3">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ROCKWELL_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ROCKWELL_DIGITALK">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_XEBEC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G721_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G728_CELP">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MSG723">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Mpeg">
            <summary>WAVE_FORMAT_MPEG, Microsoft Corporation </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_RT24">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_PAC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MpegLayer3">
            <summary>WAVE_FORMAT_MPEGLAYER3, ISO/MPEG Layer3 Format Tag </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_LUCENT_G723">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CIRRUS">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ESPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CANOPUS_ATRAC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G726_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G722_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DSAT_DISPLAY">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_BYTE_ALIGNED">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC8">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC10">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC16">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_AC20">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT24">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT29">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_RT29HW">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_VR12">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_VR18">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_TQ40">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SOFTSOUND">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VOXWARE_TQ60">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MSRT24">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G729A">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MVI_MVI2">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DF_G726">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DF_GSM610">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ISIAUDIO">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ONLIVE">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SBC24">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DOLBY_AC3_SPDIF">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MEDIASONIC_G723">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_PROSODY_8KBPS">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ZYXEL_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_PHILIPS_LPCBB">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_PACKED">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MALDEN_PHONYTALK">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Gsm">
            <summary>WAVE_FORMAT_GSM</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.G729">
            <summary>WAVE_FORMAT_G729</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.G723">
            <summary>WAVE_FORMAT_G723</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Acelp">
            <summary>WAVE_FORMAT_ACELP</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.RawAac">
            <summary>
            WAVE_FORMAT_RAW_AAC1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_RHETOREX_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_IRAT">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VIVO_G723">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VIVO_SIREN">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DIGITAL_G723">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SANYO_LD_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACEPLNET">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACELP4800">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_ACELP8V3">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_G729">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_G729A">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SIPROLAB_KELVIN">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_G726ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_QUALCOMM_PUREVOICE">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_QUALCOMM_HALFRATE">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_TUBGSM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_MSAUDIO1">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WindowsMediaAudio">
            <summary>
            Windows Media Audio, WAVE_FORMAT_WMAUDIO2, Microsoft Corporation
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WindowsMediaAudioProfessional">
            <summary>
            Windows Media Audio Professional WAVE_FORMAT_WMAUDIO3, Microsoft Corporation
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WindowsMediaAudioLosseless">
            <summary>
            Windows Media Audio Lossless, WAVE_FORMAT_WMAUDIO_LOSSLESS
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WindowsMediaAudioSpdif">
            <summary>
            Windows Media Audio Professional over SPDIF WAVE_FORMAT_WMASPDIF (0x0164)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ULAW">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_ALAW">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_UNISYS_NAP_16K">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_FASTSPEECH8">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CREATIVE_FASTSPEECH10">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_UHER_ADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_QUARTERDECK">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ILINK_VC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_RAW_SPORT">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_ESST_AC3">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_IPI_HSX">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_IPI_RPELP">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_CS2">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SONY_SCX">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_FM_TOWNS_SND">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_BTV_DIGITAL">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_QDESIGN_MUSIC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_VME_VMPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_TPC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_OLIGSM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_OLIADPCM">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_OLICELP">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_OLISBC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_OLIOPR">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_LH_CODEC">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_NORRIS">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS">
            <summary></summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MPEG_ADTS_AAC">
            <summary>
            Advanced Audio Coding (AAC) audio in Audio Data Transport Stream (ADTS) format.
            The format block is a WAVEFORMATEX structure with wFormatTag equal to WAVE_FORMAT_MPEG_ADTS_AAC.
            </summary>
            <remarks>
            The WAVEFORMATEX structure specifies the core AAC-LC sample rate and number of channels, 
            prior to applying spectral band replication (SBR) or parametric stereo (PS) tools, if present.
            No additional data is required after the WAVEFORMATEX structure.
            </remarks>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MPEG_RAW_AAC">
            <summary></summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MPEG_LOAS">
            <summary>
            MPEG-4 audio transport stream with a synchronization layer (LOAS) and a multiplex layer (LATM).
            The format block is a WAVEFORMATEX structure with wFormatTag equal to WAVE_FORMAT_MPEG_LOAS.
            </summary>
            <remarks>
            The WAVEFORMATEX structure specifies the core AAC-LC sample rate and number of channels, 
            prior to applying spectral SBR or PS tools, if present.
            No additional data is required after the WAVEFORMATEX structure.
            </remarks>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.NOKIA_MPEG_ADTS_AAC">
            <summary>NOKIA_MPEG_ADTS_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.NOKIA_MPEG_RAW_AAC">
            <summary>NOKIA_MPEG_RAW_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.VODAFONE_MPEG_ADTS_AAC">
            <summary>VODAFONE_MPEG_ADTS_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.VODAFONE_MPEG_RAW_AAC">
            <summary>VODAFONE_MPEG_RAW_AAC</summary>
            <remarks>Source wmCodec.h</remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.MPEG_HEAAC">
            <summary>
            High-Efficiency Advanced Audio Coding (HE-AAC) stream.
            The format block is an HEAACWAVEFORMAT structure.
            </summary>
            <see>http://msdn.microsoft.com/en-us/library/dd317599%28VS.85%29.aspx</see>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DVM">
            <summary>WAVE_FORMAT_DVM</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis1">
            <summary>WAVE_FORMAT_VORBIS1 "Og" Original stream compatible</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis2">
            <summary>WAVE_FORMAT_VORBIS2 "Pg" Have independent header</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis3">
            <summary>WAVE_FORMAT_VORBIS3 "Qg" Have no codebook header</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis1P">
            <summary>WAVE_FORMAT_VORBIS1P "og" Original stream compatible</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis2P">
            <summary>WAVE_FORMAT_VORBIS2P "pg" Have independent headere</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Vorbis3P">
            <summary>WAVE_FORMAT_VORBIS3P "qg" Have no codebook header</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.Extensible">
            <summary>WAVE_FORMAT_EXTENSIBLE</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveFormatEncoding.WAVE_FORMAT_DEVELOPMENT">
            <summary></summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.WaveStream">
            <summary>
            Base class for all AudioStream classes.
            Derives from stream.
            All read and seek operations aligned to BitsPerSample / 8.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo">
            <summary>
            Defines the Wave format.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.Format">
            <summary>
            The format type.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.Channels">
            <summary>
            The number of channels.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.SamplingRate">
            <summary>
            The sample rate.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.AverageBytesPerSecond">
            <summary>
            The average number of bytes used per second.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.BlockAlign">
            <summary>
            The block alignment.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.BitsPerSample">
            <summary>
            The number of bits per sample (usually 16 or 32, sometimes 24 or 8).
            Can be 0 for some codecs.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.DataOffset">
            <summary>
            The offset of audio data from the start of the stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo.DataLength">
            <summary>
            The length of audio data.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Audio.WaveStreamReader">
            <summary>
            The WAV stream reader.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Audio.WaveStreamReader.GetStreamInfo(System.IO.Stream,System.Boolean)">
            <summary>
            Parses WAV stream and returns <see cref="T:GrapeCity.Documents.Pdf.Audio.WaveStreamInfo"/> object describing it.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Codecs.Tiff.CCITTFaxDecoder.#ctor(System.Int32,System.Int32,System.Int32)">
            @param fillOrder
                       The fill order of the compressed data bytes.
            @param w
            @param h
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Codecs.Tiff.TIFFFaxDecompressor.fillOrder">
            The logical order of bits within a byte.
            <pre>
            1 = MSB-to-LSB
            2 = LSB-to-MSB (flipped)
            </pre>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Codecs.Tiff.TIFFFaxDecompressor.uncompressedMode">
            Uncompressed mode flag: 1 if uncompressed, 0 if not.
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Codecs.Tiff.TIFFFaxDecompressor.fillBits">
            EOL padding flag: 1 if fill bits have been added before an EOL such
            that the EOL ends on a byte boundary, 0 otherwise.
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Codecs.Tiff.TIFFFaxDecompressor.oneD">
            Coding dimensionality: 1 for 2-dimensional, 0 for 1-dimensional.
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Codecs.Tiff.TIFFFaxDecompressor.SetOptions(System.Int32,System.Int32,System.Int32,System.Int32)">
            Invokes the superclass method and then sets instance variables on
            the basis of the metadata set on this decompressor.
        </member>
        <member name="T:GrapeCity.Documents.Pdf.VariableTextJustification">
            <summary>
            Specifies text justification to be used when displaying variable text in <see cref="T:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/> etc.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.VariableTextJustification.LeftJustified">
            <summary>
            Text is left justified.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.VariableTextJustification.Centered">
            <summary>
            Text is centered.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.VariableTextJustification.RightJustified">
            <summary>
            Text is right justified.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ContentStream">
            <summary>
            Base abstract class for classes representing content streams in a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ContentStream.HasContent">
            <summary>
            Returns a value indicating whether this content stream is not empty, i.e. it contains
            some PDF operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ContentStream.GetStream">
            <summary>
            Gets the System.IO.Stream object containing the content of this <see cref="T:GrapeCity.Documents.Pdf.ContentStream"/>.
            <para>It is the caller's responsibility to dispose the returned stream after usage.</para>
            <para>Important: this method returns null if the current ContentStream object is empty.</para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ContentStream.SetContent(System.IO.MemoryStream,System.Boolean)">
            <summary>
            For internal use.
            Sets the content of this <see cref="T:GrapeCity.Documents.Pdf.ContentStream"/> from the specified <see cref="T:System.IO.MemoryStream"/>.
            If <paramref name="copyStream"/> is true then stream content will be copied 
            and it should be disposed; otherwise (<paramref name="copyStream"/> is false)
            the content stream will use passed stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationBase">
            <summary>
            Base class for classes defining destination within document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Destination">
            <summary>
            The abstract base class for types representing a destination 
            that defines a particular view of a document.
            A destination consists of:
            <list type="bullet">
            <item>The page of the document to be displayed.</item>
            <item>The location of the document window on that page.</item>
            <item>The magnification (zoom factor) to use when displaying the page.</item>
            </list>
            <para>Important note about vertical coordinates:</para>
            In PDFs, all coordinates are specified relative to the bottom left corner,
            with the Y axis going up. 
            GcPdf uses the more common coordinate system with the origin
            in the top left corner, with the Y axis going down.
            In most situations the Y coordinates are automatically converted by GcPdf.
            In classes derived from <see cref="T:GrapeCity.Documents.Pdf.Destination"/> this is also done if
            the destination's target page is specified as the <see cref="T:GrapeCity.Documents.Pdf.Page"/>
            object.
            But if the destination's target page is specified by index,
            automatic conversion of the Y coordinate cannot be done, and it should be
            specified relative to the bottom left corner as per the PDF spec.
            <para>
            When the Y coordinate is specified relative to the page bottom,
            it is noted in the parameter's description.
            (It is recommended that constructors accepting a <see cref="T:GrapeCity.Documents.Pdf.Page"/> object
            are used instead.)
            </para>
            <para>
            All properties defining the Y coordinate has linked property with "Pdf" prefix,
            for example Y and PdfY, the property with "Pdf" prefix contains a value relative to the
            bottom left corner with the Y axis going up.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Destination.TopLeftCoords">
            <summary>
            Gets or sets a value indicating whether the coordinates are specified relative to top-left corner of the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Destination.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Destination.PageIndex">
            <summary>
            Gets the index of this destination's target page.
            Returns null if the target page was specified as a <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            <para>
            Note that if this property is not null, then any Y coordinate is
            relative to the bottom left corner (see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details).
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Destination.Page">
            <summary>
            Gets this destination's target <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            Returns null if the target page was specified by index.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationXYZ">
            <summary>
            Display the page designated by page, with the coordinates (left, top) positioned at the upper-left corner
            of the window and the contents of the page magnified by the factor zoom.
            A null value for any of the parameters left, top, or zoom specifies that the current value
            of that parameter is to be retained unchanged. A zoom value of 0 has the same meaning as a null value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(System.Int32,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="left">The left coordinate of the document window.</param>
            <param name="pdfTop">The top coordinate of the document window relative to the bottom of the page.</param>
            <param name="zoom">The zoom factor of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(System.Int32,System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="left">The left coordinate of the document window.</param>
            <param name="pdfTop">The top coordinate of the document window relative to the bottom of the page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(System.Int32,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="pdfTop">The top coordinate of the document window relative to the bottom of the page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            </summary>
            <param name="page">The target page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            </summary>
            <param name="page">The target page.</param>
            <param name="left">The left coordinate of the document window.</param>
            <param name="top">The top coordinate of the document window.</param>
            <param name="zoom">The zoom factor of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            </summary>
            <param name="page">The target page.</param>
            <param name="left">The left coordinate of the document window.</param>
            <param name="top">The top coordinate of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationXYZ.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationXYZ"/> class.
            </summary>
            <param name="page">The target page.</param>
            <param name="top">The top coordinate of the document window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationXYZ.Left">
            <summary>
            Gets the left coordinate of the document window, if null then unchanged.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationXYZ.Top">
            <summary>
            Gets the top coordinate of the document window, if null then unchanged.
            <para>
            If the target page of this destination was specified as an index (see <see cref="P:GrapeCity.Documents.Pdf.Destination.PageIndex"/>),
            then this property returns the Y coordinate relative to the page bottom.
            If the target page was specified as a page object (see <see cref="P:GrapeCity.Documents.Pdf.Destination.Page"/>),
            then this property returns the Y coordinate relative to the page top.
            See <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationXYZ.PdfTop">
            <summary>
            Gets the top coordinate of the document window relative to the bottom left corner,
            unchanged if <see langword="null"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationXYZ.Zoom">
            <summary>
            Gets the zoom factor of the document window,
            unchanged if <see langword="null"/> or zero.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFit">
            <summary>
            Display the page designated by page, with its contents magnified just enough to fit the entire page
            within the window both horizontally and vertically.
            If the required horizontal and vertical magnification factors are different, use the smaller of the two,
            centering the page within the window in the other dimension.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFit.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFit"/> class.
            </summary>
            <param name="pageIndex">The target page index.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFit.#ctor(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFit"/> class.
            </summary>
            <param name="page">The target page.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitH">
            <summary>
            Display the page designated by page, with the vertical coordinate top positioned at the top edge of the window
            and the contents of the page magnified just enough to fit the entire width of the page within the window.
            A null value for top specifies that the current value of that parameter is to be retained unchanged.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitH.#ctor(System.Int32,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitH"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="pdfTop">The top coordinate of the document window relative to page bottom.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitH.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitH"/> class.
            </summary>
            <param name="page">The target page.</param>
            <param name="top">The top coordinate of the document window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitH.Top">
            <summary>
            Gets the top coordinate of the document window, if null then unchanged.
            <para>
            If the target page of this destination was specified as an index (see <see cref="P:GrapeCity.Documents.Pdf.Destination.PageIndex"/>),
            then this property returns the Y coordinate relative to the page bottom.
            If the target page was specified as a page object (see <see cref="P:GrapeCity.Documents.Pdf.Destination.Page"/>),
            then this property returns the Y coordinate relative to the page top.
            See <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitH.PdfTop">
            <summary>
            Gets the top coordinate of the document window relative to the bottom left corner,
            unchanged if <see langword="null"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitV">
            <summary>
            Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window
            and the contents of the page magnified just enough to fit the entire height of the page within the window.
            A null value for left specifies that the current value of that parameter is to be retained unchanged.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitV.#ctor(System.Int32,System.Nullable{System.Single})">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitV"/> class.
            </summary>
            <param name="pageIndex">The page index.</param>
            <param name="left">The left coordinate of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitV.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single})">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitV"/> class.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left coordinate of the document window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitV.Left">
            <summary>
            Gets the left coordinate of the document window, if null then unchanged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitR">
            <summary>
            Display the page designated by page, with its contents magnified just enough to fit the rectangle
            specified by the coordinates left, bottom, right, and top entirely within the window both horizontally and vertically.
            If the required horizontal and vertical magnification factors are different, use the smaller of the two,
            centering the rectangle within the window in the other dimension.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitR.#ctor(System.Int32,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitR"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="pdfBounds">The rectangle to fit relative to the bottom left corner.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitR.#ctor(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitR"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="page">The target page.</param>
            <param name="bounds">The rectangle to fit (relative to the top left corner).</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitR.Bounds">
            <summary>
            Gets the rectangle to fit.
            <para>
            If the target page of this destination was specified as an index (see <see cref="P:GrapeCity.Documents.Pdf.Destination.PageIndex"/>),
            then this property returns a rectangle relative to the bottom left corner.
            If the target page was specified as a page object (see <see cref="P:GrapeCity.Documents.Pdf.Destination.Page"/>),
            then this property returns a rectangle relative to the top left corner.
            See <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitR.PdfBounds">
            <summary>
            Gets the rectangle to fit relative to the bottom left corner.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitB">
            <summary>
            Display the page designated by page, with its contents magnified just enough to fit its bounding box
            entirely within the window both horizontally and vertically.
            If the required horizontal and vertical magnification factors are different, use the smaller of the two,
            centering the bounding box within the window in the other dimension.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitB.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitB"/> class.
            </summary>
            <param name="pageIndex">The page index.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitB.#ctor(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitB"/> class.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitBH">
            <summary>
            Display the page designated by page, with the vertical coordinate top positioned at the top edge of the window
            and the contents of the page magnified just enough to fit the entire width of its bounding box within the window.
            A null value for top specifies that the current value of that parameter is to be retained unchanged.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitBH.#ctor(System.Int32,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitBH"/> class.
            <para>
            Note that if a destination is created using this constructor then all Y coordinates should be 
            specified relative to the bottom of the page, see <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
            <param name="pageIndex">The target page index.</param>
            <param name="pdfTop">The top coordinate of the document window relative to page bottom.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitBH.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitBH"/> class.
            </summary>
            <param name="page">The target page.</param>
            <param name="top">The top coordinate of the document window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitBH.Top">
            <summary>
            Gets the top coordinate of the document window, if null then unchanged.
            <para>
            If the target page of this destination was specified as an index (see <see cref="P:GrapeCity.Documents.Pdf.Destination.PageIndex"/>),
            then this property returns the Y coordinate relative to the page bottom.
            If the target page was specified as a page object (see <see cref="P:GrapeCity.Documents.Pdf.Destination.Page"/>),
            then this property returns the Y coordinate relative to the page top.
            See <see cref="T:GrapeCity.Documents.Pdf.Destination"/> description for details.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitBH.PdfTop">
            <summary>
            Gets the top coordinate of the document window relative to the bottom left corner,
            if null then unchanged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationFitBV">
            <summary>
            Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and
            the contents of the page magnified just enough to fit the entire height of its bounding box within the window.
            A null value for left specifies that the current value of that parameter is to be retained unchanged.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitBV.#ctor(System.Int32,System.Nullable{System.Single})">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitBV"/> class.
            </summary>
            <param name="pageIndex">The page index.</param>
            <param name="left">The left coordinate of the document window.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationFitBV.#ctor(GrapeCity.Documents.Pdf.Page,System.Nullable{System.Single})">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationFitBV"/> class.
            </summary>
            <param name="page">The page.</param>
            <param name="left">The left coordinate of the document window.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationFitBV.Left">
            <summary>
            Gets the left coordinate of the document window, if null then unchanged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationUnknown">
            <summary>
            Represents a destination object in a format that is unsupported by GcPdf.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationRef">
            <summary>
            Defines destination as reference to another destination, referenced destination
            can be in Dests dictionary of PDF document or in Dests subtree of Name Tree.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.DestinationRef._pdfObject">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.DestinationRef._pdfObject"/> can be <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfName"/> or <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationRef.#ctor(GrapeCity.Documents.Pdf.Spec.IPdfName)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationRef"/> class.
            </summary>
            <param name="name">The name of referenced destination.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationRef.#ctor(GrapeCity.Documents.Pdf.Spec.IPdfString)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationRef"/> class.
            </summary>
            <param name="str">The name of referenced destination.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DestinationRef.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DestinationRef"/> class.
            </summary>
            <param name="name">The name of referenced destination.</param>
            <param name="nameTree">Specifies where referenced destination is in Dests dictionary of document or in Dests subtree of Name Tree.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationRef.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationRef.Name">
            <summary>
            Gets the name of referenced destination in the Dests dictionary of PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DestinationRef.NameTree">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.DestinationRef"/> references 
            destination in Dests dictionary of PDF document or in Dests subtree of document's Name Tree.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IDestination">
            <summary>
            The common interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionGoTo"/> and destinations derived from
            the abstract <see cref="T:GrapeCity.Documents.Pdf.Destination"/> base.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IDestination.Page">
            <summary>
            Gets this destination's target <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            Returns <see langword="null"/> if the target page is specified by its index.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IDestination.PageIndex">
            <summary>
            Gets the index of this destination's target page.
            Returns <see langword="null"/> if the target page is specified as a <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DocAction">
            <summary>
            Abstract base class for <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> and <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DestinationNameTree">
            <summary>
            Represents the PDF name tree of <see cref="T:GrapeCity.Documents.Pdf.IDestination"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DocumentCatalog">
            <summary>
            The document catalog object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.DocumentCatalog.Doc">
            <summary>
            The owning <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.DocumentCatalog.HeaderVersion">
            <summary>
            The PDF version specified in the header of PDF file, for example: %PDF-1.3
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.PageMode">
            <summary>
            Gets or sets how the document should be displayed when opened.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.PageLayout">
            <summary>
            Gets or sets the page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.AssociatedFiles">
            <summary>
            Gets the collection of embedded files associated with whole document.
            Typically it is used to identify which embedded file was the source of the PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.OutputIntents">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.OutputIntentCollection"/> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.Outlines">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.DocumentOutlines"/> object representing the document outline tree.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.ViewerPreferences">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.ViewerPreferences"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.Dests">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogDests"/> object containing
            named destinations from Dests entry of document catalog.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.Names">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogNames"/> object representing
            the Name Dictionary of document catalog.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.NamedDestinations">
            <summary>
            Gets the dictionary containing all named destinations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.ArticleThreads">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleThreadCollection"/> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.EmbeddedFiles">
            <summary>
            Gets the dictionary of document level file attachments.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.MarkInfo">
            <summary>
            Gets the <see cref="P:GrapeCity.Documents.Pdf.DocumentCatalog.MarkInfo"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.PageLabelingRanges">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRangeNumberTree"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.StructTreeRoot">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/> object that represents the current document's
            structure tree as defined by PDF structure tags.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.Metadata">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Metadata"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.ConformanceLevel">
            <summary>
            Gets or sets the PDF/A conformance level.
            <para>The default is none (the document does not conform to PDF/A).</para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentCatalog.HasDests">
            <summary>
            Returns a value indicating whether the document has named destinations in the Dests
            entry of the document catalog.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogDests">
            <summary>
            Represents the Dests entry of document catalog,
            see PDF 2.0 page 98 for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogDests.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogDests.Dict">
            <summary>
            Gets the underlying dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogDests.DocDestinations">
            <summary>
            Gets the global list of named destinations.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocDestinations">
            <summary>
            The dictionary of document destinations,
            provides an access to all destinations in the document:
            <list type="bullet">
            <item>The Dests entry of document catalog (<see cref="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogDests"/>).</item>
            <item>The Dests entry of Names dictionary of document catalog (<see cref="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogNames"/>, <see cref="T:GrapeCity.Documents.Pdf.DestinationNameTree"/>).</item>
            </list>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentCatalog.DocDestinations.SetItem(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.IDestination)">
            <summary>
            Called from <see cref="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogDests"/> when item set.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentCatalog.DocDestinations.AddItem(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.IDestination)">
            <summary>
            Called from <see cref="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogDests"/> when item added.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentCatalog.DocDestinations.RemoveItem(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Called from <see cref="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogDests"/> when item removed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentCatalog.DocDestinations.ItemsRemoving(System.Collections.Generic.ICollection{GrapeCity.Documents.Pdf.Spec.PdfName})">
            <summary>
            Called from <see cref="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogDests"/> when it is cleared.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentCatalog.DocDestinations.SetItem(GrapeCity.Documents.Pdf.Spec.PdfString,GrapeCity.Documents.Pdf.IDestination)">
            <summary>
            Called from <see cref="T:GrapeCity.Documents.Pdf.DestinationNameTree"/> when item set.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentCatalog.DocDestinations.AddItem(GrapeCity.Documents.Pdf.Spec.PdfString,GrapeCity.Documents.Pdf.IDestination)">
            <summary>
            Called from <see cref="T:GrapeCity.Documents.Pdf.DestinationNameTree"/> when item added.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentCatalog.DocDestinations.RemoveItem(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Called from <see cref="T:GrapeCity.Documents.Pdf.DestinationNameTree"/> when item removed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentCatalog.DocDestinations.ItemsRemoving(System.Collections.Generic.ICollection{GrapeCity.Documents.Pdf.Spec.PdfString})">
            <summary>
            Called from <see cref="T:GrapeCity.Documents.Pdf.DestinationNameTree"/> when it is cleared.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogNames">
            <summary>
            Represents the Names entry of document catalog,
            see PDF 1.7 page 150 for details (Name Dictionary).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogNames.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogNames.Dests">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.DestinationNameTree"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogNames.EmbeddedFiles">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecificationNameTree"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentCatalog.DocumentCatalogNames.HasDests">
            <summary>
            Returns a value indicating whether the Name dictionary
            has Dests entry containing named destinations.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileSpecificationNameTree">
            <summary>
            Represents the PDF name tree of <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DocumentInfo">
            <summary>
            Contains information about the document. This information includes 
            the document author, title, keywords, etc.
            </summary>
            <remarks>
            <para>You don't have to provide this information, it is optional. If provided, 
            it is saved with the document and is available to the reader application.</para>
            <para>Some reader applications may allow users to search documents by author, 
            subject, or keyword.</para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentInfo.#ctor(GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Title">
            <summary>
            Gets or sets the title of the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Creator">
            <summary>
            Gets or sets the name of the application that created the original document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Producer">
            <summary>
            Gets or sets the name of the application that created the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Author">
            <summary>
            Gets or sets the name of the person that created the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Subject">
            <summary>
            Gets or sets the subject of the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.Keywords">
            <summary>
            Gets or sets keywords (separated by comma) associated with the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.CreationDate">
            <summary>
            Gets or sets the creation date and time of the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DocumentInfo.ModifyDate">
            <summary>
            Gets or sets the date and time the document was most recently modified.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentInfo.Reset">
            <summary>
            Resets properties of this <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> object to default values.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.EmbeddedFileStream">
            <summary>
            Represents embedded file stream in PDF.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.EmbeddedFileStream.GetStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> containing content of this <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/>,
            stream should be disposed after usage.
            NOTE! Method can return null if this <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> is empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.EmbeddedFileStream.CreationDate">
            <summary>
            Gets or sets the date and time when the embedded file was created.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.EmbeddedFileStream.ModificationDate">
            <summary>
            Gets or sets the date and time when the embedded file was last modified.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.EmbeddedFileStream.CheckSum">
            <summary>
            Gets or sets a 16-byte string that is the checksum of the bytes of the uncompressed embedded file.
            The checksum is calculated by applying the standard MD5 message-digest algorithm
            to the bytes of the embedded file stream.
            Checksum calculated automatically when <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> created with 
            <see cref="M:GrapeCity.Documents.Pdf.EmbeddedFileStream.FromFile(GrapeCity.Documents.Pdf.GcPdfDocument,System.String)"/> or <see cref="M:GrapeCity.Documents.Pdf.EmbeddedFileStream.FromBytes(GrapeCity.Documents.Pdf.GcPdfDocument,System.Byte[])"/> methods.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.EmbeddedFileStream.Size">
            <summary>
            Gets or sets the size of the embedded file, in bytes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.EmbeddedFileStream.MimeType">
            <summary>
            Gets or sets the file's MIME type.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.EmbeddedFileStream.FromFile(GrapeCity.Documents.Pdf.GcPdfDocument,System.String)">
            <summary>
            Creates a new instance of <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> from the specified file name.
            <para>The file data will be read when the GcPdfDocument is saved.</para>
            </summary>
            <param name="doc">The owner document.</param>
            <param name="fileName">The file name.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.EmbeddedFileStream.FromBytes(GrapeCity.Documents.Pdf.GcPdfDocument,System.Byte[])">
            <summary>
            Creates a new instance of <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> from the specified array of bytes.
            </summary>
            <param name="doc">The owner document.</param>
            <param name="bytes">The file data.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfBlendMode">
            <summary>
            For internal use.
            Specifies how to render images into a rectangle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Normal">
            <summary>Selects the source color, ignoring the backdrop.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Multiply">
            <summary>Multiplies the backdrop and source color values.</summary>
            <remarks>
            The result color is always at least as dark as either of the two constituent colors.
            Multiplying any color with black produces black; multiplying with white leaves the
            original color unchanged. Painting successive overlapping objects with a color other
            than black or white produces progressively darker colors.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Screen">
            <summary>Multiplies the complements of the backdrop and source color values, then complements the result.</summary>
            <remarks>
            The result color is always at least as light as either of the two constituent colors.
            Screening any color with white produces white; screening with black leaves
            the original color unchanged. The effect is/ similar to projecting multiple
            photographic slides simultaneously onto a single screen.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Overlay">
            <summary> Multiplies or screens the colors, depending on the backdrop color.</summary>
            <remarks>
            Source colors overlay the backdrop while preserving its highlights and shadows. The backdrop color
            is not replaced but is mixed with the source color to reflect the lightness or darkness of the backdrop.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Darken">
            <summary>Selects the darker of the backdrop and source colors.</summary>
            <remarks>
            The backdrop is replaced with the source where the source is darker; otherwise, it is left unchanged.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Lighten">
            <summary>Selects the lighter of the backdrop and source colors.</summary>
            <remarks>
            The backdrop is replaced with the source where the source is lighter; otherwise, it is left unchanged.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.ColorDodge">
            <summary>Brightens the backdrop color to reflect the source color. Painting with black produces no change.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.ColorBurn">
            <summary>Darkens the backdrop color to reflect the source color. Painting with white produces no change.</summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.HardLight">
            <summary>Multiplies or screens the colors, depending on the source color value.</summary>
            <remarks>
            If the source color is lighter than 0.5, the backdrop is lightened as if it were screened; this is useful for adding highlights to a scene.
            If the source color is darker than 0.5, the backdrop is darkened; this is useful for adding shadows to a scene.
            The degree of lightening or darkening is proportional to the difference between the source color and 0.5; if it is equal to 0.5, the backdrop is unchanged.
            Painting with pure black or white produces pure black or white. The effect is similar to shining a harsh spotlight on the backdrop.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.SoftLight">
            <summary>Darkens or lightens the colors, depending on the source color value.</summary>
            <remarks>
            If the source color is lighter than 0.5, the backdrop is lightened as if it were dodged; this is useful for adding highlights to a scene.
            If the source color is darker than 0.5, the backdrop is darkened as if it were burned in. The degree of lightening or darkening is proportional.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Difference">
            <summary>Subtracts the darker of the two constituent colors from the lighter color.</summary>
            <remarks>
            Painting with white inverts the backdrop color; painting with black produces no change.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Exclusion">
            <summary>Produces an effect similar to that of the Difference mode but lower in contrast.</summary>
            <remarks>
            Painting with white inverts the backdrop color; painting with black produces no change.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfBlendMode.Compatible">
            <summary>
            This mode does not exist in specification but exists in PDF files :(.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.LineCapStyle">
            <summary>
            Specifies the shape to be used at the ends of open subpaths (and dashes, if any) when they are stroked.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineCapStyle.Butt">
            <summary>
            The stroke is squared off at the endpoint of the path.
            There is no projection beyond the end of the path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineCapStyle.Round">
            <summary>
            A semicircular arc with a diameter equal to the line width is drawn around
            the endpoint and filled in.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineCapStyle.ProjectingSquare">
            <summary>
            The stroke continues beyond the endpoint of the path for a distance
            equal to half the line width and is squared off.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.LineJoinStyle">
            <summary>
            Specifies the shape to be used at the corners of paths that are stroked. 
            Join styles are significant only at points where consecutive segments of a path connect at an angle;
            segments that meet or intersect fortuitously receive no special treatment.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineJoinStyle.Miter">
            <summary>
            The outer edges of the strokes for the two segments are extended until they meet at an angle,
            as in a picture frame.
            If the segments meet at too sharp an angle
            (as defined by the miter limit parameter—see “Miter Limit,” above), a bevel join is used instead.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineJoinStyle.Round">
            <summary>
            An arc of a circle with a diameter equal to the line width is drawn around the point where
            the two segments meet, connecting the outer edges of the strokes for the two segments.
            This pieslice-shaped figure is filled in, producing a rounded corner.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.LineJoinStyle.Bevel">
            <summary>
            The two segments are finished with butt caps (see “Line Cap Style” on page 216) and
            the resulting notch beyond the ends of the segments is filled with a triangle.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RenderingIntent">
            <summary>
            Defines possible PDF rendering intents.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RenderingIntent.AbsoluteColorimetric">
            <summary>
            Colors are represented solely with respect to the light source;
            no correction is made for the output medium’s white point (such as the color of unprinted paper).
            Thus, for example, a monitor’s white point, which is bluish compared to that of a printer’s paper,
            would be reproduced with a blue cast. In-gamut colors are reproduced exactly;
            out-of-gamut colors are mapped to the nearest value within the reproducible gamut.
            This style of reproduction has the advantage of providing exact color matches from one output medium to another.
            It has the disadvantage of causing colors with Y values between the medium’s white point and 1.0 to be out of gamut.
            A typical use might be for logos and solid colors that require exact reproduction across different media.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RenderingIntent.RelativeColorimetric">
            <summary>
            Colors are represented with respect to the combination of the light source and the output medium’s
            white point (such as the color of unprinted paper).
            Thus, for example, a monitor’s white point would be reproduced on a printer by simply leaving the paper unmarked,
            ignoring color differences between the two media. In-gamut colors are reproduced exactly;
            out-of-gamut colors are mapped to the nearest value within the reproducible gamut.
            This style of reproduction has the advantage of adapting for the varying white points of different output media.
            It has the disadvantage of not providing exact color matches from one medium to another.
            A typical use might be for vector graphics.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RenderingIntent.Saturation">
            <summary>
            Colors are represented in a manner that preserves or emphasizes saturation.
            Reproduction of in-gamut colors may or may not be colorimetrically accurate.
            A typical use might be for business graphics, where saturation is the most important attribute of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RenderingIntent.Perceptual">
            <summary>
            Colors are represented in a manner that provides a pleasing perceptual appearance.
            To preserve color relationships, both in-gamut and out-of-gamut colors are generally
            modified from their precise colorimetric values. A typical use might be for scanned images.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextRenderingMode">
            <summary>
            PDF text rendering mode.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.Fill">
            <summary>
            Fill text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.Stroke">
            <summary>
            Stroke text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStroke">
            <summary>
            Fill, then stroke text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.Invisible">
            <summary>
            Neither fill nor stroke text (invisible).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillClip">
            <summary>
            Fill text and add to path for clipping (see above).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.StrokeClip">
            <summary>
            Stroke text and add to path for clipping.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStrokeClip">
            <summary>
            Fill, then stroke text and add to path for clipping.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextRenderingMode.Clip">
            <summary>
            Add text to path for clipping.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FillRule">
            <summary>
            Specifies how the intersecting areas of Path objects
            are combined to form the area of the Path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FillRule.EvenOdd">
            <summary>
            Rule that determines whether a point is in the fill region by drawing a ray
            from that point to infinity in any direction and counting the number of path
            segments within the given shape that the ray crosses. If this number is odd,
            the point is inside; if even, the point is outside.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FillRule.Nonzero">
            <summary>
            Rule that determines whether a point is in the fill region of the path by
            drawing a ray from that point to infinity in any direction and then examining
            the places where a segment of the shape crosses the ray. Starting with a
            count of zero, add one each time a segment crosses the ray from left to right
            and subtract one each time a path segment crosses the ray from right to left.
            After counting the crossings, if the result is zero then the point is outside
            the path. Otherwise, it is inside.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfException">
            <summary>
            Represents an exception that occurred while processing a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfException"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfException.Operations">
            <summary>
            Gets the currently executed operations' stack, see <see cref="T:GrapeCity.Documents.Pdf.Log.OperationStack"/> for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfSecurityException">
            <summary>
            Represents an exception that occurred while performing a security related
            task such as signing, encrypting, decrypting etc.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfSecurityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfSecurityException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfSecurityException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfSecurityException"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfPasswordException">
            <summary>
            Represents an exception that occurred if an invalid password was used while parsing PDF content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfPasswordException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfPasswordException"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileID">
            <summary>
            Defines ID of PDF file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileID.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FileID"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileID.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FileID"/> class.
            </summary>
            <param name="permanentID">The permanent ID.</param>
            <param name="changingID">The changing ID.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileID.PermanentID">
            <summary>
            Gets or sets 16-byte array defining a permanent identifier based on the contents of the file at the time it was originally
            created and does not change when the file is incrementally updated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileID.ChangingID">
            <summary>
            Gets or sets 16-byte array defining  a changing identifier based on the file’s contents at the time it was last updated.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AFRelationship">
            <summary>
            Contains string constants with predefined values for <see cref="P:GrapeCity.Documents.Pdf.FileSpecification.Relationship"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AFRelationship.Source">
            <summary>
            Constant shall be used if this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> is the original
            source material for the associated content.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AFRelationship.Data">
            <summary>
            Constant shall be used if this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> represents information
            used to derive a visual presentation, such as for a table or a
            graph.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AFRelationship.Alternative">
            <summary>
            Constant shall be used if this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> is an alternative
            representation of content, for example audio.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AFRelationship.Supplement">
            <summary>
            Constant shall be used if this file specification represents a
            supplemental representation of the original source or data that
            may be more easily consumable(e.g.A MathML version of an
            equation).
            Note. Supplement is to be used only when the file is not the
            source or an alternative.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AFRelationship.Unspecified">
            <summary>
            Constant shall be used when the relationship is not known
            or cannot be described using one of the other values.
            NOTE 2 Unspecified is to be used only when no other value correctly
            reflects the relationship.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileSpecification">
            <summary>
            Represents a PDF File Specification.
            <para>
            The complex architecture of this class is based on the PDF Specification,
            for full details please consult that spec.
            </para>
            <para>
            In many practical scenarios while generating PDFs, using the provided static constructors
            on the derived classes (<see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/>, <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> etc.)
            may be enough though.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FileSpecification._doc">
            <summary>
            The reference to the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> is initialized when object created during
            parsing the document and used for delayed parsing.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.HasEmbeddedFileStream">
            <summary>
            Gets a value indicating that this file specification has at least one
            <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> associated with it.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.GetStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/>,
            or null if the file specification is empty.
            <para>Important: this <see cref="T:System.IO.Stream"/> must be disposed after use.</para>
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/> with the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/>,
            or null if it is empty. If not null, the stream must be disposed after use!</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.FileSystem">
            <summary>
            Gets or sets the file system to be used to interpret this file specification.
            </summary>
            <remarks>
            If this property is present, all other properties are interpreted by the designated file system.
            PDF defines only one standard file system name, URL;
            an application or plug-in extension can register other names.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.ID">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.FileID"/> object specifying the ID of the referenced file.
            </summary>
            <remarks>
            This property improves an application’s chances of finding the intended file and allows it to warn
            the user if the file has changed since the link was made.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.Volatile">
            <summary>
            Gets or sets a value indicating whether the file referenced by the file specification is volatile
            (changes frequently with time). If the value is true, applications should never cache a copy of the file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.Desc">
            <summary>
            Gets or sets the description of this File Specification.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.Relationship">
            <summary>
            Gets or sets a value that represents the relationship of this object
            to the source that points to it.
            <para>
            Predefined values are <b>Source</b>, <b>Data</b>, <b>Alternative</b>,
            <b>Supplement</b> and <b>Unspecified</b>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.File">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object that specifies information about a referenced file.
            Note that this property should be used for files with names containing ASCII characters only,
            and is provided for backwards compatibility. For file names that contain non-ASCII characters,
            <see cref="P:GrapeCity.Documents.Pdf.FileSpecification.UnicodeFile"/> should be used instead.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.FileSpecification.UnicodeFile"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.UnicodeFile">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object that specifies information about a referenced file.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.FileSpecification.File"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.DOSFile">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object defining information about referenced file for DOS platform.
            NOTE: Using this property is not recommended beginning with PDF 1.7.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.MacFile">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object defining information about referenced file for Mac OS platform.
            NOTE: Using this property is not recommended beginning with PDF 1.7.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.UnixFile">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object defining information about referenced file for Unix platform.
            NOTE: Using this property is not recommended beginning with PDF 1.7.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.FromDOSFileName(System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object from a DOS file name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.FromEmbeddedStream(System.String,GrapeCity.Documents.Pdf.EmbeddedFileStream,System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object referencing a specified <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.FromEmbeddedFile(GrapeCity.Documents.Pdf.EmbeddedFileStream,System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object referencing a specified <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.FromURI(System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object representing an URI reference.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileSpecification.Content">
            <summary>
            The parsed content of PDF specification object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo">
            <summary>
            Represents information about a file for a particular platform.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.FileInfo.GetStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/>,
            or null if the file specification is empty.
            <para>Important: this <see cref="T:System.IO.Stream"/> must be disposed after use.</para>
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/> with the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/>,
            or null if it is empty. If not null, the stream must be disposed after use!</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.FileInfo.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.FileInfo.FileName">
            <summary>
            Gets or sets the file specification string of the form described in PDF Specification Section 3.10.1, “File Specification Strings”.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.FileInfo.EmbeddedFileStream">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> associated with this file specification.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.FileInfo.RelatedFiles">
            <summary>
            Gets the collection of related files, see PDF Specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile">
            <summary>
            Represents information about a related file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.#ctor(System.String,GrapeCity.Documents.Pdf.EmbeddedFileStream)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile"/> class.
            </summary>
            <param name="fileName">The name of the related file.</param>
            <param name="embeddedFileStream">The file content.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.GetStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile"/>,
            or null if the file specification is empty.
            <para>Important: this <see cref="T:System.IO.Stream"/> must be disposed after use.</para>
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/> with the content of this <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile"/>,
            or null if it is empty. If not null, the stream must be disposed after use!</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.FileInfo">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.FileSpecification">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.FileName">
            <summary>
            Gets the file name of the related file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile.EmbeddedFileStream">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> holding the file content.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFileCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFile"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.RelatedFileCollection.#ctor(GrapeCity.Documents.Pdf.FileSpecification.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.RelatedFileCollection"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FileSpecification.RelatedFileCollection.OnChanged">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FileSpecification.RelatedFileCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FileSpecification.FileInfo"/> object owning this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.ASCII85DecodeFilter">
            <summary>
            ASCII85Decode filter, see PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.ASCIIHexDecodeFilter">
            <summary>
            ASCIIHexDecode filter, see PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.DecodeFilterBase">
            <summary>
            Base class for PDF decode filters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.DecodeFilterBase.DecodeStream(System.IO.Stream,System.IO.Stream,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Decodes a stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.DecodeFilterBase.DecodeStream(System.IO.Stream,System.Int32,GrapeCity.Documents.Pdf.Spec.PdfName[],GrapeCity.Documents.Pdf.Spec.IPdfDict[],GrapeCity.Documents.Pdf.Spec.PdfName@,GrapeCity.Documents.Pdf.Spec.IPdfDict@,System.Boolean@,GrapeCity.Documents.Pdf.Spec.IPdfDict@)">
            <summary>
            Decodes a stream using specified filters and their parameters.
            Note! Method assumes that <paramref name="filters"/> is not null and not empty.
            Note! Method returns source stream if <paramref name="filters"/> contains only /Crypt filter.
            The <b>out</b> parameters <paramref name="imageFilterName"/> and <paramref name="imageFilterDecodeParams"/>
            contain the name and parameters of the image filter if it is last in the <paramref name="filters"/> array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.DecodeFilterBase.DecodeStream(System.IO.Stream,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName@,GrapeCity.Documents.Pdf.Spec.IPdfDict@,System.Boolean@,GrapeCity.Documents.Pdf.Spec.IPdfDict@)">
            <summary>
            Decodes a stream.
            Note! Method returns source stream if <paramref name="ipd"/> has no /Filter entry or
            it contains only /Crypt and image filters.
            The <b>out</b> parameters <paramref name="imageFilterName"/> and <paramref name="imageFilterDecodeParams"/>
            contain the name and parameters of the image filter if it is last in the /Filter entry.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.FlateDecodeFilter">
            <summary>
            FlateDecode filter, uses ZIP compression.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.ImageDecodeFilter">
            <summary>
            Dummy filter used in current implementation to read content
            encoded with Image filters:
            CCITTFaxDecode, JBIG2Decode, DCTDecode, JPXDecode.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.LZWDecodeFilter">
            <summary>
            LZWDecode filter, see PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.Predictor">
            <summary>
            Based on code from old PdfParser, should be reviewed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.Predictor.doSubLine(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Return the value of the Sub algorithm on the line (compare bytes to
            the previous byte of the same color on this line).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.Predictor.doUpLine(System.Byte[],System.Byte[])">
            <summary>
            Return the value of the up algorithm on the line (compare bytes to
            the same byte in the previous line)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.Predictor.doAverageLine(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Return the value of the average algorithm on the line (compare
            bytes to the average of the previous byte of the same color and 
            the same byte on the previous line)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.Predictor.doPaethLine(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the value of the average algorithm on the line (compare
            bytes to the average of the previous byte of the same color and 
            the same byte on the previous line)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Filters.Predictor.paeth(System.Int32,System.Int32,System.Int32)">
            <summary>
            The paeth algorithm
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Filters.RunLengthDecodeFilter">
            <summary>
            RunLengthDecode filter, see PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FontEmbedMode">
            <summary>
            Specifies available font embedding modes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FontEmbedMode.NotEmbed">
            <summary>
            The font is not embedded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedSubset">
            <summary>
            A subset of the font is embedded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedFullFont">
            <summary>
            The whole font is embedded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedSubsetNoForms">
            <summary>
            A subset of the font is embedded for static content.
            <para>
            If the font is used in the Acroform, 
            a non-embedded PDF font will be associated with the form fields.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FontHandlerCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FontHandlerCollection.TryGetFontHandler(GrapeCity.Documents.Text.Font,GrapeCity.Documents.Pdf.FontHandler@)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> associated with a specified <see cref="T:GrapeCity.Documents.Text.Font"/>.
            </summary>
            <param name="font">The raw font.</param>
            <param name="pdfFont">OUT: the PdfFont object, or null.</param>
            <returns>True if a PdfFont was found, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FontHandlerCollection.GetFontHandler(GrapeCity.Documents.Text.Font)">
            <summary>
            Gets an existing <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> associated with a specified <see cref="T:GrapeCity.Documents.Text.Font"/>,
            or creates a new one if such font does not exist.
            </summary>
            <param name="font">The font.</param>
            <returns>The existing or newly created PdfFont.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandlerCollection.HasUsedFonts">
            <summary>
            Gets a value indicating whether the current collection contains
            at least one <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> object with the <see cref="P:GrapeCity.Documents.Pdf.FontHandler.UsedInDocument"/> property set.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandlerCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FontHandler">
            <summary>
            Represents and manages a <see cref="T:GrapeCity.Documents.Text.Font"/>
            used in a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FontHandler.#ctor(GrapeCity.Documents.Text.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> class.
            </summary>
            <param name="font">The <see cref="T:GrapeCity.Documents.Text.Font"/> associated with the current FontHandler.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FontHandler.BeforeSave">
            <summary>
            Called before saving the document.
            Can be used to prepare internal objects, for example embedded data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FontHandler.HasPdfFont(GrapeCity.Documents.Pdf.Text.Font)">
            <summary>
            Returns a value indicating whether the <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/> owns specified PDF font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.FontHandlerCollection"/> containing this <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.Font">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Text.Font"/> associated with this <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.EmbedMode">
            <summary>
            Gets or sets the font embedding mode.
            <para>
            By default this property is unspecified (null), and the actual embedding mode depends on 
            whether or not the <see cref="P:GrapeCity.Documents.Pdf.FontHandler.Font"/> is one of <see cref="T:GrapeCity.Documents.Pdf.StandardFonts"/>.</para>
            <para>For standard fonts, <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StandardFontEmbedMode"/> determines the embedding mode.</para>
            <para>For all other fonts, <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontEmbedMode"/> determines the embedding mode.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.Utf32CodeSet">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Text.Utf32CodeSet"/> object that specifies which
            Unicode characters will be included in the embedded subset in addition to the glyphs 
            used in the static document content.
            <para>By default this property is null.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.FontSubsetFlags">
            <summary>
            Gets or sets the flags that allow fine-tuning the creation of subset for this font.
            <para>By default this is null, which indicates that GcPdf will select appropriate flags automatically.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FontHandler.UsedInDocument">
            <summary>
            Gets a value indicating whether the current font is actually used in the document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Functions.Function">
            <summary>
            Represents the PDF function object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Functions.Function.c_FunctionTypeSampled">
            <summary>
            Type 0 function.
            Sampled functions use a sequence of sample values (contained in a stream) to provide
            an approximation for functions whose domains and ranges are bounded.
            The samples are organized as an m-dimensional table in which each entry has n components.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Functions.Function.c_FunctionTypeExponentialInterpolation">
            <summary>
            Type 2 function.
            Defines an exponential interpolation of one input value and n output values:
            f(x) = y0 ... yn-1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Functions.Function.c_FunctionTypeStitching">
            <summary>
            Type 3 function.
            Define a stitching of the sub-domains of several 1-input functions to produce a single new 1-input function.
            Since the resulting stitching function is a 1-input function,
            the domain is given by a two-element array, [ Domain0 Domain1 ].
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Functions.Function.c_FunctionTypePostScript">
            <summary>
            Type 4 function.
            PostScript Calculator functions is represented as a stream containing code written
            in a small subset of the PostScript language.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Functions.Function.GetInCount">
            <summary>
            Returns the count of input values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Functions.Function.GetCalculator(System.Int32)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Functions.Function.ICalculator"/> object which can be used to calculate function's value,
            returns null if function definition is invalid or not supported.
            </summary>
            <param name="outCount">The count of out values which function should return.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Functions.Function.ICalculator">
            <summary>
            Allows calculating the value of the <see cref="T:GrapeCity.Documents.Pdf.Functions.Function"/>,
            returned by <see cref="M:GrapeCity.Documents.Pdf.Functions.Function.GetCalculator(System.Int32)"/> method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Functions.Function.c_InterpolationOrderLinear">
            <summary>
            Linear interpolation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Functions.Function.c_InterpolationOrderCubicSpline">
            <summary>
            Cubic spline interpolation.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ICMapProvider">
            <summary>
            This interface is used by <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> to request predefined CMap tables
            from external sources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ICMapProvider.GetCMap(System.String)">
            <summary>
            Returns the predefined <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> object by name.
            </summary>
            <param name="name">The CMap name.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfAConformanceLevel">
            <summary>
            Defines the PDF conformance levels.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.None">
            <summary>
            Without PDF/A conformance.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA1a">
            <summary>
            PDF/A 1a conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA1b">
            <summary>
            PDF/A 1b conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA2a">
            <summary>
            PDF/A 2a conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA2b">
            <summary>
            PDF/A 2b conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA2u">
            <summary>
            PDF/A 2u conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA3a">
            <summary>
            PDF/A 3a conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA3b">
            <summary>
            PDF/A 3b conformance level.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfAConformanceLevel.PdfA3u">
            <summary>
            PDF/A 3u conformance level.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfDocumentState">
            <summary>
            Defines the possible states of a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfDocumentState.None">
            <summary>
            None, no special state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfDocumentState.Saving">
            <summary>
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> currently executed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfDocumentState.Generating">
            <summary>
            The content of the document currently generated via StartDoc() / EndDoc() methods.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SaveMode">
            <summary>
            Defines the modes of saving a PDF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SaveMode.Default">
            <summary>
            Default mode. In this mode, the PDF is not linearized and incremental update is not used.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SaveMode.Linearized">
            <summary>
            The document is saved as a linearized ("fast web view") PDF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SaveMode.IncrementalUpdate">
            <summary>
            The document is saved using incremental update.
            <para>
            Note that this method is not applicable if the current PDF was created from scratch
            (i.e. an existing PDF was not loaded). In that case this value will be ignored
            and <see cref="F:GrapeCity.Documents.Pdf.SaveMode.Default"/> will be used.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfStreamHandling">
            <summary>
            Defines how to process existing PDF streams in a loaded document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfStreamHandling.Copy">
            <summary>
            Copy the content of the original stream to the output as is without any changes.
            Note that <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.CompressionLevel"/> will not affect any
            existing streams in this case, and will only be used for saving streams that were added
            after loading the document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfStreamHandling.UseCompressionLevel">
            <summary>
            Decompress existing PDF streams and re-compress them using <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.CompressionLevel"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfStreamHandling.MinimizeSize">
            <summary>
            Copy existing streams or re-compress them to achieve optimal (minimal) size.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IDocProvider">
            <summary>
            For internal use.
            Allows getting the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owner object implementing this interface.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IDocProvider.Doc">
            <summary>
            Gets the owner <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument">
             <summary>
             Represents a PDF document.
             <para>The object model provided by this class follows the PDF 1.7 Reference specification.</para>
             </summary>
             <remarks>
             <para>To create a PDF document, create an instance of the GcPdfDocument class.</para>
            
             Two approaches are possible for adding content and saving the document:
             <list type="bullet">
                 <item>
                     <term>Direct mode</term>
                     <description>In this mode, you add pages to the document and draw on them (see below) in arbitrary order.
                         In particular, you can modify pages that have been already created.
                         When done, use <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> or <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/> method to save the document.
                         This mode is convenient but uses temporary files, so is somewhat less efficient than sequential mode described next.
                     </description>
                 </item>
                 <item>
                     <term>Sequential mode</term>
                     <description>
                         To use this mode, you call <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/> prior to any other operations on the document.
                         You can then add pages and draw on them, but you can only draw on the last (current) page.
                         All content is immediately added to the underlying stream without the use of temporary files.
                         To complete creating the document, you must call <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.EndDoc"/>.
                     </description>
                 </item>
             </list>
            
             The pages of the document are accessible via the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.Pages"/> collection.
             To add content, use <see cref="P:GrapeCity.Documents.Pdf.Page.Graphics"/> property to get a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> for a page.
             (In sequential mode, only the currently last page of the document can be drawn on.)
             You can then use that graphics object to draw the desired content.
             </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.c_GenericHintTableLength">
            <summary>
            The length of generic hint table in bytes,
            see page 1048 PDF1.7
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.c_ValidDocID">
            <summary>
            The Doc ID which is interpreted as valid not depending on <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_DocID"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog">
            <summary>
            For internal use.
            The <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> used to log PDF parser operations.
            By default this field is null, set it to instance of <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> if you want
            to get possible parser warnings, info messages etc.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument._partialGraphicsStateParams">
            <summary>
            The global, document level, collection of <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams"/> objects which are shared between
            all document's pages, rendered with using <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_HatchTillingPatterns">
            <summary>
            The global dictionary of <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern"/> objects used to render <see cref="T:GrapeCity.Documents.Drawing.HatchBrush"/>
            objects. These objects shared between all document's pages, rendered with using <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_CrossReferenceIndexGenerator">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator"/> object 
            used to generate the document cross-reference index when document is saved or
            generated using StartDoc()/EndDoc() methods.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_Writer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter"/> used to generate PDF content,
            initialized in the Save() method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_State">
            <summary>
            The document's state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument._externalStream">
            <summary>
            External stream passed in <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/> method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_IncrementalUpdate">
            <summary>
            Indicates whether the document is saved using incremental updates.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_Linearized">
            <summary>
            This field is true when:
            <list type="bullet">
            <item>The PDF that was loaded into this GcPdfDocument was linearized ("fast web view")</item>
            <item>The document was saved in linearized format, i.e. <see cref="F:GrapeCity.Documents.Pdf.SaveMode.Linearized"/>
            was passed to the GcPdfDocument.Save() method.</item>
            </list>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_DocID">
            <summary>
            The counter is incremented each time the document is saved.
            All document's objects have the same counters and they are incremented
            when document is saved, it allows determining
            "slate" references, that occur when a document's object references object which actually
            does not belong to the document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_StartObjID">
            <summary>
            The starting ID, from what the ID's of indirect objects should be started.
            The value is updated when document is loaded and when document is saved,
            it allows implementing incremental update.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_PreviousXRefPos">
            <summary>
            The position of previous xref table, that should be used in case of incremental updates.
            The value is updated when document is loaded and when document is saved,
            it allows implementing incremental update.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_DeviceRGBUncoloredPattern">
            <summary>
            The instance of <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern"/> used by 
            <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> to write uncolored pattern.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_CrossReferenceIndex">
            <summary>
            The cross-reference index of the loaded PDF document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.Parser">
            <summary>
            Initialized when document loaded from a stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizedEmbeddedFileStreams">
            <summary>
            List of <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> objects serialized separately in linearized mode.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_TimeSeedForTimeStamp">
            <summary>
            For internal use.
            The value used to generate time-stamp token, if null them it will be generated based on current time.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_SignatureContentsOffset">
            <summary>
            Used when the document is signed with Sign(...) method.
            Contains offset of Contents property of generated signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_SignatureContentSize">
            <summary>
            Used when the document is signed with Sign(...) method.
            Contains the size of reserved area for signature binary data.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_SignatureByteRangeOffset">
            <summary>
            Used when the document is signed with Sign(...) method.
            Contains offset of ByteRange property of generated signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_SignatureProperties">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> object passed in Sign(...) method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_TimeStampProperties">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.TimeStampProperties"/> object passed in TimeStamp(...) method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> class,
            optionally specifying a license key.
            </summary>
            <param name="licenseKey">The license key to use.
            If null, and <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SetLicenseKey(System.String)"/> has been called, the key set with that method is used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.BeforeSave">
            <summary>
            Called directly before writing the document, prepares internal objects,
            for example, generates appearance streams for annotations if they were not
            generated by the user.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.AfterSave">
            <summary>
            Called when document's writing is finished.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.WriteCrossReferenceTable">
            <summary>
            Writes the document cross-reference index as cross-reference table.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.WriteCrossReferenceStream">
            <summary>
            Writes the document cross-reference index as cross-reference stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveDefault">
            <summary>
            Saves document in not linearized form.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.OnSavingDocument(System.Single,System.Boolean)">
            <summary>
            Fires the <see cref="E:GrapeCity.Documents.Pdf.GcPdfDocument.SavingDocument"/> event.
            </summary>
            <param name="progress">The current saving progress from 0 to 1.</param>
            <param name="canCancel">Whether the operation can be canceled.</param>
            <returns>true if operation was no canceled; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.EnumerateResourceDictionaries(System.Func{GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.Boolean})">
            <summary>
            Enumerates the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> objects in this document,
            excluding the AcroForm default resources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SetMinPdfVersion(System.String)">
            <summary>
            Sets the minimum PDF version that supports a feature in this document.
            E.g. if a property being set on the document was introduced in PDF 1.4,
            the property setter should call this with "1.4" as the ver parameter.
            </summary>
            <param name="ver">The minimum PDF version required by the calling code, such as "1.3" or "1.7".</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetPdfVersion(GrapeCity.Documents.Pdf.PdfAConformanceLevel)">
            <summary>
            Gets text value of PDF file version.
            </summary>
            <param name="conformanceLevel">The PDF/A conformance level.</param>
            <returns>The text PDF file version.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ContainsObject(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Checks whether the object belongs to the document, i.e.
            object will be persisted when document is saved.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetText(GrapeCity.Documents.Pdf.Layers.ViewState,System.Boolean)">
            <summary>
            Extracts and returns all text from the current document.
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF during processing.</param>
            <returns>All text in the current document.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetText(System.Boolean)">
            <summary>
            Extracts and returns all text from the current document.
            </summary>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF during processing.</param>
            <returns>All text in the current document.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Clear">
            <summary>
            Clears the document, removing all content and resetting all properties and settings to their initial default values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetLogicalStructure(GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean,GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions)">
            <summary>
            Parses the PDF's structure tree (as returned by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot"/> property)
            and creates a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object that represents the logical structure
            of the document.
            <para>
            Returns null if the current document does not have a structure tree.
            </para>
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="dpiX">The horizontal resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="dpiY">The vertical resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors during processing.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions"/> object that specifies recognition options.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetLogicalStructure(System.Single,System.Single,System.Boolean,GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions)">
            <summary>
            Parses the PDF's structure tree (as returned by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot"/> property)
            and creates a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object that represents the logical structure
            of the document.
            <para>
            Returns null if the current document does not have a structure tree.
            </para>
            </summary>
            <param name="dpiX">The horizontal resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="dpiY">The vertical resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors during processing.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions"/> object that specifies recognition options.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetLogicalStructure(GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean)">
            <summary>
            Parses the PDF's structure tree (as returned by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot"/> property)
            and creates a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object that represents the logical structure
            of the document.
            <para>
            Returns null if the current document does not have a structure tree.
            </para>
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="dpiX">The horizontal resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="dpiY">The vertical resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors during processing.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetLogicalStructure(System.Single,System.Single,System.Boolean)">
            <summary>
            Parses the PDF's structure tree (as returned by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot"/> property)
            and creates a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object that represents the logical structure
            of the document.
            <para>
            Returns null if the current document does not have a structure tree.
            </para>
            </summary>
            <param name="dpiX">The horizontal resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="dpiY">The vertical resolution (DPI) to use for positions and sizes of PDF elements.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors during processing.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.NewPage">
            <summary>
            Adds a blank page to the document.
            <para>The size of the new page is defined by the value of the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageSize"/> property.</para>
            <para>If you want the new page to have a different size than the rest of the document,
            create the new page first, then set the <see cref="P:GrapeCity.Documents.Pdf.Page.Size"/> property.</para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String)">
            <summary>
            Saves the current PDF document to a file
            using the default mode (no incremental update, not linearized).
            </summary>
            <param name="fileName">The name of the PDF file to create.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream)">
            <summary>
            Saves the current PDF document to a <see cref="T:System.IO.Stream"/>
            using the default mode (no incremental update, not linearized).
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object to use for saving the document.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Saves the current PDF document to a <see cref="T:System.IO.Stream"/>
            using the specified save mode.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object to use for saving the document.</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Saves the current PDF document to a file
            using the specified save mode.
            </summary>
            <param name="fileName">The name of the PDF file to create.</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)">
            <summary>
            Saves the current PDF document to a file,
            optionally using incremental update mode.
            </summary>
            <param name="fileName">The name of the PDF file to create.</param>
            <param name="incrementalUpdate">Indicates whether the document should be saved using incremental update.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)">
            <summary>
            Saves the current PDF document to a <see cref="T:System.IO.Stream"/>,
            optionally using incremental update mode.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object to use for saving the document.</param>
            <param name="incrementalUpdate">Indicates whether the document should be saved using incremental update.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)">
            <summary>
            Starts document generation in sequential mode.
            <para>
            In this mode, the content of the document is written directly into the underlying stream
            as soon as it is created, without the use of temporary files.
            When all content has been added, call <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.EndDoc"/> to finish creating the document.
            </para>
            </summary>
            <param name="stream">The stream to which the PDF document will be written.</param>
            <remarks>
            <para>
            Sequential mode may provide better performance,
            but it does not allow modifying the already created pages
            (which is possible when <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/> is not called,
            and the document is saved by <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> or <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/>
            after all content has been added instead.)
            </para>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.EndDoc"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.EndDoc">
            <summary>
            Ends document generation in sequential mode.
            This call must be preceded by a call to <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/>.
            </summary>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageMode">
            <summary>
            Gets or sets how the document should be displayed when opened.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageLayout">
            <summary>
            Gets or sets the page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PdfStreamHandling">
            <summary>
            Gets or sets a value controlling how existing PDF streams will be handled
            when the document is saved.
            Note that this property is meaningful only if an existing PDF has been loaded.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.SecurityStore">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore"/> object associated with this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.OptionalContent">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties"/> object that contains
            information about optional PDF content (layers) in this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.OutputIntents">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.OutputIntent"/> objects associated 
            with the current document.
            <para>
            Note that if the document is saved as PDF/A (see <see cref="T:GrapeCity.Documents.Pdf.PdfAConformanceLevel"/>)
            and this collection is empty, a default output intent will be automatically added
            to it.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.ImageHandlers">
            <summary>
            Gets the collection of <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> objects associated with the current document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm">
            <summary>
            Gets or sets the type of algorithm that is used for PDF content recognition
            when building page text maps (see <see cref="M:GrapeCity.Documents.Pdf.Page.GetTextMap(System.Single,System.Single,System.Boolean)"/>).
            <para>
            This property affects the behavior of methods such as <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetText(System.Boolean)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Common.OutputRange)"/>, <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Pdf.TextMap.FindTextCallback)"/>
            and other APIs that rely on text maps.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionOptions">
            <summary>
            <para>For internal use.</para>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.RecognitionOptions"/> object
            that specifies the options used to build text maps (<see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageLabelingRanges">
            <summary>
            Gets the dictionary of <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> objects.
            Each key in this dictionary is the index of the first page in a labeling range.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.ArticleThreads">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleThread"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontCollection">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Text.IFontCollection"/> object used when the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>
            needs to find a <see cref="T:GrapeCity.Documents.Text.Font"/> (e.g. if it is not embedded in the PDF).
            If this property is null (the default), then the <see cref="P:GrapeCity.Documents.Text.FontCollection.SystemFonts"/> will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontHandlers">
            <summary>
            Gets the collection of font handlers associated with the current document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontEmbedMode">
            <summary>
            Gets or sets the font embedding mode.
            <para>The default is <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedSubset"/>.</para>
            <para>Note that this property does not affect the 14 standard PDF fonts,
            their embedding is determined by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StandardFontEmbedMode"/> property.</para>
            <para>Also note that if the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> is saved as PDF/A,
            and the value of this property is <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.NotEmbed"/>,
            the fonts are embedded anyway using the <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedSubset"/> mode.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.StandardFontEmbedMode">
            <summary>
            Gets or sets the font embedding mode for the 14 standard PDF fonts.
            <para>The default is <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.NotEmbed"/>.</para>
            <para>Note that if the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> is saved as PDF/A,
            and the value of this property is <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.NotEmbed"/>,
            the standard fonts are embedded anyway using the <see cref="F:GrapeCity.Documents.Pdf.FontEmbedMode.EmbedSubset"/> mode.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FormEmbedUtf32CodeSet">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Text.Utf32CodeSet"/> object that specifies which
            Unicode characters to include in embedded font subsets for fonts that are used in AcroForms.
            <para>
            This value will be used for a font if that font handler's <see cref="P:GrapeCity.Documents.Pdf.FontHandler.Utf32CodeSet"/> is null.
            </para>
            <para>
            Note that if for a font, its <see cref="P:GrapeCity.Documents.Pdf.FontHandler.Utf32CodeSet"/> is null,
            and <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.FormEmbedUtf32CodeSet"/> is null,
            and the font is used in the AcroForm, then this whole font will be embedded
            even if partial embedding is specified by <see cref="P:GrapeCity.Documents.Pdf.FontHandler.EmbedMode"/> or
            <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontEmbedMode"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.AssociatedFiles">
            <summary>
            Gets the collection of embedded files associated with whole document.
            Typically it is used to identify which embedded file was the source of the PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Outlines">
            <summary>
            Gets the collection of the current document outlines.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.NamedDestinations">
            <summary>
            Gets the dictionary of named destinations defined in the current document.
            </summary>
            <remarks>
            According to the PDF specification, the named destinations can be specified in two ways:
            <list type="bullet">
            <item>As a PDF Dictionary in the Dests entry of the document catalog.</item>
            <item>As a PDF Name Tree in the Dests entry of the document Name Dictionary.</item>
            </list>
            This property combines the destinations from both sources into a single dictionary.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DestinationsDests">
            <summary>
            Gets the dictionary of named destinations defined in the Dests entry of the document catalog.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DestinationsNamesDests">
            <summary>
            Gets the dictionary of named destinations defined in the Dests entry of the Name Dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.EmbeddedFiles">
            <summary>
            Gets the dictionary of document level file attachments.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Metadata">
            <summary>
            Gets or sets the metadata associated with this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.AcroForm">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.AcroForms.AcroForm"/> object defining common properties of the AcroForms in this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PdfACompliant">
            <summary>
            Gets or sets a value indicating whether the document is PDF/A compliant.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.ImageOptions">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.ImageOptions"/> object that contains options
            controlling how images are processed in the current document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentInfo">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> object that contains information about
            this document (author, title, etc).
            <para>
            Note: this property is not null by default (when a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> is created)
            but it can become null after a call to <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.String)"/>
            if the loaded document does not have a document info object.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/> object that represents the current document's
            structure tree as defined by PDF structure tags.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.MarkInfo">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Structure.MarkInfo"/> object that provides additional information
            relevant to specialized uses of structured PDF documents.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.OpenAction">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> to be displayed or an <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/>
            to be performed when the document is opened.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.ViewerPreferences">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.ViewerPreferences"/> object that contains information
            specifying how the current document should be displayed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Security">
            <summary>
            Gets the <see cref="N:GrapeCity.Documents.Pdf.Security"/> object that manages security for
            the current document (passwords, etc).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FileID">
            <summary>
            Gets or sets the <see cref="T:FileID"/> object defining ID of this PDF document.
            Note that this ID is automatically updated if the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Clear"/> method is called.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.ConformanceLevel">
            <summary>
            Gets or sets the PDF/A conformance level.
            <para>The default is none (the document does not conform to PDF/A).</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.WriteComments">
            <summary>
            Gets or sets a value indicating whether comments and some optional line breaks will be added to the generated PDF file.
            Primarily useful for debugging.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.CompressionLevel">
            <summary>
            Gets or sets the compression level. Default value is <see cref="F:System.IO.Compression.CompressionLevel.Fastest"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.IsCompressed">
            <summary>
            Gets a value indicating whether compression is used when saving the document.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.CompressionLevel"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageSize">
            <summary>
            Gets or sets the default page size for the document (in points).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Landscape">
            <summary>
            Gets or sets a value indicating whether newly added pages have landscape orientation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PaperKind">
            <summary>
            Gets or sets the page size for the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageRectangle">
            <summary>
            Gets a rectangle that represents the surface of the current page (in points).
            </summary>
            <remarks>
            This property returns a rectangle located at point (0,0) with
            size equal to the size of the current page. It can be used as a starting
            point for building rectangles that will be used for drawing on the page.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Pages">
            <summary>
            Gets the collection of <see cref="T:GrapeCity.Documents.Pdf.Page"/> objects that make up the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.PdfVersion">
            <summary>
            Gets or sets the PDF Version of the generated document.
            <para>
            By default the version is determined automatically based on which features are used in this document.
            Setting this property to a non-null string in the format "1.X"
            (where X is a digit from 0 to 9) overrides the automatic value with the specified one.
            </para>
            <para>Setting this property to null or an empty string reverts to the default behavior.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Lang">
            <summary>
            Gets or sets a language identifier specifying the natural language
            for all text in the document except where overridden by language specifications
            for structure elements or marked content.
            If this entry is absent, the language is considered unknown.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.UseSingleWriteOperationWithStreams">
            <summary>
            For internal use.
            Gets or sets a value indicating whether streams should be compressed
            using single operation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.WriteNamedDestinationsToNames">
            <summary>
            For internal use.
            Gets or sets a value indicating whether <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> objects in <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.NamedDestinations"/>
            dictionary should be saved in Dests entry of Names subdictionary of Document Catalog.
            Note! This flag is NOT used if loaded document contains named destinations.
            </summary>
        </member>
        <member name="E:GrapeCity.Documents.Pdf.GcPdfDocument.SavingDocument">
            <summary>
            Occurs periodically when the document is being saved or exported.
            Can be used to implement a progress indicator.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.BuildRichTextAppearanceStreams">
            <summary>
            Gets or sets a value indicating whether to generate appearance streams for annotations
            that have rich text content (<see cref="T:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation"/>, <see cref="T:GrapeCity.Documents.Pdf.Annotations.LineAnnotation"/>).
            The default value for this property is <see langword="false"/>.
            <para>
            Note that currently there is a limitation: if this property is set to <see langword="true"/>
            so that appearance streams for rich text are generated, all rich text formatting is ignored.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.CMapProvider">
            <summary>
            Gets or sets an object that implements the <see cref="T:GrapeCity.Documents.Pdf.ICMapProvider"/> interface.
            <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> uses that interface to obtain an <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/>
            if it specified by name in the PDF file.
            <para>
            By default GcPdf tries to initialize this property automatically in the
            <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>'s constructor with the <b>CMapProvider.Instance</b>
            defined in the optional GrapeCity.Documents.Pdf.Resources package
            (which in this case needs to be explicitly referenced by the application).
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FloatFormat">
            <summary>
            For internal use.
            Gets or sets the format string applied to float values written to PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetFontText(GrapeCity.Documents.Pdf.Text.Font)">
            <summary>
            Gets the set of unicode characters rendered with specified font.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetEncodedFont(GrapeCity.Documents.Pdf.Text.Font)">
            <summary>
            Returns original <see cref="T:GrapeCity.Documents.Text.Font"/> object which represented in document by specified <paramref name="pdfFont"/>.
            Note! This method returns NOT null value only for fonts which were produced by <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetFonts">
            <summary>
            Gets the list of fonts in this <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
            <returns>The list of fonts present in this document.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetImages(System.Single,System.Single,System.Boolean)">
            <summary>
            Gets the list of images in this <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            <para>Note that for large documents this method can take a while to complete,
            as it enumerates the content streams of all pages in the document.</para>
            </summary>
            <param name="dpiX">The horizontal resolution used to calculate the bounds of images on pages.</param>
            <param name="dpiY">The vertical resolution used to calculate the bounds of images on pages.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF during processing.</param>
            <returns>The list of images present in this document.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetImages(System.Single,System.Single)">
            <summary>
            Gets the list of images in this <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            <para>Note that for large documents this method can take a while to complete,
            as it enumerates the content streams of all pages in the document.</para>
            </summary>
            <param name="dpiX">The horizontal resolution used to calculate the bounds of images on pages.</param>
            <param name="dpiY">The vertical resolution used to calculate the bounds of images on pages.</param>
            <returns>The list of images present in this document.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToFDF(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a stream in FDF format.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToFDF(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a file in FDF format.
            </summary>
            <param name="fileName">The destination file.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXFDF(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a stream in XFDF format.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXFDF(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a file in XFDF format.
            </summary>
            <param name="fileName">The destination file.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXML(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a stream in XML format.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXML(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)">
            <summary>
            Exports the document's form data to a file in XML format.
            </summary>
            <param name="fileName">The destination file.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.ExportFormDataOptions"/> object defining the export options.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromXFDF(System.IO.Stream)">
            <summary>
            Imports the document's form data from a stream in XFDF format.
            </summary>
            <param name="stream">The source stream.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromXFDF(System.String)">
            <summary>
            Imports the document's form data from a file in XFDF format.
            </summary>
            <param name="fileName">The source file.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromXML(System.IO.Stream)">
            <summary>
            Imports the document's form data from a stream in XML format.
            </summary>
            <param name="stream">The source stream.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromXML(System.String)">
            <summary>
            Imports the document's form data from a file in XML format.
            </summary>
            <param name="fileName">The source file.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromFDF(System.IO.Stream)">
            <summary>
            Imports the document's form data from a stream in FDF format.
            </summary>
            <param name="stream">The source stream.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromFDF(System.String)">
            <summary>
            Imports the document's form data from a file in FDF format.
            </summary>
            <param name="fileName">The source file.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromCollection(System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IList{System.String}}[])">
            <summary>
            Imports the document's form data from a key/value collection.
            <para>
            The keys are field names, the values are collections of field values.</para>
            <para>
            For nested fields, the field's name should include
            all its parents' names delimited by dots, e.g.
            <b>TopParent.Parent.MyField</b>.</para>
            <para>
            This method may be especially useful when importing form data
            submitted by a web page.</para>
            </summary>
            <param name="fieldValues">The collection of field names and their values.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ImportFormDataFromCollection(System.Collections.Generic.KeyValuePair{System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}}[])">
            <summary>
            Imports the document's form data from a key/value collection.
            <para>
            The keys are collections of strings representing fully qualified
            field names including all parents if they exist,
            from the top parent to the field itself,
            e.g. <b>new string[] { "TopParent", "Parent", "MyField" }</b>.</para>
            <para>
            The values are collections of field values.</para>
            <para>
            This method may be especially useful when importing form data
            submitted by a web page.</para>
            </summary>
            <param name="fieldValues">The collection of field names and their values.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.LH">
            <summary>
            Gets the license handler for the current document.
            Use it to test whether to limit licensed actions.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.IsLicensed">
            <summary>
            Gets a value indicating whether the current document is fully licensed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.DrawLicenseWarning(GrapeCity.Documents.Pdf.GcPdfGraphics,System.String)">
            <summary>
            Draws licensed warning.
            </summary>
            <param name="graphics"></param>
            <param name="text"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SetLicenseKey(System.String)">
            <summary>
            Sets the license key.
            </summary>
            <param name="key">The license key to set, or null to remove any previously set key.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetExtendedHintTableLength(System.Int32)">
            <summary>
            Returns length of the extended hint table in bytes.
            </summary>
            <param name="sharedObjectReferencesCount"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveLinearized">
            <summary>
            Saves the current PDF document to a <see cref="T:System.IO.Stream"/> int linearized form.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.Linearized">
            <summary>
            Gets a value indicating whether the PDF that was loaded into this GcPdfDocument was linearized ("fast web view").
            <para>Note that this value only indicates the linearization of the original PDF that was loaded,
            if the current document is saved its linearization is not affected by this property.
            To save the current document as linearized, pass <see cref="F:GrapeCity.Documents.Pdf.SaveMode.Linearized"/> when saving the PDF
            using one of the save methods:
            </para>
            <list type="bullet">
            <item><see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)"/></item>
            <item><see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,GrapeCity.Documents.Pdf.SaveMode)"/></item>
            <item><see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)"/></item>
            <item><see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.String,GrapeCity.Documents.Pdf.SaveMode)"/></item>
            </list>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.Page">
            <summary>
            The linked page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.ResourceDictionary">
            <summary>
            The cached value of <see cref="P:GrapeCity.Documents.Pdf.Page.ResourceDictionary"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.PageLength">
            <summary>
            Length of page's objects in bytes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.PageObjectCount">
            <summary>
            Count of page's objects, including page's dict itself.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.ContentStreamOffset">
            <summary>
            Offset of the content stream object relative to page object offset.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizationPageInfo.ContentStreamLength">
            <summary>
            Length of the content stream object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.GenericHintTable.FirstObjectID">
            <summary>
            The object number of the first object in the group.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.GenericHintTable.FirstObjectOffset">
            <summary>
            The location of the first object in the group.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.GenericHintTable.ObjectCount">
            <summary>
            The number of objects in the group.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfDocument.GenericHintTable.Length">
            <summary>
            The length of the object group in bytes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetPdfObject(GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase"/> with specified id.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetPdfObject(System.Int32)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase"/> with specified id.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SetParsedObject(GrapeCity.Documents.Pdf.Spec.IPdfObject,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Utility method, if <paramref name="ipo"/> is an indirect PDF object
            then sets the value of <see cref="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.ParsedObject"/>
            of corresponding <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem"/>
            to the <paramref name="parsedObject"/>.
            Does nothing if <paramref name="ipo"/> is not an indirect PDF object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SetParsedObject(GrapeCity.Documents.Pdf.Spec.PdfObjID,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Sets the <see cref="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.ParsedObject"/> to the specified value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetParsedObject(GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Gets the <see cref="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.ParsedObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,GrapeCity.Documents.Pdf.DecryptionOptions)">
            <summary>
            Loads the document from a specified input stream,
            overwriting the current content of the document.
            The stream should contain valid PDF data
            and must be kept open while reading or modifying the document.
            If the document is modified, it can be saved using the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/> or <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> methods.
            </summary>
            <param name="stream">The source <see cref="T:System.IO.Stream"/> object used to load the document content.</param>
            <param name="decryptionOptions">The <see cref="T:GrapeCity.Documents.Pdf.DecryptionOptions"/> object containing password and other decryption parameters.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.Byte[])">
            <summary>
            Loads the current document from a specified input stream,
            overwriting the current content of the document.
            The stream should contain valid PDF data,
            and must be kept open while reading or modifying the document.
            If the document is modified, it can be saved using the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/> or <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> method.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object used for loading the document content.</param>
            <param name="password">The password used to open the document.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.String)">
            <summary>
            Loads the current document from a specified input stream,
            overwriting the current content of the document.
            The stream should contain valid PDF data,
            and must be kept open while reading or modifying the document.
            If the document is modified, it can be saved using the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.String,System.Boolean)"/> or <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(System.IO.Stream,System.Boolean)"/> method.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object used for loading the document content.</param>
            <param name="password">The password used to open the document.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetStreamObjectData(System.Int32,System.Boolean)">
            <summary>
            For internal use.
            Returns the <see cref="T:System.IO.Stream"/> object representing data of specified PDF stream object,
            returns null if object with specified ID does not exist.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.RegisterPdfObject(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Registers an indirect PDF object with the current document
            and returns the ID of the object as a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObjID"/>.
            </summary>
            <param name="ipo">The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase"/> to add.</param>
            <returns>The ID of the registered object.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.LoadStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> object that was passed
            to the Load() method that was used to load this document,
            or null if Load() was not called.
            </summary>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.Byte[])"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.String)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,GrapeCity.Documents.Pdf.DecryptionOptions)"/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.MergeWithDocument(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.MergeDocumentOptions)">
            <summary>
            Merges all or some pages from a specified <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>
            into the current document.
            </summary>
            <param name="sourceDoc">The source document which is to be merged into the current document.</param>
            <param name="options">Options controlling what and how to merge.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.RemoveEmbeddedFonts">
            <summary>
            Removes embedded fonts from the current document.
            <para>Please note that a PDF may display incorrectly after removing embedded fonts. Use with caution.</para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.GetDocumentStats">
            <summary>
            For internal use.
            Gets statistics describing the current PDF.
            </summary>
            <returns>A <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats"/> object containing the stats data.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.OptimizeFonts">
            <summary>
            Optimizes font usage by merging subsets of same fonts and by removing duplicate
            and unused fonts.
            <para>This method uses the default values from <see cref="T:GrapeCity.Documents.Pdf.OptimizeFontsOptions"/>.</para>
            </summary>
            <returns>A <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats"/> object that contains statistics about
            fonts usage prior to the optimization.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.OptimizeFonts(GrapeCity.Documents.Pdf.OptimizeFontsOptions)">
            <summary>
            Optimizes font usage by merging subsets of same fonts, and by removing duplicate
            and unused fonts.
            </summary>
            <param name="options">An <see cref="T:GrapeCity.Documents.Pdf.OptimizeFontsOptions"/> object that specifies optimization options.</param>
            <returns>A <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats"/> object that contains statistics about
            fonts usage prior to the optimization.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats">
            <summary>
            For internal use.
            Contains various statistics about a PDF document,
            such as total size of pages etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats.PagesSize">
            <summary>
            Gets the total size of the pages' content streams.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats.FormXObjectsSize">
            <summary>
            Gets the total size of <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects' content streams.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats.FontsSize">
            <summary>
            Gets the total size of embedded fonts.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats.ImagesSize">
            <summary>
            Gets the total size of images.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats.StreamsSize">
            <summary>
            Gets the total size of PDF stream objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.DocumentStats.ObjectTypes">
            <summary>
            Gets the dictionary containing count of objects grouped by Type.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats">
            <summary>
            Represents statistical data about fonts and font optimizations.
            An instance of this class is created and returned by the 
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.OptimizeFonts"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.Fonts">
            <summary>
            Gets the list of fonts that were processed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontReplacements">
            <summary>
            Gets a list of tuples describing font replacements.
            Each element is a pair of values:
            <list type="bullet">
            <item><term>Tuple.Item1</term><description>The font that has been replaced.</description></item>
            <item><term>Tuple.Item2</term><description>The font that replaced <b>Tuple.Item1</b>.</description></item>
            </list>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontInfo">
            <summary>
            Represents information about a font and its usage in a PDF.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontInfo.Name">
            <summary>
            Gets the font name.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontInfo.Subsets">
            <summary>
            Gets the list of subsets.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontInfo.MergeInfos">
            <summary>
            Gets the list of fonts merge infos.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.MergeInfo">
            <summary>
            Represents information about fonts that were merged.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.MergeInfo.NewFont">
            <summary>
            Gets the data of the font created as the result of merging.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.MergeInfo.MergedFonts">
            <summary>
            Gets the list of PDF fonts that were merged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo">
            <summary>
            Represents a font subset and its usage in a PDF.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.SubsetName">
            <summary>
            Gets the name of the subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.Font">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Text.Font"/> object associated with this subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.Same">
            <summary>
            Gets the list of font subsets that define the exact same set
            of characters as the current subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.Contains">
            <summary>
            Gets the list of font subsets that define sets of characters
            which are fully contained in the current subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.ContainedIn">
            <summary>
            Gets the list of font subsets that define sets of characters
            which contain all characters in the current subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.Intersects">
            <summary>
            Gets the list of font subsets that define sets of characters
            that intersect with the set of characters defined in the current subset.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfDocument.FontsUsageStats.FontSubsetInfo.Conflicts">
            <summary>
            Gets the list of font subsets that define sets of characters
            which conflict with the set of characters defined in the current subset.
            A conflict occurs if the same PDF code is associated with different
            Unicode character or glyph in different font subsets.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Redact(GrapeCity.Documents.Pdf.RedactOptions)">
            <summary>
            Applies all <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/>s to the current document.
            </summary>
            <param name="redactOptions">Specifies the additional redact options.
            If null, the default settings are used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Redact(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Annotations.RedactAnnotation},GrapeCity.Documents.Pdf.RedactOptions)">
            <summary>
            Applies a list of specified <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/>s to the current document.
            </summary>
            <param name="redactAnnotations">The list of <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/> objects to apply.</param>
            <param name="redactOptions">Specifies the additional redact options.
            If null, the default settings are used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Redact(GrapeCity.Documents.Pdf.Annotations.RedactAnnotation,GrapeCity.Documents.Pdf.RedactOptions)">
            <summary>
            Applies a specified <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/>s to the current document.
            </summary>
            <param name="redactAnnotation">The <see cref="T:GrapeCity.Documents.Pdf.Annotations.RedactAnnotation"/> object to apply.</param>
            <param name="redactOptions">Specifies the additional redact options.
            If null, the default settings are used.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImageDelegate">
            <summary>
            Defines the method signature called for each page when <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImage(GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImageDelegate)"/>
            is called.
            </summary>
            <param name="bitmap">The <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> generated for the page.</param>
            <param name="pageIndex">The index of the page in a document for which the bitmap was generated.</param>
            <param name="index">The index in order, changes from to 0 to the count of pages - 1.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImage(GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImageDelegate)">
            <summary>
            Iterates over the document pages and generates a <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> for 
            each page in the <paramref name="pageRange"/>.
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="saveMethod">The callback method called for each page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImage(GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsImageDelegate)">
            <summary>
            Iterates other the document pages and generates a <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> for 
            each page in the <paramref name="pageRange"/>.
            </summary>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="saveMethod">The callback method called for each page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsPng(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in PNG format, one page per output file.
            <para>
            The <paramref name="filePath"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="filePath"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsPng(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in PNG format, one page per output file.
            <para>
            The <paramref name="filePath"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="filePath"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsBmp(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in BMP format, one page per output file.
            <para>
            The <paramref name="filePath"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="filePath"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsBmp(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in BMP format, one page per output file.
            <para>
            The <paramref name="filePath"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="filePath"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsJpeg(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in JPEG format, one page per output file.
            <para>
            The <paramref name="filePath"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="filePath"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsJpeg(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in JPEG format, one page per output file.
            <para>
            The <paramref name="filePath"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="filePath"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsGif(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in GIF format, one page per output file.
            <para>
            The <paramref name="filePath"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="filePath"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="filePath">The output file name.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsGif(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the document pages as images in GIF format, one page per output file.
            <para>
            The <paramref name="filePath"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="filePath"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="filePath">The output file name.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the document pages as images to a stream in TIFF format, one page per frame.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frames.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the document pages as images to a stream in TIFF format, one page per frame.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frames.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the document pages as images to a file in TIFF format, one page per frame.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frames.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the document pages as images to a file in TIFF format, one page per frame.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frames.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsSvg(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)">
            <summary>
            Saves the document pages as images in SVG format, one page per output file.
            <para>
            The <paramref name="filePath"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="filePath"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="xmlSettings">The output XML formatting settings.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsSvg(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)">
            <summary>
            Saves the document pages as images in SVG format, one page per output file.
            <para>
            The <paramref name="filePath"/> parameter is used as a .NET format string,
            with current page number (1-based) passed to it as the value to be formatted.
            Note that if <paramref name="filePath"/> does not contain a format item (such as "{0}"),
            all pages will be saved into the same file name, the last page overwriting everything else.
            </para>
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="pageRange">The range of pages that should be saved.</param>
            <param name="options">Options that allow customizing the output images.</param>
            <param name="xmlSettings">The output XML formatting settings.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.IO.Stream)">
            <summary>
            Signs and saves the current document to a stream.
            Note that <paramref name="stream"/> must support read and seek operations.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="stream">The output stream (must support read and seek operations).</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.String)">
            <summary>
            Signs and saves the current document to a file.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="fileName">The name of the PDF file to create.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Signs and saves the current document to a stream.
            Note that <paramref name="stream"/> must support read and seek operations.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="stream">The output stream (must support read and seek operations).</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.String,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Signs and saves the current document to a file.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="fileName">The name of the PDF file to create.</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.IO.Stream,System.Boolean)">
            <summary>
            Signs and saves the current document to a file.
            Note that <paramref name="stream"/> must support read and seek operations.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="stream">The output stream (must support read and seek operations).</param>
            <param name="incrementalUpdate">Indicates whether the document should be saved using incremental update.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.Sign(GrapeCity.Documents.Pdf.SignatureProperties,System.String,System.Boolean)">
            <summary>
            Signs and saves the current document to a stream.
            </summary>
            <param name="signatureProperties">Properties of the signature used to sign the document.</param>
            <param name="fileName">The name of the PDF file to create.</param>
            <param name="incrementalUpdate">Indicates whether the document should be saved using incremental update.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.TimeStamp(GrapeCity.Documents.Pdf.TimeStampProperties,System.IO.Stream)">
            <summary>
            Adds a document time stamp and saves the current document to a stream.
            </summary>
            <param name="timeStampProperties">The time stamp properties.</param>
            <param name="stream">The output stream. The stream must support read and seek operations.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.TimeStamp(GrapeCity.Documents.Pdf.TimeStampProperties,System.String)">
            <summary>
            Adds a document time stamp and saves the current document to a file.
            </summary>
            <param name="timeStampProperties">The time stamp properties.</param>
            <param name="fileName">The name of the PDF file to create.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.TimeStamp(GrapeCity.Documents.Pdf.TimeStampProperties,System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Adds a document time stamp and saves the current document to a stream.
            </summary>
            <param name="timeStampProperties">The time stamp properties.</param>
            <param name="stream">The output stream. The stream must support read and seek operations.</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.TimeStamp(GrapeCity.Documents.Pdf.TimeStampProperties,System.String,GrapeCity.Documents.Pdf.SaveMode)">
            <summary>
            Adds a document time stamp and saves the current document to a file.
            </summary>
            <param name="timeStampProperties">The time stamp properties.</param>
            <param name="fileName">The name of the PDF file to create.</param>
            <param name="saveMode">The PDF saving mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.ReplaceText(GrapeCity.Documents.Pdf.FindTextParams,System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Text.Font,System.Nullable{System.Single})">
            <summary>
            Replaces a specified text on all pages of the current document.
            <para>
            Note that the results may be affected by the current value of the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm"/> property.
            </para>
            </summary>
            <param name="findTextParams">The text to search for.</param>
            <param name="searchRange">The search scope.</param>
            <param name="newText">The replacement text.</param>
            <param name="font">The font to use on <paramref name="newText"/>, if <see langword="null"/> the current font will be used.</param>
            <param name="fontSize">The font size to use on <paramref name="newText"/>, if <see langword="null"/> the current font size will be used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.DeleteText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Pdf.TextMap.DeleteTextMode,GrapeCity.Documents.Common.OutputRange)">
            <summary>
            Deletes a specified text from all pages of the current document.
            <para>
            Note that the results may be affected by the current value of the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm"/> property.
            </para>
            </summary>
            <param name="findTextParams">The text to search for.</param>
            <param name="mode">The text delete mode.</param>
            <param name="searchRange">The search scope.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfDocument.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Common.OutputRange)">
            <summary>
            Searches for all occurrences of a text in a range of the document's pages.
            <para>
            Note that the results are affected by the value of <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm"/> property.
            </para>
            </summary>
            <param name="findTextParams">The text searching parameters.</param>
            <param name="searchRange">The search scope.</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfImageInfo">
            <summary>
            Represents an image and its locations in a PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfImageInfo.Image">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase"/> object representing the image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfImageInfo.Locations">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.PdfImageLocation"/> objects defining positions in the document where this image is present. 
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfImageLocation">
            <summary>
            Represents a position of an image in a PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfImageLocation.Page">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Page"/> that references the image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfImageLocation.PageBounds">
            <summary>
            Gets the bounds of the image on <see cref="P:GrapeCity.Documents.Pdf.PdfImageLocation.Page"/> relative to top-left corner.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ExportFormDataOptions">
            <summary>
            Represents options used by
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToFDF(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToFDF(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXFDF(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXFDF(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXML(System.String,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/> and
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.ExportFormDataToXML(System.IO.Stream,GrapeCity.Documents.Pdf.ExportFormDataOptions)"/> methods.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ExportFormDataOptions.ExportPasswordFields">
            <summary>
            Gets or sets a value indicating whether values of <see cref="T:GrapeCity.Documents.Pdf.AcroForms.TextField"/> fields with
            the property <see cref="P:GrapeCity.Documents.Pdf.AcroForms.TextField.Password"/> set to <b>true</b> should be exported.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DecryptionOptions">
            <summary>
            Represents decryption options used when loading a PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DecryptionOptions.StringPassword">
            <summary>
            Gets or sets the string specifying the password to open a PDF document.
            <para>
            Note that only one of <see cref="P:GrapeCity.Documents.Pdf.DecryptionOptions.StringPassword"/> or <see cref="P:GrapeCity.Documents.Pdf.DecryptionOptions.BytesPassword"/> can be specified,
            but not both.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DecryptionOptions.BytesPassword">
            <summary>
            Gets or sets the bytes array specifying the password to open a PDF document.
            This property is useful when password contains specific regional character
            which cannot be converted to bytes using UTF8 encoding.
            <para>
            Note that only one of <see cref="P:GrapeCity.Documents.Pdf.DecryptionOptions.StringPassword"/> or <see cref="P:GrapeCity.Documents.Pdf.DecryptionOptions.BytesPassword"/> can be specified,
            but not both.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DecryptionOptions.ThrowExceptionIfInvalidPassword">
            <summary>
            Gets or sets a value indicating whether to throw an exception
            if the specified password is invalid.
            <para>
            If <see langword="false"/>, the document will be opened even if the specified password is invalid,
            but many methods and properties will not work in this case.
            The default is <see langword="true"/>.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.DecryptionOptions.ThrowExceptionIfUnsupportedSecurityOptions">
            <summary>
            Gets or sets a value indicating whether to throw an exception
            if the definition of the security handler is in unknown or invalid format.
            <para>
            If <see langword="false"/>, the document will be opened even if the security handler cannot be parsed,
            but many methods and properties will not work in this case.
            The default is <see langword="true"/>.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OutlineMergeMode">
            <summary>
            Specifies how outlines are handled when merging two documents.
            </summary>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.MergeWithDocument(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.MergeDocumentOptions)"/>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineMergeMode.None">
            <summary>
            Outlines from the source document are ignored.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineMergeMode.All">
            <summary>
            All outlines from the source document will be copied to the destination document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineMergeMode.LinkedWithMergedObjects">
            <summary>
            Only outlines linked with merged objects will be copied to the destination document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MergeDocumentOptions">
            <summary>
            Represents the various options controlling the behavior of the 
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.MergeWithDocument(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.MergeDocumentOptions)"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.ForceDirectCopy">
            <summary>
            Gets or sets a value indicating whether do NOT parse content streams and copy all objects referenced
            from resource streams.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.Index">
            <summary>
            Gets or sets the starting position in the destination document
            at which the pages of the source document will be inserted.
            <para>-1 (the default) indicates that the pages will be added to the end of the document.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.PagesRange">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Common.OutputRange"/> object specifying the range of the pages
            in the source document that should be merged into the destination document.
            <para>Null (the default) indicates that all pages will be merged.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.CopyNamedDestinations">
            <summary>
            Gets or sets a value indicating whether to copy <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.NamedDestinations"/>.
            By default this property is false.
            <para>
            Note that if the source document contains destinations with same names
            as in the target document, then those destinations will be skipped.
            A more complex logic can be implemented programmatically.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.CopyDocumentLevelEmbeddedFiles">
            <summary>
            Gets or sets a value indicating whether to copy files embedded in the source document
            to the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.EmbeddedFiles"/> collection.
            <para>The default is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.CopyFields">
            <summary>
            Gets or sets a value indicating whether to copy Acroform fields.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.OutlineMergeMode">
            <summary>
            Gets or sets the outline merge mode.
            <para>The default is <see cref="F:GrapeCity.Documents.Pdf.OutlineMergeMode.None"/>
            (in this mode, outlines from the source document are ignored).</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.DestinationOutlines">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.OutlineNodeCollection"/>
            to which the outlines from the source document linked to the merged pages
            will be copied.
            <para>
            This can be either the target document's root <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.Outlines"/> collection,
            or one of its nested nodes' <see cref="P:GrapeCity.Documents.Pdf.OutlineNode.Children"/> collections.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.MergeStructTree">
            <summary>
            Gets or sets a value indicating whether to merge structure trees.
            <para>The default is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.DestinationStructTreeItems">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollection"/>
            to which the structure items from the source document
            will be copied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.CopyOptionalContent">
            <summary>
            Gets or sets a value indicating whether to copy <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.OptionalContent"/>.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.CopyAssociatedFiles">
            <summary>
            Gets or sets a value indicating whether to copy <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.AssociatedFiles"/>.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MergeDocumentOptions.CopyArticleThreads">
            <summary>
            Gets or sets a value indicating whether to copy <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.ArticleThreads"/>.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IContentStreamsHolder">
            <summary>
            Common interface for objects owning content streams and resource dictionary used by these content streams.
            Used in documents merge operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IContentStreamsHolder.ResourceDictionary">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> owned by this <see cref="T:GrapeCity.Documents.Pdf.IContentStreamsHolder"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IContentStreamsHolder.EnumerateContentStreams(System.Func{System.IO.Stream,System.Boolean})">
            <summary>
            Enumerates content streams owned by this <see cref="T:GrapeCity.Documents.Pdf.IContentStreamsHolder"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MergeDocumentsData">
            <summary>
            For internal use.
            Contains information used in document's merge operation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.Options">
            <summary>
            The merge options.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.SourceDoc">
            <summary>
            The source <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.Doc">
            <summary>
            The destination <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.ObjectsMap">
            <summary>
            Used to map objects in source document to their copies in destination document (<see cref="F:GrapeCity.Documents.Pdf.MergeDocumentsData.Doc"/>).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.ParseContentStreams">
            <summary>
            Indicates whether to parse content streams to determine objects which are really used.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MergeDocumentsData.CurrentResourceDictionary">
            <summary>
            The current <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> which should be used if some <see cref="T:GrapeCity.Documents.Pdf.IContentStreamsHolder"/> object
            does not have resources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.MergeDocumentsData.CheckFieldName(GrapeCity.Documents.Pdf.AcroForms.Field,GrapeCity.Documents.Pdf.AcroForms.FieldCollection)">
            <summary>
            Generates unique name for a field.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OptimizeFontsOptions">
            <summary>
            Represents options controlling the behavior of the
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.OptimizeFonts(GrapeCity.Documents.Pdf.OptimizeFontsOptions)"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OptimizeFontsOptions.MergeSubsets">
            <summary>
            Gets or sets a value indicating whether to merge subsets of the same font into a single subset.
            The default is <see langword="true"/>.
            <para>Note that currently only TrueType fonts are supported.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OptimizeFontsOptions.RemoveUnusedGlyphs">
            <summary>
            Gets or sets a value indicating whether to remove unused glyphs from fonts.
            The default is <see langword="true"/>.
            <para>Note that currently only TrueType fonts are supported.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SaveAsImageOptions">
            <summary>
            Represents options used by the SaveAs* methods on <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> and <see cref="T:GrapeCity.Documents.Pdf.Page"/>,
            such as <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsJpeg(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>, etc.
            </summary>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsBmp(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsGif(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsJpeg(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsPng(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsTiff(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.SaveAsSvg(System.String,GrapeCity.Documents.Common.OutputRange,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsSvg(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)"/>
            <seealso cref="M:GrapeCity.Documents.Pdf.Page.SaveAsSvg(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.InterpolationMode">
            <summary>
            Gets or sets the sampling mode to use when drawing images with resizing.
            Default is <see cref="F:GrapeCity.Documents.Drawing.InterpolationMode.Downscale"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.Print">
            <summary>
            Gets or sets a value indicating whether the image is generated for printing.
            The visibility of PDF elements may depend on the output target,
            they can be visible in a preview but hidden when printed, and vice versa.
            <para>
            This property is now obsolete. All methods accepting <b>SaveAsImageOptions</b>
            as a parameter also now accept a <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.
            Its properties should be used instead.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.Zoom">
            <summary>
            Gets or sets the zoom factor. The default is 1.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.BackColor">
            <summary>
            Gets or sets the background color. The default is white.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.Resolution">
            <summary>
            Gets or sets the resolution of the generated images. The default is 96.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.DrawAnnotations">
            <summary>
            Gets or sets a value indicating whether to render annotations. The default is true.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.DrawFormFields">
            <summary>
            Gets or sets a value indicating whether to render form fields. The default is true.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.UseRenderingCache">
            <summary>
            Gets or sets a value indicating whether to use rendering cache.
            <para>
            This property is true by default. Setting this property to false reduces
            memory consumption, at the cost of slower rendering speed.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.UseGlyphBitmapCache">
            <summary>
            Gets or sets a value indicating whether glyphs are cached as bitmaps rather than as glyph paths.
            <para>The default is true.</para>
            <para>This property is ignored if <see cref="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.UseRenderingCache"/> is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.EnableFontHinting">
            <summary>
            Gets or sets a value indicating whether font hinting should be enabled for TrueType fonts.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.AllowFontSbits">
            <summary>
            Gets or sets a value indicating whether bitmaps embedded in an OpenType font should be rendered.
            <para>The default is true.</para>
            <para>This property is ignored if either <see cref="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.UseRenderingCache"/> or <see cref="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.UseGlyphBitmapCache"/> is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.DrawSvgTextAsPath">
            <summary>
            Gets or sets a value indicating whether SVG text elements should be rendered as graphic paths.
            <para>The default is <see langword="true"/>.</para>
            <para>This property is ignored when rendering to formats other than SVG.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.PreciseCharPositions">
            <summary>
            Gets or sets a value indicating whether the positions are set for each individual character within the SVG text element.
            <para>Setting this property to <see langword="false"/> makes the resulting SVG file smaller but provides less precise positioning of individual characters.</para>
            <para>The default is <see langword="true"/>.</para>
            <para>This property is ignored when rendering to formats other than SVG or if <see cref="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.DrawSvgTextAsPath"/> is <see langword="true"/>.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.EmbedSvgFonts">
            <summary>
            Gets or sets a value indicating whether fonts used in the SVG text elements should be embedded.
            <para>The default is <see langword="false"/>.</para>
            <para>This property is ignored when rendering to formats other than SVG or if <see cref="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.DrawSvgTextAsPath"/> is <see langword="true"/>.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SaveAsImageOptions.IgnoreErrors">
            <summary>
            Gets or sets a value indicating whether to ignore errors in PDF content stream if possible.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SignatureAppearance">
            <summary>
            Represents properties used to generate signature appearance when a document is signed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureAppearance.DateFormat">
            <summary>
            For internal use.
            The date format used to build signature text when signing document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureAppearance.FormatProvider">
            <summary>
            For internal use.
            The <see cref="T:System.IFormatProvider"/> used to build signature text when signing document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SignatureAppearance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.SignatureAppearance"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.BackColor">
            <summary>
            Gets or sets the back color, if not specified then <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.BackColor"/> will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.Border">
            <summary>
            Gets or sets the border, if null then <see cref="P:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation.Border"/> will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.Caption">
            <summary>
            Gets or sets the signature's caption.
            This field can be empty, in this case caption is generated as:
            {SignatureProperties.SignerName} ({SignatureProperties.Location})\r\n{SignatureProperties.SigningDateTime}
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.TextFormat">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Text.TextFormat"/> object defining text format.
            <see cref="P:GrapeCity.Documents.Text.TextFormat.FontSize"/> can be 0 in this case text will be fit in available bounds.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.Image">
            <summary>
            Gets or sets the signature’s image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureAppearance.CaptionImageRelation">
            <summary>
            Gets or sets a value indicating how to position the signature's caption relative to image.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TimeStamp">
            <summary>
            Encapsulates the information that is used to include timestamps
            from a Time Stamping Authority into digital signatures in PDF documents.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TimeStamp.c_DefHashAlgorithm">
            <summary>
            The default HASH algorithm used if <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashAlgorithm"/> and <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashMethod"/>
            are empty.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TimeStamp.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> class.
            </summary>
            <param name="serverUrl">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.ServerUrl"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TimeStamp.#ctor(System.String,System.String,System.String,GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> class.
            </summary>
            <param name="serverUrl">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.ServerUrl"/>.</param>
            <param name="userName">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.UserName"/>.</param>
            <param name="password">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.Password"/>.</param>
            <param name="hashAlgorithm">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashAlgorithm"/>, can be null, in this case SHA-256 will be used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TimeStamp.#ctor(System.String,System.String,System.String,GrapeCity.Documents.Pdf.TimeStamp.HashDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> class.
            </summary>
            <param name="serverUrl">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.ServerUrl"/>.</param>
            <param name="userName">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.UserName"/>.</param>
            <param name="password">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.Password"/>.</param>
            <param name="hashMethod">The value of <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashMethod"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStamp.HashAlgorithm">
            <summary>
            Gets or sets the ID of the hash algorithm used to encode the time-stamp request.
            If set to <see langword="null"/>, defaults to <b>SHA-256</b>.
            This property is used only if <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashMethod"/> is <see langword="null"/>.
            Note that the type of algorithm depends on the time-stamp server.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStamp.HashMethod">
            <summary>
            Gets or sets the delegate used to hash the time-stamp request.
            If this value is <see langword="null"/>, the <see cref="P:GrapeCity.Documents.Pdf.TimeStamp.HashAlgorithm"/> will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStamp.ServerUrl">
            <summary>
            Gets or sets the uniform resource identifier for the Time Stamping Authority (TSA) server providing the time-stamp.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStamp.UserName">
            <summary>
            Gets or sets the user ID to send to the Time Stamping Authority (TSA) server.  
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStamp.Password">
            <summary>
            Gets or sets the user password to send to the Time Stamping Authority (TSA) server.  
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TimeStamp.HashDelegate">
            <summary>
            Represents a delegate used to calculate the hash over data.
            The data can be represented by an array of bytes or by a <see cref="T:System.IO.Stream"/>.
            <para>
            Outputs the hash value and the hash algorithm OID.
            </para>
            </summary>
            <param name="dataToHash">The byte array containing the data. If <see langword="null"/>, <paramref name="streamToHash"/> will be used.</param>
            <param name="streamToHash">The stream containing the data. If <see langword="null"/>, <paramref name="dataToHash"/> will be used.</param>
            <param name="hash">OUT: The data hash value.</param>
            <param name="hashAlgorithmOid">OUT: The hash algorithm OID.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ISignatureParser">
            <summary>
            Defines properties and methods that allow parsing and validating
            an existing PDF binary signature that is stored in the <b>/Contents</b> property
            of the PDF signature dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.SigningCertificate">
            <summary>
            Gets the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/> object
            that represents the certificate used to create the signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.SigningCertificateChain">
            <summary>
            Gets the chain of certificates used to create the signature.
            The first certificate in the list is the signing certificate.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.SigningTime">
            <summary>
            Gets the signing time that is stored in the signature,
            or <see langword="null"/> if the binary signature does not contain a signing time.
            </summary>
            <seealso cref="P:GrapeCity.Documents.Pdf.Security.Signature.SigningTime"/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.HashAlgorithm">
            <summary>
            Gets the name of the HASH algorithm used in the signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.EncryptionAlgorithm">
            <summary>
            Gets the name of the encryption algorithm used in the signature.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ISignatureParser.VerifySignatureValue">
            <summary>
            Verifies the signature by checking that embedded data digest corresponds to the calculated one.
            </summary>
            <returns><see langword="true"/> if the signature is correct and corresponds to the signed data,
            <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ISignatureParser.GetSignatureData">
            <summary>
            Returns the signature data.
            </summary>
            <returns>The signature data.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ISignatureParser.IsTcp">
            <summary>
            Gets a value indicating whether the signature is a PAdES LTV time-stamp.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator">
            <summary>
            Defines properties and methods that are used
            to sign the attribute set in a PKCS#7 signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator.HashAlgorithm">
            <summary>
            Gets the ID of the hash algorithm used by this <see cref="T:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator.DigestEncryptionAlgorithm">
            <summary>
            Gets the ID of the encryption algorithm used by this <see cref="T:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator.SignData(System.Byte[])">
            <summary>
            Signs the given message.
            </summary>
            <param name="digest">The message to sign.</param>
            <returns>The signature binary data.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ISignatureBuilder">
            <summary>
            Defines methods used to build the signature PDF dictionary and the binary signature container
            that is stored as <b>Contents</b> entry in the signature PDF dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Prepare(GrapeCity.Documents.Pdf.GcPdfDocument,System.String@,System.String@,System.Int32@,System.Object@)">
            <summary>
            Prepares the signature builder.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object to sign.</param>
            <param name="filter">OUT: The name of the preferred signature handler to use when validating this signature.</param>
            <param name="subFilter">OUT: The name that describes the encoding of the signature value and key information in the signature dictionary.</param>
            <param name="approximateSize">OUT: The approximate size of the signature.</param>
            <param name="customData">OUT: The custom data that is passed to the <see cref="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Build(GrapeCity.Documents.Pdf.GcPdfDocument,System.IO.Stream,System.Object)"/> method.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Build(GrapeCity.Documents.Pdf.GcPdfDocument,System.IO.Stream,System.Object)">
            <summary>
            Builds the binary signature for a specified content.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object to sign.</param>
            <param name="content">The stream representing the signed content.</param>
            <param name="customData">The custom data returned by the <see cref="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Prepare(GrapeCity.Documents.Pdf.GcPdfDocument,System.String@,System.String@,System.Int32@,System.Object@)"/> method.</param>
            <returns>The binary signature container.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ITimeStampGenerator">
            <summary>
            Defines methods used to generate time-stamp tokens.
            This interface is implemented by the <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> class.
            It can also be implemented in user code to provide customized time-stamp token generation,
            see <see cref="P:GrapeCity.Documents.Pdf.TimeStampProperties.TimeStamp"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ITimeStampGenerator.GetTimeStampToken(System.Byte[])">
            <summary>
            Generates the time-stamp token for data specified as a byte array.
            </summary>
            <param name="data">The byte array containing the data.</param>
            <returns>The time-stamp token.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ITimeStampGenerator.GetTimeStampToken(System.IO.Stream)">
            <summary>
            Generates the time-stamp token for data specified as a stream.
            </summary>
            <param name="stream">The stream containing the data.</param>
            <returns>The time-stamp token.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SignatureFormat">
            <summary>
            Defines signature formats supported by <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureFormat.PKCS7Detached">
            <summary>
            No data is encapsulated in the PKCS#7 signed-data field.
            SubFilter value of PDF signature is "adbe.pkcs7.detached".
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureFormat.PKCS7SHA1">
            <summary>
            The SHA1 digest of the byte range is encapsulated in the PKCS#7 signed-data field with ContentInfo of type Data.
            SubFilter value of PDF signature is "adbe.pkcs7.sha1".
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm">
            <summary>
            Defines digest algorithms used to generate signatures.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm.SHA1">
            <summary>
            The SHA1 algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm.SHA256">
            <summary>
            The SHA256 algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm.SHA384">
            <summary>
            The SHA384 algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm.SHA512">
            <summary>
            The SHA512 algorithm.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SignatureProperties">
            <summary>
            Represents properties used to sign a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SignatureProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureDigestAlgorithm">
            <summary>
            Gets or sets the signature digest algorithm.
            <para>
            <b>NOTE:</b> This property is obsolete and should not be used.
            Instead, use <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureBuilder"/>
            and <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class to create a PKCS#7 signature and setup its properties.
            </para>
            <para>
            If <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureFormat"/> is <see cref="F:GrapeCity.Documents.Pdf.SignatureFormat.PKCS7SHA1"/>,
            then this property is ignored and <see cref="F:GrapeCity.Documents.Pdf.SignatureDigestAlgorithm.SHA1"/> is used.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureFormat">
            <summary>
            Gets or sets the format of the signature.
            <para>
            <b>NOTE:</b> This property is obsolete and should not be used.
            Instead, use <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureBuilder"/>
            and <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class to create a PKCS#7 signature and setup its properties.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.Certificate">
            <summary>
            Gets or sets a certificate used to generate a digital signature.
            <para>
            <b>NOTE:</b> This property is obsolete and should not be used.
            Instead, use <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureBuilder"/>
            and <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class to create a PKCS#7 signature and setup its properties.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureBuilder">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.ISignatureBuilder"/> object used to build the signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.TimeStamp">
            <summary>
            Gets or sets the object implementing the <see cref="T:GrapeCity.Documents.Pdf.ITimeStampGenerator"/> interface
            that is used to generate the time-stamp token included in the digital signature of the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureField">
            <summary>
            Gets or sets an AcroForm field used to store a digital signature.
            <para>
            If <see cref="P:GrapeCity.Documents.Pdf.AcroForms.SignatureField.Widget"/> is not <see langword="null"/>, 
            a visual appearance will be generated based on values of the properties
            <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.SigningDateTime"/>, <see cref="P:GrapeCity.Documents.Pdf.SignatureProperties.Location"/> etc.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignerName">
            <summary>
            Gets or sets the name of the person or authority signing the document.
            <para>
            NOTE: This value is used only if it is not possible to extract the name from the signature,
            for example from the certificate of the signer.
            </para>
            <para>
            By default this property is initialized with <see cref="P:System.Environment.UserName"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SigningDateTime">
            <summary>
            Gets or sets the time of signing.
            <para>
            NOTE: This value is used only if the time of signing is not available in the signature.
            For example, a time stamp can be embedded in a PKCS#7 binary data object.
            </para>
            <para>
            By default this property is initialized with the current date and time.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.Location">
            <summary>
            Gets or sets the CPU host name or physical location of the signing.
            <para>
            By default this property is initialized with <see cref="P:System.Environment.MachineName"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.Reason">
            <summary>
            Gets or sets the reason for the signing, such as "I agree...".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.ContactInfo">
            <summary>
            Gets or sets the information provided by the signer to enable a recipient to contact the signer
            to verify the signature (for example, a phone number).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.DocumentAccessPermissions">
            <summary>
            Gets or sets a document's access permissions granted by this signature.
            This property can be specified only for one and first signature in the document,
            this signature will be "certification signature".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SignatureProperties.SignatureAppearance">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.SignatureAppearance"/> object defining the visual appearance
            of the generated signature.
            <para>
            By default this property is initialized with a default instance of the <see cref="T:GrapeCity.Documents.Pdf.SignatureAppearance"/> class.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SignatureProperties.CreatePAdES_B_B(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> object and initializes it
            so that it will create a PAdES B-B signature.
            </summary>
            <param name="certificateChain">The certificate chain. The first certificate is used for signing.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SignatureProperties.CreatePAdES_B_T(GrapeCity.Documents.Pdf.TimeStamp,System.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> object and initializes it
            so that it will create a PAdES B-T signature.
            </summary>
            <param name="timeStamp">The <see cref="T:GrapeCity.Documents.Pdf.TimeStamp"/> object.</param>
            <param name="certificateChain">The certificate chain. The first certificate is used for signing.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.SignatureProperties"/> object.s</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TimeStampProperties">
            <summary>
            Represents properties used to time stamp a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TimeStampProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TimeStampProperties"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TimeStampProperties.#ctor(GrapeCity.Documents.Pdf.TimeStamp)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TimeStampProperties"/> class.
            </summary>
            <param name="timeStamp">The value to assign to the <see cref="P:GrapeCity.Documents.Pdf.TimeStampProperties.TimeStamp"/> property.
            This cannot be <see langword="null"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStampProperties.TimeStamp">
            <summary>
            Gets or sets the object implementing the <see cref="T:GrapeCity.Documents.Pdf.ITimeStampGenerator"/> interface
            that is used to generate the time-stamp token included in the document timestamp signature.
            <para>This value cannot be set to <see langword="null"/>.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStampProperties.SignatureField">
            <summary>
            Gets or sets the AcroForm field used to store the digital signature.
            <para>
            If this value is set to <see langword="null"/>,
            the field with a unique name will be created automatically.
            That field will have no associated <see cref="T:GrapeCity.Documents.Pdf.Annotations.WidgetAnnotation"/>,
            so the signature will be invisible.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TimeStampProperties.SignatureAppearance">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.SignatureAppearance"/> object defining
            the visual appearance of the generated signature.
            <para>
            By default this property is initialized with a default instance
            of the <see cref="T:GrapeCity.Documents.Pdf.SignatureAppearance"/> class.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FoundPosition">
            <summary>
            Defines a position in the page of the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> where a text was found.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.FoundPosition._textMapFragment">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> defining the position of found text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FoundPosition.AreSame(GrapeCity.Documents.Pdf.FoundPosition,GrapeCity.Documents.Pdf.FoundPosition)">
            <summary>
            Compares two <see cref="T:GrapeCity.Documents.Pdf.FoundPosition"/> objects.
            </summary>
            <param name="fp1"></param>
            <param name="fp2"></param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FoundPosition.PageIndex">
            <summary>
            Gets the page index.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FoundPosition.NearText">
            <summary>
            Gets the text near the found position.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FoundPosition.PositionInNearText">
            <summary>
            Gets the zero-based position of the found string in <see cref="P:GrapeCity.Documents.Pdf.FoundPosition.NearText"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FoundPosition.TextMapFragment">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> defining the position of found text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FoundPosition.Bounds">
            <summary>
            Gets the array of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> defining the area of found text on the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.FindTextParams">
            <summary>
            Represents find text parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FindTextParams.#ctor(System.String,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FindTextParams"/> class.
            </summary>
            <param name="text">The text to find.</param>
            <param name="wholeWord">Indicates whether to match whole words only.</param>
            <param name="matchCase">Indicates whether to match case.</param>
            <param name="viewState">The <see cref="P:GrapeCity.Documents.Pdf.FindTextParams.ViewState"/> object.</param>
            <param name="dpiX">The horizontal resolution used to calculate bounds of the found text on the page.</param>
            <param name="dpiY">The vertical resolution used to calculate bounds of the found text on the page.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream if possible.</param>
            <param name="regex">Indicates whether to interpret <paramref name="text"/> as a regular expression.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FindTextParams.#ctor(System.String,System.Boolean,System.Boolean,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.FindTextParams"/> class.
            </summary>
            <param name="text">The text to find.</param>
            <param name="wholeWord">Indicates whether to match whole words only.</param>
            <param name="matchCase">Indicates whether to match case.</param>
            <param name="dpiX">The horizontal resolution used to calculate bounds of the found text on the page.</param>
            <param name="dpiY">The vertical resolution used to calculate bounds of the found text on the page.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream if possible.</param>
            <param name="regex">Indicates whether to interpret <paramref name="text"/> as a regular expression.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.ViewState">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.Regex">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.FindTextParams.Text"/> should be interpreted as
            a regular expression.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.IgnoreErrors">
            <summary>
            Gets a value indicating whether to ignore errors in PDF content stream if possible.
            <para>The default is true.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.Text">
            <summary>
            Gets the text to find.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.WholeWord">
            <summary>
            Gets a value indicating whether to match whole words only.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.MatchCase">
            <summary>
            Gets a value indicating whether to match case.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.DpiX">
            <summary>
            Gets the horizontal resolution used to calculate bounds of the found text on the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.FindTextParams.DpiY">
            <summary>
            Gets the vertical resolution used to calculate bounds of the found text on the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.FindTextParams.CreatRegex(System.String,System.Boolean,System.Single,System.Single,System.Boolean)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.FindTextParams"/> object with the <see cref="P:GrapeCity.Documents.Pdf.FindTextParams.Regex"/> property set to true.
            </summary>
            <param name="pattern">The Regex pattern to search.</param>
            <param name="matchCase">Indicates whether to match case.</param>
            <param name="dpiX">The horizontal resolution used to calculate bounds of the found text on the page.</param>
            <param name="dpiY">The vertical resolution used to calculate bounds of the found text on the page.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream if possible.</param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ITextLayoutHandler">
            <summary>
            Provides a mechanism for receiving callback notifications when a 
            <see cref="T:GrapeCity.Documents.Text.TextLayout"/> is rendered on a <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ITextLayoutHandler.TextTagBegin(GrapeCity.Documents.Pdf.GcPdfGraphics,GrapeCity.Documents.Text.TextLayout,System.Object)">
            <summary>
            Called when a text block associated with the specified tag is started.
            </summary>
            <param name="graphics">The target graphics.</param>
            <param name="textLayout">The text layout.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ITextLayoutHandler.TextTagEnd(GrapeCity.Documents.Pdf.GcPdfGraphics,GrapeCity.Documents.Text.TextLayout,System.Object)">
            <summary>
            Called when a text block is finished.
            </summary>
            <param name="graphics">The target graphics.</param>
            <param name="textLayout">The text layout.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ITextLayoutHandler.AddTextArea(System.Drawing.RectangleF)">
            <summary>
            Adds a rectangular area associated with a text.
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfGraphics">
            <summary>
            Represents a graphics object that can be used to draw on a PDF page.
            <para>
            The origin (0,0) is in the top left corner of the page, the axis go right and down.
            </para>
            <para>
            All coordinates and sizes are expressed in printer points (1/72 of an inch) by default.
            This can be changed using the <see cref="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Resolution"/> property.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.c_MaxPdfStringByteLength">
            <summary>
            Looks like Adobe Acrobat does NOT support strings
            larger than 16382 see DOCXLS-5255
            This constant specifies maximum length of the PDF string
            generated by DrawTextLayout method
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._softMaskTransform">
            <summary>
            The value of <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._transform"/> when last not empty soft mask was applied,
            used when state is restored in <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CheckState(System.Boolean,System.Boolean)"/> method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._resourceDictionary">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> to use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._writer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> used to generate content.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._activeMatrix">
            <summary>
            Current transformation matrix which is based on the base of _dpiX, _dpiY, _canvasSize, _transform
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._metricsMatrix">
            <summary>
            Matrix build on the base of <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._resolution"/>, <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._canvasBounds"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._clipStack">
            <summary>
            Stack of applied clip regions.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._topLayer">
            <summary>
            Linked list of the pushed layers.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._needRestoreGraphicsState">
            <summary>
            Indicates whether "Q" operator should be written.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._transformOrClipStackChanged">
            <summary>
            Indicates whether <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._metricsMatrix"/>, <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._transform"/> or <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._clipStack"/>
            were changed and should be written.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._disposed">
            <summary>
            Called when <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> disposed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._getWriterDelegate">
            <summary>
            The method returns underlying <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics._initialGraphicsState">
            <summary>
            The graphics state of <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._writer"/> at the moment when it was returned using <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._getWriterDelegate"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.#ctor(GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics,GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.EventHandler,System.Func{GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> class.
            </summary>
            <param name="initialMetrics"></param>
            <param name="doc"></param>
            <param name="resourceDictionary"></param>
            <param name="disposed">Called when <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> disposed.</param>
            <param name="getWriterDelegate">The method returns <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> object to write data.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CheckWriter">
            <summary>
            Checks whether <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics._writer"/> is not null.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CheckState(System.Boolean,System.Boolean)">
            <summary>
            Called before any write operation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.HorzSetPos(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter,System.Single,System.Single,GrapeCity.Documents.Text.GlyphRun)">
            <summary>
            Used for horizontal text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.VertSetPos(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter,System.Single,System.Single,GrapeCity.Documents.Text.GlyphRun)">
            <summary>
            Used for vertical text when glyph are vertically oriented, for japan or chinese.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.VertSetPosRotated(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter,System.Single,System.Single,GrapeCity.Documents.Text.GlyphRun)">
            <summary>
            Used for vertical text when glyphs rotated by 90 degrees.
            </summary>
            <param name="w"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="run"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawGlyphs(GrapeCity.Documents.Text.Font,System.UInt16[],System.Single[],System.String[],System.Int32,System.Drawing.Color,System.Numerics.Matrix3x2)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawVertGlyphs(GrapeCity.Documents.Text.Font,System.UInt16[],System.Single[],System.Single[],System.Single[],System.String[],System.Int32,System.Drawing.Color,System.Numerics.Matrix3x2)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.Flush">
            <summary>
            Flushes all unwritten content to underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.SetMetrics(GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics)">
            <summary>
            Sets metrics of this <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> object.
            </summary>
            <param name="metrics">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics"/> structure defining the metrics.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawSignature(System.Drawing.RectangleF,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.SignatureProperties)">
            <summary>
            Draws signature.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawTimeStamp(System.Drawing.RectangleF,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.TimeStampProperties)">
            <summary>
            Draws time-stamp.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawWatermark(System.Drawing.RectangleF,System.String,GrapeCity.Documents.Drawing.IImage,GrapeCity.Documents.Text.TextFormat)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.WatermarkAnnotation"/> content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Writer">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.ResourceDictionary">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> used by this graphics.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.GetBlendMode">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.SetBlendMode(GrapeCity.Documents.Drawing.BlendMode)">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalCreateClipRegion(GrapeCity.Documents.Drawing.IPath)">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalCreateClipRegion(System.Drawing.RectangleF)">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalCreatePath">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawTextLayout(GrapeCity.Documents.Text.TextLayout,System.Drawing.PointF)">
            <inheritdoc />
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawLine(System.Drawing.PointF,System.Drawing.PointF,GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawLines(System.Drawing.PointF[],GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawPolygon(System.Drawing.PointF[],GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawRectangle(System.Drawing.RectangleF,GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawEllipse(System.Drawing.RectangleF,GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawRoundRect(System.Drawing.RectangleF,System.Single,System.Single,GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawPath(GrapeCity.Documents.Drawing.IPath,GrapeCity.Documents.Drawing.Pen)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillEllipse(System.Drawing.RectangleF,GrapeCity.Documents.Drawing.Brush,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Numerics.Matrix3x2})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillEllipse(System.Drawing.RectangleF,System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillRoundRect(System.Drawing.RectangleF,System.Single,System.Single,GrapeCity.Documents.Drawing.Brush,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Numerics.Matrix3x2})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillRoundRect(System.Drawing.RectangleF,System.Single,System.Single,System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillRectangle(System.Drawing.RectangleF,GrapeCity.Documents.Drawing.Brush,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Numerics.Matrix3x2})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillRectangle(System.Drawing.RectangleF,System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillPolygon(System.Drawing.PointF[],GrapeCity.Documents.Drawing.Brush,GrapeCity.Documents.Drawing.FillMode,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Numerics.Matrix3x2})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillPolygon(System.Drawing.PointF[],System.Drawing.Color,GrapeCity.Documents.Drawing.FillMode)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillPath(GrapeCity.Documents.Drawing.IPath,GrapeCity.Documents.Drawing.Brush,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Numerics.Matrix3x2})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalFillPath(GrapeCity.Documents.Drawing.IPath,System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalDrawImage(System.Drawing.RectangleF,GrapeCity.Documents.Drawing.IImage,System.Single)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalSetClip(GrapeCity.Documents.Drawing.IClipRegion)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.InternalRemoveClip(GrapeCity.Documents.Drawing.IClipRegion)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.IsBlendModeSupported(GrapeCity.Documents.Drawing.BlendMode)">
            <summary>
            Indicates whether this graphics implementation supports a specified blend mode.
            <para>
            The following blend modes are supported by <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>:
            </para>
            <list type="bullet">
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Normal"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.ColorBurn"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.ColorDodge"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Darken"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Difference"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Exclusion"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.HardLight"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Lighten"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Multiply"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Overlay"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.Screen"/></item>
            <item><see cref="F:GrapeCity.Documents.Drawing.BlendMode.SoftLight"/></item>
            </list>
            </summary>
            <param name="blendMode">The blend mode to check.</param>
            <returns><see langword="true"/> if the specified blend mode is supported by the current graphics,
            <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.IsInterpolationModeSupported(GrapeCity.Documents.Drawing.InterpolationMode)">
            <summary>
            Indicates whether this graphics implementation supports a specified interpolation mode.
            <para>
            <see cref="F:GrapeCity.Documents.Drawing.InterpolationMode.NearestNeighbor"/> is the only interpolation mode supported by <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </para>
            </summary>
            <param name="interpolationMode">The interpolation mode to check.</param>
            <returns><see langword="true"/> if the specified interpolation mode is supported by the current graphics,
            <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CreateTransparencyGroup(System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.Composite(GrapeCity.Documents.Drawing.IGcTransparencyGroup,System.Drawing.Rectangle,System.Drawing.Point,System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.SetTransparencyMask(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CreateTransparencyMask(GrapeCity.Documents.Drawing.IGcTransparencyGroup,GrapeCity.Documents.Drawing.TransparencyMaskType,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.PushTransparencyLayer(System.Nullable{System.Drawing.RectangleF},System.Single)">
            <summary>
            Adds a transparency layer to the <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> so that it receives all subsequent drawing
            operations until <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.PopTransparencyLayer"/> is called.
            </summary>
            <param name="contentBounds">
            The content bounds of the transparency layer. Content won't render outside these bounds.
            When set to <see langword="null"/>, the content bounds are effectively taken to be the bounds
            of the current <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </param>
            <param name="opacity">
            An opacity value that is applied uniformly to all drawings in the layer when compositing to the backplate.
            </param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.PopTransparencyLayer">
            <summary>
            Stops redirecting drawing operations to the transparency layer that was created by the last
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.PushTransparencyLayer(System.Nullable{System.Drawing.RectangleF},System.Single)"/> call.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginMarkedContent(System.String)">
            <summary>
            Begins Marked Content. Writes (BMC or BDC) operator to content stream,
            each call of <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginMarkedContent(System.String)"/> should be enclosed with
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndMarkedContent"/>.
            </summary>
            <param name="markedContentTag">The tag indicating the role or significance of the marked-content element to the processing application.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginMarkedContent(GrapeCity.Documents.Pdf.MarkedContent.TagBase)">
            <summary>
            Begins Marked Content. Writes (BMC or BDC) operator to content stream,
            each call of <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginMarkedContent(System.String)"/> should be enclosed with
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndMarkedContent"/>.
            </summary>
            <param name="tag">The <see cref="T:GrapeCity.Documents.Pdf.MarkedContent.TagBase"/> object indicating the role or significance of the marked-content element to the processing application.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndMarkedContent">
            <summary>
            Ends Marked Content. Writes EMC operator to content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawForm(GrapeCity.Documents.Pdf.Graphics.FormXObject,System.Drawing.RectangleF,System.Nullable{System.Drawing.RectangleF},GrapeCity.Documents.Drawing.ImageAlign,System.Drawing.RectangleF[]@)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> using specified bounds and image alignment.
            <para>The output parameter <paramref name="imageBounds"/> receives
            the actual bounds of the drawn object(s).</para>
            </summary>
            <param name="fxo">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> to draw.</param>
            <param name="destBounds">The destination rectangle.</param>
            <param name="clipBounds">The clipping rectangle, or null for no clipping.</param>
            <param name="align">The image alignment.</param>
            <param name="imageBounds">OUT: The actual bounds of the drawn image(s) (can be more than one if the image is tiled).</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.DrawForm(GrapeCity.Documents.Pdf.Graphics.FormXObject,System.Drawing.RectangleF,System.Nullable{System.Drawing.RectangleF},GrapeCity.Documents.Drawing.ImageAlign)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> using specified bounds and image alignment.
            </summary>
            <param name="fxo">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> to draw.</param>
            <param name="destBounds">The destination rectangle.</param>
            <param name="clipBounds">The clipping rectangle, or null for no clipping.</param>
            <param name="align">The image alignment.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(System.String)">
            <summary>
            Begins rendering to a layer specified by <paramref name="layerName"/>.
            That name should match the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.Name"/> of an existing
            <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> in the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Groups"/>
            collection of the current document's <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.OptionalContent"/>.
            <para>The <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndLayer"/> method must be called to end rendering to the specified layer.</para>
            </summary>
            <param name="layerName">The name of the target layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Begins rendering to the specified <paramref name="layer"/>.
            That layer should already exist in the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Groups"/>
            collection of the current document's <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.OptionalContent"/>.
            <para>The <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndLayer"/> method must be called to end rendering to the specified layer.</para>
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> that defines the target layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(GrapeCity.Documents.Pdf.Layers.OptionalContentMembership)">
            <summary>
            Begins rendering to the specified <paramref name="layer"/>.
            <para>The <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndLayer"/> method must be called to end rendering to the specified layer.</para>
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/> that defines the target layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcPdfGraphics.EndLayer">
            <summary>
            Ends rendering to the layer specified by a previous call
            to <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(System.String)"/>, <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)"/>
            or <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.BeginLayer(GrapeCity.Documents.Pdf.Layers.OptionalContentMembership)"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Features">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this graphics.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.ImageCanBeDisposedAfterDrawing">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.TextLayoutHandler">
            <summary>
            Gets or sets an <see cref="T:GrapeCity.Documents.Pdf.ITextLayoutHandler"/> object which will receive
            notifications from the <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> when <see cref="T:GrapeCity.Documents.Text.TextLayout"/> is rendered.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Resolution">
            <summary>
            Gets the resolution of the current graphics.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.CanvasSize">
            <summary>
            Gets the size of the drawing area.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.Transform">
            <summary>
            Gets or sets the current transformation matrix. The default is Identity matrix.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.SoftMask">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase"/> object defining current Soft Mask.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.GcPdfGraphics.TextRenderingMode">
            <summary>
            For internal use.
            Sets the current PDF text rendering mode, see PDF specification for more details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.RunFlags.Vertical">
            <summary>
            Run is vertical.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.RunFlags.VerticalGlyphs">
            <summary>
            Glyphs in run are vertically oriented, chinese, japanese.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.RunFlags.HasCustomAdvances">
            <summary>
            Run has glyphs with custom advances.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.RunFlags.HasPlacements">
            <summary>
            Run has glyphs with not zero XPlacement or YPlacement.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics">
            <summary>
            Defines metrics of <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics.Dpi">
            <summary>
            The graphics resolution.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics.CanvasBounds">
            <summary>
            The bounds of canvas in pixels, resolution specified by the <see cref="F:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics.Dpi"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.GcPdfGraphics.Metrics.Rotate">
            <summary>
            The rotation can be 0, 90, 180 and 270, see <see cref="P:GrapeCity.Documents.Pdf.Page.Rotate"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray">
            <summary>
            The CalGray color space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.Gray">
            <summary>
            The gray color value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace"/> of the color.</param>
            <param name="gray">The color gray value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalGray.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB">
            <summary>
            The CalRGB color space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color">
            <summary>
            Defines the color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.R">
            <summary>
            The red value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.G">
            <summary>
            The green value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.B">
            <summary>
            The blue value of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB"/> of the color.</param>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CalRGB.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace">
            <summary>
            The base abstract class for CIE based colorspaces: CalGray, CalRGB, Lab, ICCBased
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace.ColorBase">
            <summary>
            Base class for colors in color spaces derived from <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace.ColorBase.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace.ColorBase"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace"/> of the color.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.CIEColorSpace.ColorBase.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace">
            <summary>
            Abstract base class for PDF color spaces.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.GetDefaultColor">
            <summary>
            Used during parsing PDF Content Stream, returns default color for this color space,
            for example, <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB"/> returns <see cref="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.Black"/>.
            See PDF 1.7 specification page 287 for details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ReadColor(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Spec.IPdfObject},System.Int32,GrapeCity.Documents.Pdf.Parser.IResourceProvider)">
            <summary>
            Used during parsing a PDF Content Stream, builds a <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/>
            using arguments from the <paramref name="stack"/>.
            NOTE! Returns null if the <paramref name="stack"/> contains invalid / unsupported arguments.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.GetDecoder">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorDecoder"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorComponentCount">
            <summary>
            Gets the count of color components per pixel. 
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.OperandCount">
            <summary>
            Gets the count of operand defining the color value in content stream,
            -1 indicates error situation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.IsColorUseTillingPattern(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern})">
            <summary>
            Returns true if specified color is a pattern color and uses tilling pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorDecoder.TryDecodeColor(System.Single[],System.UInt32@)">
            <summary>
            Decodes the color specified by the <paramref name="colorComponents"/>.
            Note! Some color spaces do not support this operation, for example,
            <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorDecoder.GetDefaultDecode(System.Int32)">
            <summary>
            Called from image decoders, returns default Decode entry for color space, 
            see PDF specification for details, PDF1.7 page 344.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase">
            <summary>
            Base class for colors associated with some <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/>.
            Note! All derived classes override Equals(...) method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.Write(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.Boolean)">
            <summary>
            Writes an operator defining the color value to the PDF content stream.
            </summary>
            <param name="w">The destination content stream.</param>
            <param name="rd">The current resource dictionary.</param>
            <param name="stroke">Indicates whether color used for stroke operations or not.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.WriteValue(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter)">
            <summary>
            Writes only color value to the PDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Determines whether the provided <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> is the same
            as the current <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/>.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> object.</param>
            <returns>true if the provided <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> is the same as the current <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/>; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> instances are considered same,
            i.e. they have same type and same value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.IsSame(System.Drawing.Color)">
            <summary>
            Compares this <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> and <see cref="T:System.Drawing.Color"/> value,
            returns true if the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> object specifies same RGB color as
            <paramref name="c"/>.
            Note! Alpha channel of <paramref name="c"/> is ignored.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,System.Drawing.Color)">
            <summary>
            Compares the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> object and <see cref="T:System.Drawing.Color"/>,
            returns true if the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> object specifies same RGB color as
            <paramref name="c2"/>.
            Note! Alpha channel of <paramref name="c2"/> not analyzed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <summary>
            Tries to convert this <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase"/> to ARGB value.
            Note! Not all color spaces supports this operation, in this case method returns false.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase.ColorSpace">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/> of this color.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK">
            <summary>
            The DeviceCMYK color space.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.PdfNameBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.PdfObjectBased">
            <summary>
            The DeviceCMYK color space defined by an arbitary <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.PdfObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.Black">
            <summary>
            Gets the black color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.C">
            <summary>
            The C value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.M">
            <summary>
            The M value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.Y">
            <summary>
            The Y value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.K">
            <summary>
            The K value of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color"/> class.
            </summary>
            <param name="c">The C value of the color.</param>
            <param name="m">The M value of the color.</param>
            <param name="y">The Y value of the color.</param>
            <param name="k">The K value of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.ToRGB">
            <summary>
            Converts this <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color"/> color to <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray">
            <summary>
            The DeviceGray color space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.PdfNameBased">
            <summary>
            The DeviceGray color space defined by the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.PdfNameBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.PdfObjectBased">
            <summary>
            The DeviceGray color space defined by an arbitary <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.PdfObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color">
            <summary>
            Represents the color of <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.Black">
            <summary>
            Gets the black color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.Gray">
            <summary>
            The gray value of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.IsSame(System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceGray.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceN">
            <summary>
            The DeviceN color spaces.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB">
            <summary>
            The DeviceRGB color space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.PdfNameBased">
            <summary>
            The DeviceRGB color space defined by the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> object as <b>/DeviceRGB</b>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.PdfNameBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.PdfObjectBased">
            <summary>
            The DeviceRGB color space defined by an arbitary <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.PdfObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.Black">
            <summary>
            Gets the black color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.R">
            <summary>
            The red value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.G">
            <summary>
            The green value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.B">
            <summary>
            The blue value of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color"/> class.
            </summary>
            <param name="r">The red value of the color.</param>
            <param name="g">The green value of the color.</param>
            <param name="b">The blue value of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color"/> class.
            </summary>
            <param name="color">The color value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.ToCMYK">
            <summary>
            Converts this <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color"/> color to <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceCMYK.Color"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.IsSame(System.Drawing.Color)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.DeviceRGB.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased">
            <summary>
            The ICC based color space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.Components">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased"/> color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased,System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased"/> color space of the color.</param>
            <param name="components">The values of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCBased.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile">
            <summary>
            Represents a PDF ICC profile stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.GetMetadata">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing the metadata for the color space.
            <para>Notes:</para>
            <list type="number">
            <item>The stream returned by this method should be disposed after use.</item>
            <item>This method can return <see langword="null"/> if the metadata is empty.</item>
            </list>
            </summary>
            <returns>A stream with the metadata.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.SetMetadata(System.Byte[])">
            <summary>
            Sets the metadata for the color space.
            Note! The method does NOT update <see cref="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.N"/>, it is user responsibility to set it to appropriate value.
            </summary>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.N">
            <summary>
            Gets or sets the number of color components in the color space described by the
            ICC profile data.
            <para>
            This number shall match the number of components actually in the ICC profile.
            Valid values are 1, 3, or 4.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.Alternate">
            <summary>
            Gets or sets an alternate color space that shall be used in case the one specified
            in the stream data is not supported.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.Range">
            <summary>
            Gets or sets an array of 2 x <see cref="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.N"/> numbers [min0 max0, min1 max1, ...] that shall
            specify the minimum and maximum valid values of the corresponding color components.
            These values shall match the information in the ICC profile.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.Create(System.IO.Stream)">
            <summary>
            Creates an <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> object for the specified ICC profile metadata.
            <para>
            This method returns <see langword="null"/> if <paramref name="metadata"/> has invalid data or is in unknown format.
            </para>
            </summary>
            <param name="metadata">The ICC profile metadata.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> object or <see langword="null"/> if <paramref name="metadata"/> contains invalid or unsupported data.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile.Create(System.String)">
            <summary>
            Creates an <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> object for ICC profile metadata loaded from the specified file.
            <para>
            This method returns <see langword="null"/> if <paramref name="fileName"/> has invalid data or is in unknown format.
            </para>
            </summary>
            <param name="fileName">The file containing the ICC profile metadata.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> object or <see langword="null"/> if <paramref name="fileName"/> contains invalid or unsupported data.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed">
            <summary>
            The Indexed color space.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color">
            <summary>
            Defines the color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.m_ColorSpace">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed"/> color space used by this color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.Index">
            <summary>
            Gets the index of the color value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed"/> color space of the color.</param>
            <param name="index">The index of the color value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Indexed.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab">
            <summary>
            The Lab color space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color">
            <summary>
            Defines color in <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.L">
            <summary>
            The L value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.A">
            <summary>
            The A value of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.B">
            <summary>
            The B value of the color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab"/> color space of the color.</param>
            <param name="l">The L value of the color.</param>
            <param name="a">The A value of the color.</param>
            <param name="b">The B value of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Lab.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern">
            <summary>
            The Pattern color space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.PdfNameBased">
            <summary>
            The Pattern color space defined by the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.PdfNameBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.PdfObjectBased">
            <summary>
            The Pattern color space defined by an arbitary <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.PdfObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color">
            <summary>
            Represents the color of <see cref="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.Pattern"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.Empty">
            <summary>
            Gets the empty color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.PatternName">
            <summary>
            Gets the name of pattern resource used by this color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.Pattern">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern"/> used by this color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color"/> class.
            </summary>
            <param name="patternName">The pattern resource name.</param>
            <param name="pattern">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Pattern.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.Separation">
            <summary>
            The Separation color spaces.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase">
            <summary>
            The base abstract class for Separation color spaces.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color">
            <summary>
            Defines the color of the separation color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.m_ColorSpace">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase"/> color space of the color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.Components">
            <summary>
            The color components.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase,System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase"/> color space of the color.</param>
            <param name="components">The values of the color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.TryDecodeColor(System.Byte,System.Drawing.Color@)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.SeparationBase.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern">
            <summary>
            The Uncolored pattern color space.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color">
            <summary>
            Defines the color of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern"/> color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.m_ColorSpace">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern"/> color space used by this color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.PatternName">
            <summary>
            Gets the name of pattern resource used by this color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.Pattern">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.Underlying">
            <summary>
            Gets the color used by <see cref="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Underlying"/> color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color"/> class.
            </summary>
            <param name="colorSpace">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern"/> color space of the color.</param>
            <param name="patternName">The pattern resource name.</param>
            <param name="pattern">The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern"/>.</param>
            <param name="underlying">The base color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.IsSame(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UncoloredPattern.Color.ColorSpace">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UnknownColorSpace">
            <summary>
            Abstract base class for PDF color spaces.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UnknownColorSpace.PdfObject">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.UnknownColorSpace.ToString">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.FormXObject">
            <summary>
            Represents a PDF Form XObject.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> class.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> in which the new <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> will be used.</param>
            <param name="bounds">The bounds of the FormXObject.</param>
            <param name="resourceDictionary">The resource dictionary.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> class.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> in which the new <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> will be used.</param>
            <param name="bounds">The bounds of the FormXObject.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Page)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> class using a specified page as the source.
            <para>
            Note that <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Matrix"/> and <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Bounds"/> properties
            are automatically adjusted to take into account the <see cref="P:GrapeCity.Documents.Pdf.Page.UserUnit"/> property of the source page.
            </para>
            </summary>
            <param name="doc">The target <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> where the new <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> will be used.</param>
            <param name="page">The source <see cref="T:GrapeCity.Documents.Pdf.Page"/> the content of which is copied to the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            The source page can belong to another document.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.GetGraphicsWriter">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> used to build content of this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            This method is called from the <see cref="M:GrapeCity.Documents.Pdf.GcPdfGraphics.CheckState(System.Boolean,System.Boolean)"/>
            immediate before some writing operation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.GetUsedFonts">
            <summary>
            Gets the list of fonts referenced by this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
            <returns>The list of fonts referenced by this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.FormXObject.CreateList(GrapeCity.Documents.Pdf.GcPdfDocument,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Page})">
            <summary>
            Creates a list of <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects using a specified list of pages as the source.
            <para>
            Note that <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Matrix"/> and <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Bounds"/> properties
            are automatically adjusted to take into account the <see cref="P:GrapeCity.Documents.Pdf.Page.UserUnit"/> property of the source page.
            </para>
            </summary>
            <param name="doc">The target <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> where the new <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects will be used.</param>
            <param name="pages">The list of the source <see cref="T:GrapeCity.Documents.Pdf.Page"/> objects. These pages can belong to another document.</param>
            <returns>The list of created <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Layer">
            <summary>
            Gets or sets an object that specifies the layer to which this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> belongs.
            <para>
            This can be either an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.HasAssociatedFiles">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.AssociatedFiles"/> collection is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.AssociatedFiles">
            <summary>
            Gets the list of embedded files associated with this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Bounds">
            <summary>
            Gets or sets the bounds of this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Matrix">
            <summary>
            Gets or sets the <see cref="T:System.Numerics.Matrix3x2"/> that maps form space into user space.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Graphics">
            <summary>
            Gets an instance of <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> that can be used to generate content of this <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsState">
            <summary>
            Represents graphics state during rendering PDF content.
            Do not mix up this with <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams"/> it defines PDF Graphics State dictionary object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.Matrix">
            <summary>
            Current transform matrix.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.LineWidth">
            <summary>
            The line width.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.LineCapStyle">
            <summary>
            The shape of the endpoints for any open path that is stroked.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.LineJoinStyle">
            <summary>
            The shape of joints between connected segments of a stroked path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.MiterLimit">
            <summary>
            The maximum length of mitered line joins for stroked paths.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.LineDashPattern">
            <summary>
            The dash pattern to be used when paths are stroked, null indicates solid line.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.LineDashPhase">
            <summary>
            See PDF1.7 page 217 for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.BlendMode">
            <summary>
            The blend mode to be used in the transparent imaging model.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.StrokeAlpha">
            <summary>
            Currently alpha constant for stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.NonstrokeAlpha">
            <summary>
            Current alpha constant for non stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.StrokeColor">
            <summary>
            Color used for stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.NonstrokeColor">
            <summary>
            Color for non-stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.RenderingIntent">
            <summary>
            The Rendering Intent, see PDF 1.7 for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.FlatnessTolerance">
            <summary>
            The flatness tolerance in the graphics state (see Section 6.5.1, “Flatness Tolerance”).
            This is a number in the range 0 to 100;
            a value of 0 specifies the output device’s default flatness tolerance.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.SmoothnessTolerance">
            <summary>
            The Smoothness Tolerance. See PDF 1.7 page 509.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.AutomaticStrokeAdjustment">
            <summary>
            The alpha source flag (“alpha is shape”), specifying whether the current soft mask and alpha constant
            are to be interpreted as shape values (true) or opacity values (false).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextKnockout">
            <summary>
            The text knockout flag, which determines the behavior of overlapping glyphs within a text object
            in the transparent imaging model (see Section 5.2.7, “Text Knockout”).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.ApplyOverprint">
            <summary>
            Indicates whether to apply overprint. See Section 4.5.6, “Overprint Control”
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.ApplyNonStrokeOverprint">
            <summary>
            Indicates whether to apply overprint for non stroking operations. See Section 4.5.6, “Overprint Control”
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.OverprintMode">
            <summary>
            The overprint mode, see specification for details. See Section 4.5.6, “Overprint Control”
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.BlackGenerationFunction">
            <summary>
            The PDF function which maps the interval [ 0.0 1.0 ] to the interval [ 0.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.UndercolorRemovalFunction">
            <summary>
            The PDF function which maps the interval [ 0.0 1.0 ] to the interval [ −1.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TransferFunction">
            <summary>
            The PDF function which maps the interval [ 0.0 1.0 ] to the interval [ 0.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.SoftMask">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase"/> object defining current Soft Mask.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.Font">
            <summary>
            The font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.FontName">
            <summary>
            The name of font resource.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.FontSize">
            <summary>
            The font size.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextCharacterSpacing">
            <summary>
            "Tc" Character spacing.
            A number expressed in unscaled text space units.
            Character spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextWordSpacing">
            <summary>
            "Tw" Word spacing.
            A number expressed in unscaled text space units.
            Word spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            Processed as <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextCharacterSpacing"/> but only for space character (character with code 32).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextHorizontalScaling">
            <summary>
            "Tz" The horizontal scaling.
            A number specifying the percentage of the normal width. Initial value: 100 (normal width).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextLeading">
            <summary>
            "Tl" Text leading.
            A number expressed in unscaled text space units.
            Text leading is used only by the T*, ', and " operators. Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextRenderingMode">
            <summary>
            "Tr" Text rendering mode.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextRise">
            <summary>
            "Ts" Text rise.
            The distance, in unscaled text space units, to move the baseline up or down from
            its default location.
            Positive values of text rise move the baseline up.
            Adjustments to the baseline are useful for drawing superscripts or subscripts.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextMatrix">
            <summary>
            "Tm" Current text matrix.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TextLineMatrix">
            <summary>
            Current text line matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.GetTx(System.Single,System.Int32,System.Int32)">
            <summary>
            Calculates horizontal offset which should be applied to CurrentGraphicsState.TextMatrix after drawing a string with specified props.
            </summary>
            <param name="charsWidth">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.GetTy(System.Single,System.Int32,System.Int32)">
            <summary>
            Calculates vertical offset which should be applied to CurrentGraphicsState.TextMatrix
            after drawing a string with specified props.
            </summary>
            <param name="charsHeight">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.GetTextRenderingMatrix">
            <summary>
            Returns matrix which converts unscaled text coordinate space to device coordinate space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.CreateGlyphStrokePen(System.Drawing.Color)">
            <summary>
            Creates stroke pen to outline a text's glyphs.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TryGetNonstrokeColor(System.Drawing.Color@)">
            <summary>
            Tries to interpret current non-stroke color as simple <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.TryGetStrokeColor(System.Drawing.Color@)">
            <summary>
            Tries to interpret current stroke color as simple <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.AssignFrom(GrapeCity.Documents.Pdf.Graphics.GraphicsState)">
            <summary>
            Copies properties from another <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsState"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.Clone">
            <summary>
            Creates copy of this object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.GraphicsState.ResetToDefault">
            <summary>
            Resets properties of <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsState"/> to default values as they described in PDF specification.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateValues">
            <summary>
            Contains a values used by a <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> to define graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateValues.StrokeAlpha">
            <summary>
            Current alpha constant for stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateValues.NonstrokeAlpha">
            <summary>
            Current alpha constant for non stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateValues.SoftMask">
            <summary>
            Current Soft Mask.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams">
            <summary>
            Represents the graphics state parameter dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.StrokeAlpha">
            <summary>
            Gets or sets the color alpha for stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.NonstrokeAlpha">
            <summary>
            Gets or sets the color alpha for non-stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.SoftMask">
            <summary>
            Gets or sets <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase"/> object defining Soft Mask.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.BlendMode">
            <summary>
            Gets or sets the blend mode, 
            see PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache">
            <summary>
            Contains the cached values of the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.LineWidth">
            <summary>
            <b>LW</b>. The thickness of the line used to stroke a path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.LineCapStyle">
            <summary>
            <b>LC</b>. The shape to be used at the ends of open subpaths (and dashes, if any) when they are stroked.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.LineJoinStyle">
            <summary>
            <b>LJ</b>. The shape to be used at the corners of paths that are stroked.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.MiterLimit">
            <summary>
            <b>ML</b>. The miter limit imposes a maximum on the ratio of the miter length to the line width.
            When the limit is exceeded, the join is converted from a miter to a bevel.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.LineDashPattern">
            <summary>
            <b>D</b>. The <see cref="T:GrapeCity.Documents.Pdf.PdfDashPattern"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.RenderingIntent">
            <summary>
            <b>RI</b>. The PDF rendering intent. See PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.ApplyOverprint">
            <summary>
            <b>OP</b>. Indicating whether to apply overprint specified by the <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.OverprintMode"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.ApplyNonStrokeOverprint">
            <summary>
            <b>op</b>. Indicating whether to apply overprint specified by the <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.OverprintMode"/>
            for non stroke operations. If not specified then <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.ApplyOverprint"/> is used for 
            non stroke operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.OverprintMode">
            <summary>
            <b>OPM</b>. The overprint mode, see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.Font">
            <summary>
            <b>Font</b>. The <see cref="T:GrapeCity.Documents.Pdf.Text.FontDef"/> defining font's properties.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.BG">
            <summary>
            <b>BG</b>. The PDF function which maps the interval [ 0.0 1.0 ] to the interval [ 0.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.BG2">
            <summary>
            <b>BG2</b>. See <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.BG"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.UCR">
            <summary>
            <b>UCR</b>. The PDF function object which maps the interval [ 0.0 1.0 ] to the interval [ −1.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.UCR2">
            <summary>
            <b>UCR2</b>. See <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.UCR"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.TR">
            <summary>
            <b>TR</b>. The PDF function which maps the interval [ 0.0 1.0 ] to the interval [ 0.0 1.0 ],
            see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.TR2">
            <summary>
            <b>TR2</b>. See <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.TR"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.FlatnessTolerance">
            <summary>
            <b>FL</b>. The maximum permitted distance in device pixels between the mathematically
            correct path and an approximation constructed from straight line segments.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.SmoothnessTolerance">
            <summary>
            <b>SM</b>. The value controls the quality of smooth shading (type 2 patterns and the sh operator)
            and thus indirectly controls the rendering performance.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.AutomaticStrokeAdjustment">
            <summary>
            <b>SA</b>. Indicating whether to apply automatic stroke adjustment,
            see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.BlendMode">
            <summary>
            <b>BM</b>. The blend mode, see PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.StrokeAlpha">
            <summary>
            <b>CA</b>. The color alpha for stroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.NonstrokeAlpha">
            <summary>
            <b>ca</b>. The color alpha for nonstroking operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.AlphaIsShape">
            <summary>
            <b>AIS</b>. The value indicating whether the current soft mask and alpha constant are to be interpreted as shape values.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.TextKnockout">
            <summary>
            <b>TK</b>. The flag, which determines the behavior of overlapping
            glyphs within a text object in the transparent imaging model.
            See PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams.Cache.SoftMask">
            <summary>
            <b>SMask</b>. The <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase"/> object defining Soft Mask.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GroupAttributes.Subtype">
            <summary>
            Gets the type of the group, value of <b>S</b> entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GroupAttributes.ColorSpace">
            <summary>
            Gets the group color space.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GroupAttributes.Isolated">
            <summary>
            (Optional)
            A flag specifying whether the transparency group is isolated (see Section 7.3.4, "Isolated Groups").
            If this flag is true, objects within the group are composited against a fully transparent initial backdrop;
            if false, they are composited against the group's backdrop. Default value: false.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.GroupAttributes.Knockout">
            <summary>
            (Optional)
            A flag specifying whether the transparency group is a knockout group (see Section 7.3.5, "Knockout Groups").
            If this flag is false, later objects within the group are composited with earlier ones with which they overlap;
            if true, they are composited with the group's initial backdrop and overwrite ("knock out")
            any earlier overlapping objects. Default value: false.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask">
            <summary>
            Represents a PDF color mask object.  
            See PDF specification for details.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition">
            <summary>
            The image definition interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> and <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage"/>.
            This interface is used by <see cref="T:GrapeCity.Documents.Pdf.ImageDecoder.ImageDecoder"/> to build a <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/>
            from a PDF image definition.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.Width">
            <summary>
            Gets the width of the image in samples (pixels).
            The value of <b>Width</b> entry of a PDF image dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.Height">
            <summary>
            Gets the height of the image in samples (pixels).
            The value of <b>Height</b> entry of a PDF image dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.BitsPerComponent">
            <summary>
            Gets the number of bits used to represent each color component.
            The value shall be 1, 2, 4, 8, or (from PDF 1.5) 16.
            The value of <b>BitsPerComponent</b> entry of a PDF image dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.ImageMask">
            <summary>
            Gets a value indicating whether the image shall be treated as an image mask.
            If this flag is true, the value of <see cref="P:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.BitsPerComponent"/>,
            if present, shall be 1 and Mask and ColorSpace shall be null.
            The value of <b>ImageMask</b> entry of a PDF image dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.GetColorSpace">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/> object used by the image.
            The value of <b>ColorSpace</b> entry of a PDF image dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.GetDecode">
            <summary>
            Returns an array of numbers describing how to map image samples into
            the range of values appropriate for the image's color space.
            The value of <b>Decode</b> entry of a PDF image dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.GetMask">
            <summary>
            Gets the image mask, it can be <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> or <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.ColorMask"/>.
            The value of <b>Mask</b> entry of a PDF image dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.GetSoftMask">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> defining a soft-mask image.
            The value of <b>SMask</b> entry of a PDF image dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.GetMatte">
            <summary>
            See PDF specification for details
            The value of <b>Matte</b> entry of a PDF image dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition.GetImageStreamInfo">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo"/> object containing a stream with image data.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage">
            <summary>
            Used internally to generate Hatch Tilling patterns.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.GetImageStreamInfo">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.Doc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.BitsPerPixel">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.ImageMask">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.Width">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.Height">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.HorizontalResolution">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfHatchImage.VerticalResolution">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage">
            <summary>
            Represents a PDF Image loaded from a PDF stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.Doc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.BitsPerComponent">
            <summary>
            Gets the number of bits used to represent each color component in a sample.
            Valid values are 1, 2, 4, 8, and (in PDF 1.5) 16.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.BitsPerPixel">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.ImageMask">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.Width">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.Height">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.HorizontalResolution">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.VerticalResolution">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.GetSoftMask">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> object defining a soft-mask image,
            see the PDF specification for details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.GetMatte">
            <summary>
            Gets an array of component values specifying the matte color with which the image data
            in the parent image has been pre-blended. See the PDF specification for details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.GetDecode">
            <summary>
            Gets an array of numbers describing how to map image samples into the range of values
            appropriate for the image's color space. See the PDF specification for details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage.GetImageStreamInfo">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase">
            <summary>
            Base abstract class for classes describing images in a PDF file, including inline
            PDF images defined in the PDF content stream using <b>BI</b> and <b>EI</b> operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.GetRenderImage(System.Drawing.Color,System.Drawing.Color,System.Boolean@)">
            <summary>
            Called when a PDF content stream is rendered.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.ImageMask">
            <summary>
            Gets a value indicating whether the image is defined as a stencil mask for painting in the current color.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.InlineImage">
            <summary>
            Gets a value indicating whether the image is an inline image defined directly in a PDF content stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.BitsPerPixel">
            <summary>
            Gets the number of bits-per-pixel (BPP) for this image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.HorizontalResolution">
            <summary>
            Gets the horizontal resolution of the image.
            If this property returns a value that is less or equal than 0, then the horizontal resolution is not specified for an image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.VerticalResolution">
            <summary>
            Gets the vertical resolution of the image.
            If this property returns a value that is less or equal than 0, then the vertical resolution is not specified for an image.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.ToGcBitmap(System.Boolean@)">
            <summary>
            Retrieves the underlying <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object, or creates a new <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> that contains the image data.
            <para>Note that you should dispose the returned <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> if <paramref name="disposeAfterUse"/> is true.</para>
            </summary>
            <param name="disposeAfterUse">OUT: Indicates whether the returned <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> should be disposed by the user.</param>
            <returns>A <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object containing the image.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.GetNativeImage(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates and returns a <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object representing the current <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase"/> object.
            <para><b>IMPORTANT NOTE:</b> the returned bitmap must be disposed after use.</para>
            <para>
            An image in a PDF can be specified as an "image mask" (see <see cref="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.ImageMask"/>),
            in which case the image data is used as a stencil mask for painting in the current color
            specified by <paramref name="currentUnmaskedColor"/>,
            <paramref name="maskedColor"/> specifies the color of the area excluded from filling
            (it is transparent in most cases).
            </para>
            </summary>
            <param name="currentUnmaskedColor">The current color used to fill the unmasked area.</param>
            <param name="maskedColor">The color of the area that is excluded from filling (typically transparent).</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object (must be disposed after use!).</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.GetImageStreamInfo">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/> containing unparsed image data
            and information about the PDF filter and decode parameters.
            <para>Note that not all derived classes support this method (for example, <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/>).</para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase.GetCacheKey">
            <summary>
            For internal use.
            Returns a key uniquely identifying the object in its <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>,
            can return null if object can not be uniquely identified.
            </summary>
            <returns>The key uniquely identifying the object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandlerCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandlerCollection.TryGetImageHandler(GrapeCity.Documents.Drawing.IImage,GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler@)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> associated with a specified <see cref="T:GrapeCity.Documents.Drawing.IImage"/>.
            </summary>
            <param name="image">The image.</param>
            <param name="handler">OUT: the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> object, or null.</param>
            <returns>True if a <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> was found, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandlerCollection.GetImageHandler(GrapeCity.Documents.Drawing.IImage)">
            <summary>
            Gets an existing <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> associated with a specified <see cref="T:GrapeCity.Documents.Drawing.IImage"/>,
            or creates a new one if such image does not exist.
            </summary>
            <param name="image">The image.</param>
            <returns>The existing or newly created <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/>.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandlerCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler">
            <summary>
            Represents and manages a <see cref="T:GrapeCity.Documents.Drawing.IImage"/>
            used in a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.BitsPerPixel">
            <summary>
            Gets the resolution (bits-per-pixel, BPP) of this image.
            <para>
            Note that the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> returns the resolution of
            the underlying image. In some cases a PDF image may not provide any info
            about its resolution, in such cases this property will return 0.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.Format">
            <summary>
            Gets or sets the format used to encode the image associated with this <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/>.
            <para>
            By default this property is unspecified (null), and the actual embedding mode is determined
            by <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.ImageOptions"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.Image">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Drawing.IImage"/> object managed by this <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.Width">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.Height">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.HorizontalResolution">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.VerticalResolution">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler.GetImageStreamInfo">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageObjectBase">
            <summary>
            Base abstract class for classes persisted in a PDF stream as PDF objects:
            <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> and <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageObjectBase.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageObjectBase.AssociatedFiles">
            <summary>
            Gets the list of embedded files associated with this <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageObjectBase"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage">
            <summary>
            Represents a PDF Inline Image defined by <b>BI</b>, <b>ID</b> and <b>EI</b>
            operators in a PDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.IsSame(GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage)">
            <summary>
            Determines whether the provided image is the same as the current.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage"/> object.</param>
            <returns>true if the provided image is the same as the current image; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.IsSame(GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage,GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.InlineImage">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.BitsPerComponent">
            <summary>
            Gets the number of bits used to represent each color component in a sample.
            Valid values are 1, 2, 4, 8, and (in PDF 1.5) 16. Default value: 8.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.ImageMask">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.BitsPerPixel">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.Width">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.Height">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.HorizontalResolution">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.VerticalResolution">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.GetDecode">
            <summary>
            Gets an array of numbers describing how to map image samples into the range of values
            appropriate for the image's color space. See PDF specification for details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.GetImageStreamInfo">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage.GetCacheKey">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.IXObject">
            <summary>
            The interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageObjectBase"/> and <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern">
            <summary>
            Represents the PDF pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.GetRenderer(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.Renderer"/> object which can be used to draw this pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.SetTillingContentStream(System.Byte[])">
            <summary>
            Sets the content stream used by tiling pattern.
            <b>Tilling pattern only.</b>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.PatternType">
            <summary>
            Gets or sets the pattern type, it can be:
            <list type="bullet">
            <item>1 (<see cref="F:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.c_PatternTiling"/>)</item>
            <item>2 (<see cref="F:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.c_PatternShading"/>)</item>
            </list>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.Matrix">
            <summary>
            Gets or sets the pattern matrix.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.Shading">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Shadings.Shading"/> object.
            <b>Shading pattern only.</b>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.PaintType">
            <summary>
            Gets or sets a code that determines how the colour of the pattern,
            it can be:
            <list type="bullet">
            <item>1 (<see cref="F:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.c_TilingPatternPaintTypeColoured"/>)</item>
            <item>2 (<see cref="F:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.c_TilingPatternPaintTypeUncoloured"/>)</item>
            </list>
            <b>Tilling pattern only.</b>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.TilingType">
            <summary>
            Gets or sets a code that determines how the colour of the pattern,
            it can be:
            <list type="bullet">
            <item>1 (<see cref="F:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.c_TilingPatternTilingTypeConstantSpacing"/>)</item>
            <item>2 (<see cref="F:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.c_TilingPatternTilingTypeNoDistortion"/>)</item>
            <item>3 (<see cref="F:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.c_TilingPatternTilingTypeFasterTiling"/>)</item>
            </list>
            <b>Tilling pattern only.</b>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.BBox">
            <summary>
            Gets or sets the pattern cell’s bounding box.
            <b>Tilling pattern only.</b>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.XStep">
            <summary>
            Gets or sets the desired horizontal spacing between pattern cells,
            measured in the pattern coordinate system.
            <b>Tilling pattern only.</b>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.YStep">
            <summary>
            Gets or sets the desired vertical spacing between pattern cells,
            measured in the pattern coordinate system.
            <b>Tilling pattern only.</b>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern.ResourceDictionary">
            <summary>
            Gets or sets a resource dictionary that shall contain all of
            the named resources required by the pattern's content stream
            <b>Tilling pattern only.</b>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary">
            <summary>
            Defines PDF resource dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.CreateAcroFormDefaultResources">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> to use as <see cref="T:GrapeCity.Documents.Pdf.AcroForms.AcroForm"/>
            default resources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.CreateDefault">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetFontResourceName(GrapeCity.Documents.Pdf.Text.Font,System.String)">
            <summary>
            Returns resource name of specified font.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetGraphicsStateParamsResourceName(GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams)">
            <summary>
            Returns resource name of specified graphics state parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetXObjectResourceName(GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase)">
            <summary>
            Returns resource name of specified XObject.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetShadingResourceName(GrapeCity.Documents.Pdf.Graphics.Shadings.Shading)">
            <summary>
            Returns resource name of specified shading.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetPatternResourceName(GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern)">
            <summary>
            Returns resource name of specified pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetColorSpaceResourceName(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <summary>
            Returns resource name of specified color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetResourcePropertiesResourceName(GrapeCity.Documents.Pdf.Wrappers.PdfDictWrapper)">
            <summary>
            Returns resource name of specified properties object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetColorSpace(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetGraphicsStateParams(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetFont(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Text.Font"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetShading(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.Shadings.Shading"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetPattern(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetXObject(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Graphics.IXObject"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GetProperties(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfDictWrapper"/> by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.LayerRemoved(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Removes layer from resource dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ProcSet">
            <summary>
            Gets or sets a value of <b>ProcSet</b> entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.Fonts">
            <summary>
            Gets the collection of font resources.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.GraphicsStateParams">
            <summary>
            Gets the collection of graphics state resources.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.XObjects">
            <summary>
            Gets the collection of XObject resources.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.Shadings">
            <summary>
            The collection of shading resources.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.Patterns">
            <summary>
            Gets the collection of pattern resources.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ColorSpaces">
            <summary>
            Gets the collection of Color Space resources.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.Properties">
            <summary>
            Gets the collection of resource properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollection`1">
            <summary>
            Represents the collection of PDF resource objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollection`1.GetIndirectObjectCount">
            <summary>
            Returns count of objects in the collection which were written as indirect PDF objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollection`1.ContainsObject(`0)">
            <summary>
            Returns a value indicating whether collection contains specified object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollection`1.ContainsName(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns a value indicating whether collection contains specified object with specified name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollection`1.Add(`0,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Adds an object to the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollection`1.GetResourceName(`0,System.String)">
            <summary>
            Returns a name of specified resource, if resource does not exists in the collection
            it will be added with newly generated unique name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollection`1.TryGetResourceByName(GrapeCity.Documents.Pdf.Spec.PdfName,`0@)">
            <summary>
            Returns an object by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary.ResourceCollection`1.TryGetNameByResource(`0,GrapeCity.Documents.Pdf.Spec.PdfName@)">
            <summary>
            Returns a name by the resource object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.Shadings.Shading">
            <summary>
            Represents the PDF Shading object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Shadings.Shading.GetRenderer(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Shadings.Shading.Renderer"/> object which can be used to draw this shading.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.Shadings.Shading.GetColorSpace">
            <summary>
            Gets the value of "ColorSpace" entry.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase">
            <summary>
            The abstract base class representing a PDF Soft Mask.
            <para>
            According to the PDF specification, a soft mask can be specified as a PDF name object
            or as a dictionary, see <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMask"/>.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase.None">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase"/> instance representing an empty soft mask.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase.PdfNameBased">
            <summary>
            The soft mask defined by the direct PDF name as <b>/None</b>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase.PdfNameBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase.PdfObjectBased">
            <summary>
            The soft mask defined by the any <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> but <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.SoftMaskBase.PdfObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Graphics.SoftMask">
            <summary>
            Represents a PDF Soft Mask as described in the PDF spec 1.7, page 552.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.SoftMask.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.SoftMask.FormXObject">
            <summary>
            Gets the transparency group <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> to be used as the source of alpha
            or color values for deriving the mask.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Graphics.SoftMask.Subtype">
            <summary>
            Gets the type of the soft mask it can be <b>/Alpha</b> or <b>Luminosity</b>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Graphics.SoftMask.Create(GrapeCity.Documents.Pdf.GcPdfDocument,System.Drawing.RectangleF)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMask"/> object.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> in which the new <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMask"/> will be used.</param>
            <param name="bounds">The bounds where the soft mask should be applied.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMask"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.IPdfImage">
            <summary>
            Provides access to an image in a PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPdfImage.BitsPerPixel">
            <summary>
            Gets the resolution (bits-per-pixel, BPP) of this image.
            <para>
            Note that in some cases a PDF image may not contain any information about
            its resolution, in such cases this property returns 0.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPdfImage.InlineImage">
            <summary>
            Gets a value indicating whether the image is an inline image defined directly in a content stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.IPdfImage.ImageMask">
            <summary>
            Gets a value indicating whether the image is defined as a stencil mask for painting in the current color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPdfImage.GetNativeImage(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object associated with the current <see cref="T:GrapeCity.Documents.Pdf.IPdfImage"/> object.
            Important: this <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> must be disposed after use.
            <para>
            In a PDF images can be specified as "image mask" (see <see cref="P:GrapeCity.Documents.Pdf.IPdfImage.ImageMask"/>), in that case 
            the image data is used as a stencil mask for painting in the current color
            specified by <paramref name="currentUnmaskedColor"/>,
            <paramref name="maskedColor"/> specifies the color of the area excluded from filling
            (it is transparent in most cases).
            </para>
            </summary>
            <param name="currentUnmaskedColor">The current color used to fill unmasked area.</param>
            <param name="maskedColor">The masked color specifies the color of the area that is excluded from filling (typically transparent).</param>
            <returns>The <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> object (must be disposed after use!).</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.IPdfImage.GetCacheKey">
            <summary>
            For internal use.
            Returns a key uniquely identifying the object in its <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>,
            can return null if object can not be uniquely identified.
            </summary>
            <returns>The key uniquely identifying the object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.CCITTFaxImageDecoder">
            <summary>
            Decodes images with CCITTFaxDecode filter.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.DCTImageDecoder">
            <summary>
            Decodes images with DCTDecode filter.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.ColorComponentDecode">
            <summary>
            See PDF 1.7 page 344 for details.
            Used in formula:
            colorSpaceColorComponent = Dmin + (imageColorComponent * (Dmax - Dmin) / (2^BitsPerComponent - 1))
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ImageDecoder.ColorComponentDecode.Dmin">
            <summary>
            Dmin.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ImageDecoder.ColorComponentDecode.Coef">
            <summary>
            Contains precalculated value of (Dmax - Dmin) / (2^BitsPerComponent - 1).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.ImageDecoder">
            <summary>
            Contains methods used to build <see cref="T:GrapeCity.Documents.Drawing.IImage"/> from PDF image object
            defined by <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition"/> interface.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageDecoder.ImageDecoder.Decode(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Imaging.GcBitmap"/> from an <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.IPdfImageDefinition"/>, can
            throw an exception if <paramref name="pid"/> defines unknown / unsupported data.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.ImageMaskDecoder">
            <summary>
            Decodes images with IsImageMask == true and Stream.Format == Raw.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.JBIG2ImageDecoder">
            <summary>
            Decodes images with JBIG2Decode filter.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.JPXImageDecoder">
            <summary>
            Decodes Jpeg2000 images.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.MonoImageDecoder">
            <summary>
            Base class for <see cref="T:GrapeCity.Documents.Pdf.ImageDecoder.CCITTFaxImageDecoder"/> and <see cref="T:GrapeCity.Documents.Pdf.ImageDecoder.JBIG2ImageDecoder"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageDecoder.RawImageDecoder">
            <summary>
            RAW image decoder.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageDecoder.RawImageDecoder.ProcessC1(System.IO.Stream,GrapeCity.Documents.Imaging.GcBitmap,System.Int32,System.Int32,System.Int32,GrapeCity.Documents.Pdf.ImageDecoder.ColorComponentDecode[],GrapeCity.Documents.Pdf.Graphics.Images.ColorMask,System.UInt32,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorDecoder)">
            <summary>
            Decodes an image if the colorspace has one color component.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageDecoder.RawImageDecoder.FillMemory_C3xBPC1(System.IO.Stream,System.UInt32*,System.Int32,System.Int32,System.Int32,GrapeCity.Documents.Pdf.Graphics.Images.ColorMask,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorDecoder,System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            3 color components, 1 bit per color component.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageDecoder.RawImageDecoder.FillMemory_C3xBPC2(System.IO.Stream,System.UInt32*,System.Int32,System.Int32,System.Int32,GrapeCity.Documents.Pdf.Graphics.Images.ColorMask,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorDecoder,System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            3 color components, 2 bit per color component.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageDecoder.RawImageDecoder.FillMemory_C3xBPC4(System.IO.Stream,System.UInt32*,System.Int32,System.Int32,System.Int32,GrapeCity.Documents.Pdf.Graphics.Images.ColorMask,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorDecoder,System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            3 color components, 4 bit per color component.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageDecoder.RawImageDecoder.FillMemory_C3xBPC8(System.IO.Stream,System.UInt32*,System.Int32,System.Int32,System.Int32,GrapeCity.Documents.Pdf.Graphics.Images.ColorMask,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorDecoder,System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            3 color components, 8 bit per color component.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageDecoder.RawImageDecoder.FillMemory_C3xBPC16(System.IO.Stream,System.UInt32*,System.Int32,System.Int32,System.Int32,GrapeCity.Documents.Pdf.Graphics.Images.ColorMask,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorDecoder,System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            3 color components, 16 bit per color component.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageDecoder.RawImageDecoder.ProcessC3(System.IO.Stream,GrapeCity.Documents.Imaging.GcBitmap,System.Int32,System.Int32,System.Int32,GrapeCity.Documents.Pdf.ImageDecoder.ColorComponentDecode[],GrapeCity.Documents.Pdf.Graphics.Images.ColorMask,System.UInt32,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorDecoder)">
            <summary>
            Decodes an image if the colorspace has 3 color components.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageOptions">
            <summary>
            Represents options controlling how native images are processed when inserted in a PDF file.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageOptions.Reset">
            <summary>
            Resets all properties to their default values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ImageOptions.AssignFrom(GrapeCity.Documents.Pdf.ImageOptions)">
            <summary>
            Copies all property values from another object.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageOptions.Format">
            <summary>
            Gets or sets the format to use when saving images.
            This property does not affect images added as <see cref="T:GrapeCity.Documents.Pdf.RawImage"/>.
            <para>The default is <see cref="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Auto"/>.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageOptions.SaveAllImagesAsJpeg">
            <summary>
            Gets or sets a value indicating whether all images should be converted to JPEG format
            when added to the PDF. The default is false.
            Note that any transparency (if present in the original image) is lost if this property is set to true.
            This property does not affect images added as <see cref="T:GrapeCity.Documents.Pdf.RawImage"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageOptions.JpegQuality">
            <summary>
            Gets or sets the JPEG image quality, in percent.
            This value must be between 0 (lowest quality, maximum compression) to 100 (highest quality, no compression).
            The default is 75.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageOptions.AlphaThreshold">
            <summary>
            Gets or sets the alpha threshold value.
            If all pixels of an image with the alpha channel have alpha values greater than or equal to this value,
            the alpha channel will not be saved, thus making the image and the whole PDF smaller.
            The default is 0xFF (i.e. all transparency is preserved).
            This property is ignored if <see cref="P:GrapeCity.Documents.Pdf.ImageOptions.SaveAllImagesAsJpeg"/> is true.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ImageOptions.CompressColors">
            <summary>
            Gets or sets a value indicating whether to apply a slight compression to color values.
            Unlike JPEG, this preserves transparency while still reducing the image size.
            The default is false.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat">
            <summary>
            Defines formats that can be used to encode images in a PDF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Auto">
            <summary>
            Select the optimal format automatically based on the particular image and document options (recommended).
            <para>The following rules are used:</para>
            <list type="bullet">
            <item>If the image is a JPEG or a JPEG2000, the image data is written as is without any additional processing.</item>
            <item>If the image contains transparency, <see cref="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Raw"/> is used.</item>
            <item>If <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.CompressionLevel"/> is <see cref="F:System.IO.Compression.CompressionLevel.NoCompression"/>, <see cref="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Jpeg"/> is used.</item>
            <item>Otherwise the format is selected that provides the minimal data size for the image.</item>
            </list>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Jpeg">
            <summary>
            Use JPEG to encode images.
            <para>
            Note that when using this format, any transparency that may be present
            in an original image will be lost, as JPEG does not support transparency.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ImageOptions.ImageFormat.Raw">
            <summary>
            Do not encode image data.
            <para>
            When using this format, the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.CompressionLevel"/> affects
            the final PDF size, and in combination with <see cref="F:System.IO.Compression.CompressionLevel.Optimal"/> 
            it may produce better compression than JPEG for certain types of images
            (e.g. screenshots of mostly text screens).
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageMap.ImageMap">
            <summary>
            Represents a "map" of images in the document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ImageMap.ImageMapBuilder">
            <summary>
            Builds <see cref="M:GrapeCity.Documents.Pdf.ImageMap.ImageMap.#ctor"/> using specified <see cref="T:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayersBaseState">
            <summary>
            Defines the state of all optional content groups in the document
            when the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> is applied.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayersBaseState.ON">
            <summary>
            All optional content groups should became visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayersBaseState.OFF">
            <summary>
            All optional content groups should became invisible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayersBaseState.Unchanged">
            <summary>
            The state of optional content groups should be unchanged.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration">
            <summary>
            Represents the Optional Content Configuration PDF dictionary.
            Contains information that allows specifying different presentations
            of a document's optional content groups for use by PDF processors.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.OptionalContent">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties"/> object that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order">
            <summary>
            Gets the list of objects specifying the order of presentation
            of optional content groups in an interactive PDF processor’s user interface.
            <para>
            The list can contain <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>s, <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>s,
            and nested lists containing <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>s or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>s.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.HasOrder">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order"/> list is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Locked">
            <summary>
            Gets an array of optional content groups that shall be locked when this configuration is applied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.ON">
            <summary>
            Gets an array of optional content groups whose state shall be set to ON when this configuration is applied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.HasON">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.ON"/> list is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.OFF">
            <summary>
            Gets an array of optional content groups whose state shall be set to OFF when this configuration
            is applied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.HasOFF">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.OFF"/> list is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.BaseState">
            <summary>
            Gets or sets a value defining how the state of all optional content groups
            should be changed when this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> is applied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.ListMode">
            <summary>
            Gets or sets a value specifying how optional content groups in the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order"/>
            list should be displayed to the user.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.UsageApplications">
            <summary>
            Gets a list of <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/> objects
            specifying which usage dictionary categories
            shall be consulted by PDF processors, when automatically setting the states of optional
            content groups based on external factors, such as the current system language or
            viewing magnification, and when they shall be applied.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.HasUsageApplications">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.UsageApplications"/> collection is not empty.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentOrderCollection">
            <summary>
            Defines a collection used to represent the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order"/> property.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfigurationCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfigurationCollection.Owner">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfigurationCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup">
            <summary>
            Represents an Optional Content Group in a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.Name">
            <summary>
            Gets or sets the name of this optional content group,
            suitable for presentation in an interactive PDF processor’s user interface.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.Intent">
            <summary>
            Gets or sets an array of names that represent the intended use of the graphics in this group.
            The values View and Design, or any second class name may be used
            (see PDF specification Annex E, "(normative) PDF Name Registry").
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.Usage">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> object describing the nature of
            the content controlled by the group.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup.HasUsage">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> has
            Usage property.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects.
            <para>
            Note that an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> can belong 
            only to one <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupCollection"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupCollection.Owner">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupCollection.FindByName(System.String)">
            <summary>
            Finds the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> with the specified name.
            The search is case sensitive.
            </summary>
            <param name="fieldName">The name of the group to find.</param>
            <returns>The found <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or <see langword="null"/> if the group was not found.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupList">
            <summary>
            Represents a list of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentGroupList.FindByName(System.String)">
            <summary>
            Finds the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> with the specified name.
            The search is case sensitive.
            </summary>
            <param name="fieldName">The name of the group to find.</param>
            <returns>The found <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or <see langword="null"/> if the group was not found.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentIdentifier">
            <summary>
            The common class for <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> and <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembershipVisibilityPolicy">
            <summary>
            Defines the possible values of <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.VisibilityPolicy"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.OptionalContentMembershipVisibilityPolicy.AllOn">
            <summary>
            Associated content is visible if all of the entries
            in <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups"/> are ON.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.OptionalContentMembershipVisibilityPolicy.AnyOn">
            <summary>
            Associated content is visible if any of the entries
            in <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups"/> are ON.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.OptionalContentMembershipVisibilityPolicy.AnyOff">
            <summary>
            Associated content is visible if any of the entries
            in <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups"/> are OFF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.OptionalContentMembershipVisibilityPolicy.AllOff">
            <summary>
            Associated content is visible if all of the entries
            in <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups"/> are OFF.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership">
            <summary>
            Represents the Optional Content Membership in a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups">
            <summary>
            Gets an array of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects specifying the
            optional content groups whose states shall determine the visibility of
            content controlled by this membership dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.HasGroups">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.Groups"/> is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership.VisibilityPolicy">
            <summary>
            Gets or sets a value specifying the visibility policy for content belonging to this membership dictionary.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayersListMode">
            <summary>
            Defines the possible values of <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.ListMode"/>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayersListMode.AllPages">
            <summary>
            Display all groups in the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order"/> array.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayersListMode.VisiblePages">
            <summary>
            Display only those groups in the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration.Order"/> array
            that are referenced by one or more visible pages.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayerContentState">
            <summary>
            Defines the possible states of content associated with a layer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerContentState.ON">
            <summary>
            The content associated with a layer is ON.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerContentState.OFF">
            <summary>
            The content associated with a layer is OFF.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayerInitialViewState">
            <summary>
            Defines initial view state of a layer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerInitialViewState.VisibleWhenOn">
            <summary>
            The layer is visible when it is ON in user interface.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerInitialViewState.Never">
            <summary>
            The layer is never visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerInitialViewState.Always">
            <summary>
            The layer is always visible.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayerPrintState">
            <summary>
            Defines the print state of a layer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerPrintState.PrintIfVisible">
            <summary>
            The layer prints if it is visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerPrintState.Never">
            <summary>
            The layer never prints.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerPrintState.Always">
            <summary>
            The layer always prints.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.LayerExportState">
            <summary>
            Defines the export state of a layer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerExportState.ExportIfVisible">
            <summary>
            The layer exports if it is visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerExportState.Never">
            <summary>
            The layer never exports.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.LayerExportState.Always">
            <summary>
            The layer always exports.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties">
            <summary>
            Represents the Optional Content Properties PDF dictionary
            that can be specified in the document catalog.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Groups">
            <summary>
            Gets the collection of optional content groups.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.HasGroups">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Groups"/> collection is not empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.DefaultConfig">
            <summary>
            Gets the default optional content configuration.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.HasDefaultConfig">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties"/>
            has DefaultConfig property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Configs">
            <summary>
            Gets the collection of alternate optional content configurations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.HasConfigs">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Configs"/> collection is not empty.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayer(System.String)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> by its name.
            </summary>
            <param name="layerName">The layer name.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object or null if not found.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.AddLayer(System.String)">
            <summary>
            Adds a layer with a specified name.
            </summary>
            <param name="name">The layer name.</param>
            <returns>The newly created <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that defines the new layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.RemoveLayers(System.Boolean,GrapeCity.Documents.Pdf.Layers.OptionalContentGroup[])">
            <summary>
            Removes specified layers, optionally removing content associated with those layers.
            </summary>
            <param name="removeContent">Indicates whether to remove content associated with the specified layers.</param>
            <param name="layers">An array of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects that specify the layers to be removed.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.RemoveLayer(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Removes a specified layer.
            Note that this method does not remove the content associated with the layer.
            For content removal, see <see cref="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.RemoveLayers(System.Boolean,GrapeCity.Documents.Pdf.Layers.OptionalContentGroup[])"/>.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer to remove.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.RemoveLayer(System.String)">
            <summary>
            Removes a layer with a specified name.
            Throws an exception if the layer with the specified name does not exist.
            Note that this method does not remove the content associated with the layer.
            For content removal, see <see cref="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.RemoveLayers(System.Boolean,GrapeCity.Documents.Pdf.Layers.OptionalContentGroup[])"/>.
            </summary>
            <param name="name">The name of the layer to remove.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerDefaultState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Returns a value indicating whether a layer is ON by default.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <returns>A value indicating whether the layer is ON by default.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerDefaultState(System.String)">
            <summary>
            Returns a value indicating whether a layer is ON by default.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns>A value indicating whether the layer is ON by default.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerDefaultState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,System.Boolean)">
            <summary>
            Sets the default state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <param name="on">Indicates whether the layer is ON (visible) by default.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerDefaultState(System.String,System.Boolean)">
            <summary>
            Sets the default state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <param name="on">Indicates whether the layer is ON (visible) by default.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerLocked(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Returns a value indicating whether a layer is locked.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object defining the layer.</param>
            <returns>true if layer is locked, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerLocked(System.String)">
            <summary>
            Returns a value indicating whether a layer is locked.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns><see langword="true"/> if layer is locked, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerLocked(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,System.Boolean)">
            <summary>
            Sets the locked state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <param name="locked">Indicates whether the layer is locked.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerLocked(System.String,System.Boolean)">
            <summary>
            Sets the locked state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <param name="value">Indicates whether the layer is locked.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerInitialViewState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Returns the layer initial view state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <returns>The initial view state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerInitialViewState(System.String)">
            <summary>
            Returns the layer initial view state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns>The initial view state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerInitialViewState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,GrapeCity.Documents.Pdf.Layers.LayerInitialViewState)">
            <summary>
            Sets the initial view state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <param name="value">The initial view state.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerInitialViewState(System.String,GrapeCity.Documents.Pdf.Layers.LayerInitialViewState)">
            <summary>
            Sets the initial view state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <param name="value">The initial view state.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerPrintState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Returns the print state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <returns>The print state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerPrintState(System.String)">
            <summary>
            Returns the print state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns>The print state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerPrintState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,GrapeCity.Documents.Pdf.Layers.LayerPrintState)">
            <summary>
            Sets the print state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <param name="value">The print state of the layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerPrintState(System.String,GrapeCity.Documents.Pdf.Layers.LayerPrintState)">
            <summary>
            Sets the print state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <param name="value">The print state of the layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerExportState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Returns the export state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <returns>The export state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.GetLayerExportState(System.String)">
            <summary>
            Returns the export state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <returns>The export state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerExportState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,GrapeCity.Documents.Pdf.Layers.LayerExportState)">
            <summary>
            Sets the export state of a layer.
            </summary>
            <param name="layer">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> object that specifies the layer.</param>
            <param name="value">The export state.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.SetLayerExportState(System.String,GrapeCity.Documents.Pdf.Layers.LayerExportState)">
            <summary>
            Sets the export state of a layer.
            Throws an exception if the layer with the specified name does not exist.
            </summary>
            <param name="name">The name of the layer.</param>
            <param name="value">The export state.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentProperties.Clear">
            <summary>
            Clears the content of the current object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage">
            <summary>
            Represents the Optional Content Usage dictionary of a PDF.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfo">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef"/> object containing
            application-specific data associated with this optional content group.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.HasCreatorInfo">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> contains
            CreatorInfo property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.Export">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ExportDef"/> object containing options
            used when the document (or part of it) is saved by a PDF processor
            to a format that does not support optional content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.HasExport">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> contains
            Export property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.Print">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef"/> object containing options
            used when printing.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.HasPrint">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> contains
            Print property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.View">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ViewDef"/> object containing options
            used when the document is first opened by a PDF processor.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.HasView">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> contains
            View property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.Zoom">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef"/> object specifying a range of magnifications
            at which the content in this optional content group is visible.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.HasZoom">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage"/> contains
            Zoom property.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef">
            <summary>
            Defines the application-specific data associated with this optional content group.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef.Creator">
            <summary>
            Gets or sets a text string specifying the application that created the group.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.CreatorInfoDef.Subtype">
            <summary>
            Gets or sets a name defining the type of content controlled by the group.
            Suggested values include but shall not be limited to <b>Artwork</b>,
            for graphic-design or publishing applications,
            and <b>Technical</b>, for technical designs such as building plans or schematics.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ExportDef">
            <summary>
            Defines the options used when the document (or part of it) is saved by
            a PDF processor to a format that does not support optional content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ExportDef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ExportDef"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ExportDef.ExportState">
            <summary>
            Gets or sets a value indicates the recommended state for content in this group when
            the document (or part of it) is saved by a PDF processor to a format that does not
            support optional content.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef">
            <summary>
            Defines the options specifying that the content to be used when printing.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef.Subtype">
            <summary>
            Gets or sets a value specifying the kind of content controlled by the group,
            for example, Trapping, PrintersMarks or Watermark.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.PrintDef.PrintState">
            <summary>
            Gets or sets a value indicating that the group shall be set to that state when
            the document is printed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ViewDef">
            <summary>
            Defines the options used to initialize a layer state
            when the document is first opened by a PDF processor.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ViewDef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ViewDef"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ViewDef.ViewState">
            <summary>
            Gets or sets a value indicates the state of the group when the document is first opened
            by a PDF processor.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef">
            <summary>
            Defines the options specifying a range of magnifications at which the content
            in an optional content group is visible.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef.Min">
            <summary>
            Gets or sets the minimum recommended magnification factor at which the
            group shall be visible. Default value: 0.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.OptionalContentUsage.ZoomDef.Max">
            <summary>
            Gets or sets the magnification factor below which the group shall be visible.
            Default value: float.PositiveInfinity.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.UsageApplication">
            <summary>
            Represents the rules by which usage entries shall be used by interactive PDF processors,
            and should be used by non-interactive PDF processors, to automatically manipulate
            the state of optional content groups, which groups shall be affected, and under which circumstances.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.UsageApplication.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.UsageApplication.Event">
            <summary>
            Gets or sets the name defining the situation in which this <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/>
            should be used. Shall be one of "View", "Print", or "Export".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.UsageApplication.Groups">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects that shall have their states
            automatically managed based on information in their usage dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.UsageApplication.Category">
            <summary>
            Gets or sets the array of names each of which corresponds to a usage dictionary entry.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.UsageApplicationList">
            <summary>
            Represents a list of <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.UsageApplicationList.IndexByCategory(System.String[])">
            <summary>
            Finds the index of a <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/> object
            corresponding to a <see cref="P:GrapeCity.Documents.Pdf.Layers.UsageApplication.Category"/>.
            </summary>
            <param name="category">The categories to test.</param>
            <returns>The index of the found object, or -1.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.UsageApplicationList.FindByCategory(System.String[])">
            <summary>
            Finds the <see cref="T:GrapeCity.Documents.Pdf.Layers.UsageApplication"/> object
            corresponding to a <see cref="P:GrapeCity.Documents.Pdf.Layers.UsageApplication.Category"/>.
            </summary>
            <param name="category">The categories to test.</param>
            <returns>The found object, or <see langword="null"/>.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.ViewState">
            <summary>
            Represents the view state of a PDF document.
            <para>
            The presentation of a PDF document may depend on the context that is determined
            by the current environment and is not persisted in the PDF itself.
            This includes:
            <list type="bullet">
            <item>The transient state of optional content (e.g. the user may have turned a layer's visibility on or off).</item>
            <item>The current operation (e.g. view or print).</item>
            </list>
            This class is used to specify the target context for operations that work
            with document content, so that only the relevant content is processed.
            </para>
            Note that an instance of this class is not automatically updated
            if the document content (e.g. layers) changes.
            Use the <see cref="M:GrapeCity.Documents.Pdf.Layers.ViewState.Reset"/> method to reset the view state
            to its initial state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.ViewState.Doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> for which this <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> was created.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> class.
            </summary>
            <param name="doc">The document for which this instance is created.</param>
            <param name="ignoreLayersState">Indicates whether to ignore the persisted state of the layers, assuming that all layers are visible.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.ApplyConfiguration(GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration)">
            <summary>
            Applies the specified configuration to this view state.
            </summary>
            <param name="configuration">The <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.SetLayerUIState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup,System.Nullable{System.Boolean})">
            <summary>
            Sets the visibility of an optional content group (layer) in the context of an end-user UI.
            The <paramref name="state"/> is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made <paramref name="layer"/> visible.</item>
            <item><see langword="false"/>: the user explicitly made <paramref name="layer"/> hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of <paramref name="layer"/>.</item>
            </list>
            </summary>
            <param name="layer">The target layer.</param>
            <param name="state">The desired state of the layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.SetLayerUIState(System.String,System.Nullable{System.Boolean})">
            <summary>
            Sets the visibility of an optional content group (layer) in the context of an end-user UI.
            The <paramref name="state"/> is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made <paramref name="layerName"/> visible.</item>
            <item><see langword="false"/>: the user explicitly made <paramref name="layerName"/> hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of <paramref name="layerName"/>.</item>
            </list>
            </summary>
            <param name="layerName">The name of the target layer.</param>
            <param name="state">The desired state of the layer.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.SetLayersUIState(System.Nullable{System.Boolean},System.Object[])">
            <summary>
            Sets the visibility of one or more <paramref name="layers"/> in the context of an end-user UI.
            The <paramref name="layers"/> array can contain layer names (strings) or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> references.
            The <paramref name="state"/> is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made the layers visible.</item>
            <item><see langword="false"/>: the user explicitly made the layers hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of the layers.</item>
            </list>
            </summary>
            <param name="state">The desired state of the layer.</param>
            <param name="layers">The array of layer names or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.SetLayersUIStateExcept(System.Nullable{System.Boolean},System.Object[])">
            <summary>
            Sets the visibility of all layers except those listed in the <paramref name="layers"/> array, in the context of an end-user UI.
            The <paramref name="layers"/> array can contain layer names (strings) or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> references.
            The <paramref name="state"/> is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made all layers (except the specified ones) visible.</item>
            <item><see langword="false"/>: the user explicitly made all layers (except the specified ones) hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of the layers.</item>
            </list>
            </summary>
            <param name="state">The desired state of the layer.</param>
            <param name="layers">The array of layer names or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects to be excluded.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.GetLayerUIState(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup)">
            <summary>
            Gets the visibility state of an optional content group (layer) in the context of an end-user UI
            The return value is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made <paramref name="layer"/> visible.</item>
            <item><see langword="false"/>: the user explicitly made <paramref name="layer"/> hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of <paramref name="layer"/>.</item>
            </list>
            </summary>
            <param name="layer">The target layer.</param>
            <returns>The state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.GetLayerUIState(System.String)">
            <summary>
            Gets the visibility state of an optional content group (layer) in the context of an end-user UI
            The return value is interpreted as follows:
            <list type="bullet">
            <item><see langword="true"/>: the user explicitly made the layer visible.</item>
            <item><see langword="false"/>: the user explicitly made the layer hidden.</item>
            <item><see langword="null"/>: the user did not change the visibility of the layer.</item>
            </list>
            </summary>
            <param name="layerName">The name of the target layer.</param>
            <returns>The state of the layer.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.Reset">
            <summary>
            Resets this <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> to its initial state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.IsLayerActive(System.Object)">
            <summary>
            Checks whether a layer is active in the view mode specified by the <see cref="P:GrapeCity.Documents.Pdf.Layers.ViewState.Mode"/> property.
            The target layer can be specified as an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>, an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>
            or a string representing the name of the layer.
            </summary>
            <param name="layer">The layer to check.</param>
            <returns><see langword="true"/> if the layer is active, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.IsLayerActive(System.Object,GrapeCity.Documents.Pdf.Layers.ViewState.ViewMode)">
            <summary>
            Checks whether a layer is active in a specified view mode.
            The target layer can be specified as an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>, an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>
            or a string representing the name of the layer.
            </summary>
            <param name="layer">The layer to check.</param>
            <param name="mode">The target view mode.</param>
            <returns><see langword="true"/> if the layer is active, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.IsLayerVisible(System.Object)">
            <summary>
            Checks whether a layer is visible when the document is viewed.
            The target layer can be specified as an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>, an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>
            or a string representing the name of the layer.
            </summary>
            <param name="layer">The layer to check.</param>
            <returns><see langword="true"/> if the layer is visible, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.IsLayerPrintable(System.Object)">
            <summary>
            Checks whether a layer is visible when the document is printed.
            The target layer can be specified as an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>, an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>
            or a string representing the name of the layer.
            </summary>
            <param name="layer">The layer to check.</param>
            <returns><see langword="true"/> if the layer is printable, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Layers.ViewState.IsLayerExportable(System.Object)">
            <summary>
            Checks whether a layer is visible when the document is exported.
            The target layer can be specified as an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/>, an <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>
            or a string representing the name of the layer.
            </summary>
            <param name="layer">The layer to check.</param>
            <returns><see langword="true"/> if the layer is exportable, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.ViewState.CurrentConfiguration">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration"/> specified in the last
            <see cref="M:GrapeCity.Documents.Pdf.Layers.ViewState.ApplyConfiguration(GrapeCity.Documents.Pdf.Layers.OptionalContentConfiguration)"/> method call.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.ViewState.Zoom">
            <summary>
            Gets or sets the document zoom value (1 is actual size, no zoom).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.ViewState.Mode">
            <summary>
            Gets or sets the document view mode.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Layers.ViewState.IgnoreLayersState">
            <summary>
            Gets or sets a value indicating whether all layers' state should be ignored
            and all layers should be considered visible.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Layers.ViewState.ViewMode">
            <summary>
            Defines the possible document view modes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.ViewState.ViewMode.View">
            <summary>
            The document is being viewed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.ViewState.ViewMode.Print">
            <summary>
            The document is being printed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Layers.ViewState.ViewMode.Export">
            <summary>
            The document is being exported.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Util.LicenseHandler.c_MaxLoadPageCountUnlicensed">
            <summary>
            Count of pages loaded when GcPdfDocument.LicensedState == Unlicensed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.ContentStreamAnalyzer">
            <summary>
            Analyzes content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.DefaultAppearanceStringParser">
            <summary>
            Implements methods to parse default appearance string (DA entry of WidgetAnnotation for example) and feels
            appropriate properties of passed <see cref="T:GrapeCity.Documents.Text.TextFormat"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.DefaultAppearanceStringParser.Parse(GrapeCity.Documents.Pdf.GcPdfDocument,System.String,System.Collections.Generic.HashSet{GrapeCity.Documents.Pdf.Graphics.ResourceDictionary},System.Boolean,GrapeCity.Documents.Text.Font@,System.Boolean@,System.Nullable{System.Single}@,System.Nullable{System.Drawing.Color}@)">
            <summary>
            Parses Default Appearance String (DA) and fills appropriate properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.EnumMap`1">
            <summary>
            Represents utility class used to convert object to / from enum during PDF parsing.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.FontListBuilder">
            <summary>
            Builds list of fonts referenced from content stream including nested <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.FontTextBuilder">
            <summary>
            Builds set of the unicode characters rendered using specified font by specified content stream
            including nested FormXObject.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.GcHtmlContentProcessor">
            <summary>
            Prepares GcHtml content stream to use it in FormXObject.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.IStreamProvider">
            <summary>
            Enables getting a <see cref="T:System.IO.Stream"/> on request.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.IStreamProvider.GetStream">
            <summary>
            Returns a <see cref="T:System.IO.Stream"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.FileStreamProvider">
            <summary>
            Returns the <see cref="T:System.IO.FileStream"/> on request.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Util.FileStreamProvider.FileName">
            <summary>
            The file name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.FileStreamProvider.GetStream">
            <summary>
            Returns the read-only <see cref="T:System.IO.FileStream"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.MemoryStreamProvider">
            <summary>
            Returns the <see cref="T:System.IO.MemoryStream"/> on request.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Util.MemoryStreamProvider.Data">
            <summary>
            The content of a <see cref="T:System.IO.MemoryStream"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.MemoryStreamProvider.GetStream">
            <summary>
            Returns the read-only <see cref="T:System.IO.MemoryStream"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.WrapperStreamProvider">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Common.WrapperStream"/> created over standard <see cref="T:System.IO.Stream"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Util.WrapperStreamProvider.Stream">
            <summary>
            The underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.WrapperStreamProvider.GetStream">
            <summary>
            Returns the read-only <see cref="T:GrapeCity.Documents.Common.WrapperStream"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.PdfNameCollectionWrapper">
            <summary>
            Helper class, implements <b>ICollection{string}</b> over 
            underlying <b>ICollection{PdfName}</b>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.PdfUtil">
            <summary>
            Contains, constants, utility methods common for GcPdf.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.GetPolygonPointRadius(System.Single,GrapeCity.Documents.Pdf.Annotations.BorderEffect)">
            <summary>
            Returns additional offsets to add to the point of polygon 
            to fit <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ConvertCoords(GrapeCity.Documents.Pdf.Page,System.Drawing.PointF[])">
            <summary>
            The coordinates are converted "in place" i.e. items in the array replaced with converted values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ConvertCoords(System.Drawing.RectangleF,System.Drawing.PointF[])">
            <summary>
            The coordinates are converted "in place" i.e. items in the array replaced with converted values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ConvertCoords(GrapeCity.Documents.Pdf.Page,System.Drawing.PointF[][])">
            <summary>
            The coordinates are converted "in place" i.e. items in the array replaced with converted values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ConvertCoords(System.Drawing.RectangleF,System.Drawing.PointF[][])">
            <summary>
            The coordinates are converted "in place" i.e. items in the array replaced with converted values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ConvertCoords(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Common.Quadrilateral[])">
            <summary>
            The coordinates are converted "in place" i.e. items in the array replaced with converted values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ConvertCoords(System.Drawing.RectangleF,GrapeCity.Documents.Common.Quadrilateral[])">
            <summary>
            The coordinates are converted "in place" i.e. items in the array replaced with converted values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.AreAllPdfNamesUnique(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Spec.PdfName})">
            <summary>
            Checks whether all <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> objects are unique.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.GetStreamLength(System.IO.Stream)">
            <summary>
            Tries to get the stream length,
            returns -1 if it is impossible.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.FindTokenPos(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>
            Searches for a <paramref name="token"/> from the end of <paramref name="stream"/>,
            returns a position of the token or -1.
            Note! The <paramref name="stream"/> should support seek operation.
            Note! The method is slow and not optimized.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.XmlPdfNameToPdfName(System.String)">
            <summary>
            Converts the string representing a PDF name in XML format to the standard PDF name.
            For example: OK%21 -> OK!
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.FromPdfDashPattern(System.Single[],System.Single)">
            <summary>
            In GcGraphics method the dash pattern specified same as in WinForms, WPF etc
            i.e. the dashes' sizes depending on width of current line, but in
            PDF size of dashes INDEPENDENT from line width.
            So, this method recalculates dashes depending on line width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.GetEnclosingRectangle(System.Collections.Generic.IReadOnlyList{System.Drawing.PointF})">
            <summary>
            Returns rectangle containing all specified points.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.CheckPointInsideRect(System.Drawing.RectangleF@,System.Single,System.Single)">
            <summary>
            Checks whether a point specified by <paramref name="x"/> and <paramref name="y"/>
            is in a <paramref name="rect"/>, updates the  <paramref name="rect"/>
            to fit the point if needed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.GcLibName">
            <summary>
            Returns "our" name used as default value in <see cref="T:GrapeCity.Documents.Pdf.DocumentInfo"/> and <see cref="T:GrapeCity.Documents.Pdf.Metadata"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.TryPdfStringToDateTime(GrapeCity.Documents.Pdf.Spec.PdfString,System.DateTime@)">
            <summary>
            Tries to convert <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> to DateTime, see PDF1.7 page 160 for details
            about DateTime representation in PDF.
            YYYYMMDDHHmmSSOHH'mm'
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.IsNull(System.Object)">
            <summary>
            Checks whether the value is null or <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfNull.Instance"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.FormatValue(System.Object)">
            <summary>
            For internal use.
            Returns text description of PDF value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ReadBE(System.IO.Stream,System.Int32)">
            <summary>
            Reads specified amount of bytes (max 8) using big-endian order.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.WriteBE(System.IO.Stream,System.Int64,System.Int32)">
            <summary>
            Writes specified amount of bytes (max 8) using big-endian order.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ReadBE(System.Byte[])">
            <summary>
            Reads specified amount of bytes (max 4) using big-endian order.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ReadBE(System.Collections.Generic.List{System.Byte})">
            <summary>
            Reads specified amount of bytes (max 4) using big-endian order.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ReadUShort(System.Collections.Generic.IList{System.Byte},System.Int32)">
            <summary>
            Reads <see cref="T:System.UInt16"/> value from bytes list.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.PdfUtil.ReadUTF16(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Reads chars in UTF-16 encoding from bytes list.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.ResourcesInfo">
            <summary>
            Contains information about resources referenced from content stream.
            Instance of this class is created by the <see cref="T:GrapeCity.Documents.Pdf.Util.ResourcesBuilder"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.ResourcesInfo.IsEmpty">
            <summary>
            Returns a value indicating whether all collections of this <see cref="T:GrapeCity.Documents.Pdf.Util.ResourcesInfo"/> is empty.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.ResourcesBuilder">
            <summary>
            Builds list of resources referenced from content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Util.TransparencyFeaturesChecker">
            <summary>
            Checks a content stream for features related to the PDF transparency.
            </summary>
            <seealso cref="M:GrapeCity.Documents.Pdf.Util.TransparencyFeaturesChecker.GetFeatures(GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode)"/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Util.TransparencyFeaturesChecker.GetFeatures(GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures"/> value
            describing the transparency features used in the content stream defined by the 
            <paramref name="enumerator"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Localization.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Audio_InvalidBitsPerSample">
            <summary>
              Looks up a localized string similar to BitsPerSample of audio files should be multiple of 8..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Audio_UnknownFormat">
            <summary>
              Looks up a localized string similar to Unknown Audio Format..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotBeNegative">
            <summary>
              Looks up a localized string similar to Value should be a non-negative..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotChangeUsedFont">
            <summary>
              Looks up a localized string similar to Properties of [{0}] font can not be changed because it is used in document..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotEncodeFontAsStandardType1">
            <summary>
              Looks up a localized string similar to Font [{0}] can not be encoded as standard Type1 font, to many glyphs is used from this font, to avoid this error embed font to document setting PdfFont.Embed to true..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotRemoveUsedFont">
            <summary>
              Looks up a localized string similar to Font [{0}] can not be removed becayse it is used in document..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotSaveLoadedDocumentAsLinearized">
            <summary>
              Looks up a localized string similar to The current value of GcPdfDocument.Linearized is true. The attempted operation is incompatible with that value. To avoid this exception, set Linearized to false prior to the operation..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.CanNotUseStartDocEndDocWithLinearized">
            <summary>
              Looks up a localized string similar to GcPdfDocument.Linearized can not be true when StartDoc() / EndDoc() methods is used to generate document..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ClickToSign">
            <summary>
              Looks up a localized string similar to Click to Sign.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ContentStreamCanNotBeChanged">
            <summary>
              Looks up a localized string similar to Content Stream {0} can not be changed..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.DrawFormInvalidDoc">
            <summary>
              Looks up a localized string similar to FormXObject should belong to same GcPdfDocument as GcPdfGraphics..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.FdfParser_NoCatalogObject">
            <summary>
              Looks up a localized string similar to Invalid FDF stream, can not find Catalog object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.FieldByNameNotFound">
            <summary>
              Looks up a localized string similar to Field [{0}] not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.FontCollectionCanNotBeCleared">
            <summary>
              Looks up a localized string similar to Fonts collection can not be cleared because it contains used fonts..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_CCITTFaxFilterColorComponentCountMismatch">
            <summary>
              Looks up a localized string similar to Color space ({0}) has invalid count of color components ({1}) for CCITTFax filter, should be 1..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_ColorSpaceCanNotBeUsedWithImages">
            <summary>
              Looks up a localized string similar to ColorSpace [{0}] cannot be used to define an image..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_ColorSpaceDecodingNotImplemented">
            <summary>
              Looks up a localized string similar to Image decoding for [{0}] color space is not implemented..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_ColorSpaceNotSpecified">
            <summary>
              Looks up a localized string similar to ColorSpace not specified for image..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_DCTFilterColorComponentCountMismatch">
            <summary>
              Looks up a localized string similar to Count of color components in Jpeg image ({0}) does not match count of color components defined by ColorSpace of PDF image ({1})..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_DCTFilterUnsupportedColorComponentCount">
            <summary>
              Looks up a localized string similar to Unsupported count of color components in Jpeg image ({0})..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_DecoderNotSupportMasks">
            <summary>
              Looks up a localized string similar to Decoder [{0}] does not support image masks..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_DecoderNotSupportSoftMasks">
            <summary>
              Looks up a localized string similar to Decoder [{0}] does not support soft image masks..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_DeviceNUnsupported">
            <summary>
              Looks up a localized string similar to Unsupported DeviceN color space..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_ICCBasedAlternateNotSpecified">
            <summary>
              Looks up a localized string similar to Alternate color space not specified for ICCBased color space..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_ICCBasedColorProfileNotSpecified">
            <summary>
              Looks up a localized string similar to Color Profile not specified for ICCBased color space..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_IndexedColorSpaceHasInvalidData">
            <summary>
              Looks up a localized string similar to Indexed color space has invalid data..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_InvalidHeight">
            <summary>
              Looks up a localized string similar to Image has invalid Height [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_InvalidImageData">
            <summary>
              Looks up a localized string similar to Invalid image data..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_InvalidWidth">
            <summary>
              Looks up a localized string similar to Image has invalid Width [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_MaskImageShouldBeImageMask">
            <summary>
              Looks up a localized string similar to Image used as mask for another image should have ImageMask parameter with true value..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_SeparationUnsupportedColorant">
            <summary>
              Looks up a localized string similar to Unsupported colorant [{0}] for Separation color space..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_UnsupportedBitsPerComponent">
            <summary>
              Looks up a localized string similar to Image has unsupported BitsPerComponent value [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDecoder_UnsupportedImageFormat">
            <summary>
              Looks up a localized string similar to Unsupported image format..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ImageDisposed">
            <summary>
              Looks up a localized string similar to Image was disposed before saving the GcPdfDocument..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.IncorrectCertificate">
            <summary>
              Looks up a localized string similar to Incorrect certificate (must be private key)..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.InvalidStreamForSign">
            <summary>
              Looks up a localized string similar to Stream passed to GcPdfDocument.Save() method should support read and seek operations..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.InvalidStreamForSave">
            <summary>
              Looks up a localized string similar to The stream used to load a document cannot be written to.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ItemAlreadyHasOwner">
            <summary>
              Looks up a localized string similar to Item [{0}] already has owner [{1}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ItemBelongsToDifferentDocument">
            <summary>
              Looks up a localized string similar to [{0}] belong to a different document..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.NameAlreadyExists">
            <summary>
              Looks up a localized string similar to [{0}] with name [{1}] already exists..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.NameCanNotBeEmpty">
            <summary>
              Looks up a localized string similar to Name of a [{0}] cannot be empty.&quot;.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PageCanNotBeChangedInStartEndDocMode">
            <summary>
              Looks up a localized string similar to In StartDoc() / EndDoc() mode only properties of last page can be changed..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PageContentStreamCanNotBeChangedInStartEndDocMode">
            <summary>
              Looks up a localized string similar to In StartDoc() / EndDoc() mode only properties of last page content stream can be changed..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PageContentStreamsCanNotBeChanged">
            <summary>
              Looks up a localized string similar to Page.ContentStreams collection can not be changed when document generated via StartDoc() / EndDoc() methods..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PagesCanNotBeChanged">
            <summary>
              Looks up a localized string similar to GcPdfDocument.Pages collection can not be changed when document generated via StartDoc() / EndDoc() methods..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PageUsesOtherResourceDictionary">
            <summary>
              Looks up a localized string similar to PageContentStream can not be used with specified page because it uses another resource dictionary..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_DictionaryKeyExpected">
            <summary>
              Looks up a localized string similar to Expected key in dictionary object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EncryptException">
             <summary>
               Looks up a localized string similar to Exception occurred while building decrypt Security Handler.
            {0}.
             </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EofArrayExpected">
            <summary>
              Looks up a localized string similar to Expected end of array..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EofDictionaryExpected">
            <summary>
              Looks up a localized string similar to Expected end of dictionary object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EofHexStringExpected">
            <summary>
              Looks up a localized string similar to Expected end of HEX string..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EofNotFound">
            <summary>
              Looks up a localized string similar to %%EOF marker is not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_EofStringExpected">
            <summary>
              Looks up a localized string similar to Expected end of literal string..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_FilterNotFound">
            <summary>
              Looks up a localized string similar to Decode Filter [{0}] not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_HangingObjectInContentItem">
            <summary>
              Looks up a localized string similar to {0} is linked with a &quot;hanging&quot; object [{1}] and this object can not be associated with document&apos;s content..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_HexStringOrDictionaryExpected">
            <summary>
              Looks up a localized string similar to Expected HEX string or dictionary object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_ImageFilterShouldBeLast">
            <summary>
              Looks up a localized string similar to Image filter [{0}] should be last in the &quot;Filter&quot; property of Stream object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidArrayItem">
            <summary>
              Looks up a localized string similar to The item [{0}] of PDF array (ID: [{1}]) has value [{2}] it can not be converted to [{3}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidCharInASCII85Stream">
            <summary>
              Looks up a localized string similar to Invalid char [{0}] in ASCII85 stream..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidCharInASCIIHexStream">
            <summary>
              Looks up a localized string similar to Invalid char [{0}] in ASCIIHex stream..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidCMapStream">
            <summary>
              Looks up a localized string similar to Invalid CMap stream..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidCrossReferenceStreamObject">
            <summary>
              Looks up a localized string similar to Invalid Cross-Reference stream object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidCrossReferenceTable">
            <summary>
              Looks up a localized string similar to Invalid Cross-Reference table..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidDestinationPage">
            <summary>
              Looks up a localized string similar to Invalid value [{0}] specified as Page for Destination object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidDictProp">
            <summary>
              Looks up a localized string similar to The property [{0}] of PDF dictionary (ID: [{1}]) has value [{2}] it can not be converted to [{3}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_DocumentCatalogNotFound">
            <summary>
              Looks up a localized string similar to Document Catalog not specified..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidEncrypt">
            <summary>
              Looks up a localized string similar to Invalid/Unknown encrypt definition..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidEndOfDictionary">
            <summary>
              Looks up a localized string similar to Expected second &apos;&gt;&apos; as end of dictionary..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidEnumValue">
            <summary>
              Looks up a localized string similar to Value [{0}] connot be converted to enum [{1}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidFileID">
            <summary>
              Looks up a localized string similar to Invalid File ID..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidHexString">
            <summary>
              Looks up a localized string similar to Invalid HEX string..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidInlineImage">
            <summary>
              Looks up a localized string similar to Invalid Inline Image object definition..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidLengthOfFileID">
            <summary>
              Looks up a localized string similar to Invalid length of File ID item..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidNumber">
            <summary>
              Looks up a localized string similar to [{0}] is invalid number, 0 is used as value..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidObjectStream">
            <summary>
              Looks up a localized string similar to Invalid Object Stream {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidPassword">
            <summary>
              Looks up a localized string similar to Invalid password..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidRefValue">
            <summary>
              Looks up a localized string similar to PDF reference [{0} R] references value [{1}] which can not be converted to [{2}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidStandardSecurityHandler">
            <summary>
              Looks up a localized string similar to Invalid Standard Security Handler definition..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidStartxref">
            <summary>
              Looks up a localized string similar to Invalid startxref value..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidStreamObject">
            <summary>
              Looks up a localized string similar to Invalid stream object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidTypeOfConvertedObject">
            <summary>
              Looks up a localized string similar to Value [{0}] was converted to [{1}], it can not be converted to [{2}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidTypeOfReferencedObject">
            <summary>
              Looks up a localized string similar to PDF object [{0}] was already converted to [{1}], it can not be converted to [{2}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidPdfObject">
            <summary>
              Looks up a localized string similar to PDF object [{0}] can not be converted to [{1}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_NoDictValue">
            <summary>
              Looks up a localized string similar to PDF dictionary does not contain [{0}] value..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_ObjectStreamNotFound">
            <summary>
              Looks up a localized string similar to Object Stream {0} is not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_PdfObjectExpected">
            <summary>
              Looks up a localized string similar to Expected PDF object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_PreviousCrossReferenceTableNotFound">
            <summary>
              Looks up a localized string similar to Cross-Reference table specified in &quot;Prev&quot; entry is not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_StandardSecurityHandlerUnsupportedRevision">
            <summary>
              Looks up a localized string similar to Unsupported revision [{0}] of StandardSecurityHandler..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_startxrefNotFound">
            <summary>
              Looks up a localized string similar to startxref marker is not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_startxrefOffsetNotFound">
            <summary>
              Looks up a localized string similar to startxref offset is not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_TrailerDictNotFound">
            <summary>
              Looks up a localized string similar to Trailer dictionary not found..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnexpectedException">
             <summary>
               Looks up a localized string similar to Unexpected exception occurred while parsing PDF document.
            {0}.
             </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnknownActionType">
            <summary>
              Looks up a localized string similar to Unknown action type [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnknownEncryptionAlgorithm">
            <summary>
              Looks up a localized string similar to Unknown encryption algorithm [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnknownEntryTypeInCrossReferenceStream">
            <summary>
              Looks up a localized string similar to Unknown entry type [{0}] in Cross-Reference stream object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnknownPdfObject">
            <summary>
              Looks up a localized string similar to Unknown PDF content..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnknownSecurityHandlerType">
            <summary>
              Looks up a localized string similar to Unknown type of Security Handler: [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_UnsupprotedStructElementChildItem">
            <summary>
              Looks up a localized string similar to Child item of StructElement has unknown type [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_ValueTooBig">
            <summary>
              Looks up a localized string similar to Value [{0}] is too big..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_ValueTooSmall">
            <summary>
              Looks up a localized string similar to Value [{0}] is too small..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.PdfImageShouldBelongsToSameDocument">
            <summary>
              Looks up a localized string similar to Can not render PDF image of another PDF document..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_EncryptionHandlerStartDoc">
            <summary>
              Looks up a localized string similar to EncryptionHandler should be specified before StartDoc(...) method..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_EncryptionHandlerDecryptFailed">
            <summary>
              Looks up a localized string similar to EncryptionHandler should be specified before StartDoc(...) method..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_InvalidEncriptionKeyLength">
            <summary>
              Looks up a localized string similar to EncriptionKeyLength must be a multiple of 8, in the range 40 to 128..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_InvalidEncriptionKeyLength2">
            <summary>
              Looks up a localized string similar to EncriptionKeyLength must be 128 if EncryptionAlgorithm is AES..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_InvalidStandardSecurityHandler5">
            <summary>
              Looks up a localized string similar to Invalid Standard Security Handler revision 5..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_SSH5EncryptionAlgorithm">
            <summary>
              Looks up a localized string similar to Standard Security Handler Revision 5 supports only AES encryption..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_SSH5InvalidKeyLength">
            <summary>
              Looks up a localized string similar to Standard Security Handler Revision 5 supports only 256 bit key length..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Security_SSH5PasswordTooLong">
            <summary>
              Looks up a localized string similar to Password is too long. According to PDF specification, password should be converted to byte array using UTF8 encoding and only the first 127 bytes are used for encryption..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_AuthenticatedAttributeMissingTheDigest">
            <summary>
              Looks up a localized string similar to Authenticated attribute is missing the digest..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_CanNotDecodePKCS7signeddataObject">
            <summary>
              Looks up a localized string similar to Cannot decode PKCS7SignedData object..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_CanNotFindSigningCertificateWithSerial">
            <summary>
              Looks up a localized string similar to &quot;Cannot find signing certificate with serial [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_FailedToGetTsaResponse">
            <summary>
              Looks up a localized string similar to Failed to get response from TSA server {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_InvalidTsaResponse">
            <summary>
              Looks up a localized string similar to Invalid TSA response from {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_NoTimeTokenInTsaResponse">
            <summary>
              Looks up a localized string similar to No timetoken in TSA response from {0}..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_NotValidPKCS7ObjectNotSequence">
            <summary>
              Looks up a localized string similar to Not a valid PKCS#7 object - not a sequence..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_NotValidPKCS7ObjectNotSignedData">
            <summary>
              Looks up a localized string similar to Not a valid PKCS#7 object - not signed data..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_PKCS7ObjectHasMultipleSignerinfosOnlyOneSupportedAtThisTime">
            <summary>
              Looks up a localized string similar to This PKCS#7 object has multiple SignerInfos - only one is supported at this time..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_SigntureIsEmpty">
            <summary>
              Looks up a localized string similar to Signature is empty..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Signature_UnsupportedSignatureType">
            <summary>
              Looks up a localized string similar to Unsupported signature type [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampApproved">
            <summary>
              Looks up a localized string similar to APPROVED.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampAsIs">
            <summary>
              Looks up a localized string similar to AS IS.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampConfidential">
            <summary>
              Looks up a localized string similar to CONFIDENTIAL.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampDepartmental">
            <summary>
              Looks up a localized string similar to DEPARTMENTAL.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampDraft">
            <summary>
              Looks up a localized string similar to DRAFT.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampExperimental">
            <summary>
              Looks up a localized string similar to EXPERIMENTAL.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampExpired">
            <summary>
              Looks up a localized string similar to EXPIRED.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampFinal">
            <summary>
              Looks up a localized string similar to FINAL.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampForComment">
            <summary>
              Looks up a localized string similar to FOR COMMENT.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampForPublicRelease">
            <summary>
              Looks up a localized string similar to FOR PUBLIC RELEASE.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampNotApproved">
            <summary>
              Looks up a localized string similar to NOT APPROVED.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampNotForPublicRelease">
            <summary>
              Looks up a localized string similar to NOT FOR PUBLIC RELEASE.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampSold">
            <summary>
              Looks up a localized string similar to SOLD.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StampTopSecret">
            <summary>
              Looks up a localized string similar to TOP SECRET.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.StructElementIDShouldBeUnique">
            <summary>
              Looks up a localized string similar to All StructElement objects in document&apos;s structure tree should have unique IDs..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.UnsupportedImageType">
            <summary>
              Looks up a localized string similar to Unsupported image type [{0}]..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.UnsupportedObjectInActionHide">
            <summary>
              Looks up a localized string similar to Object [{0}] can not be used in ActionHide..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.WidgetAnnotationInvalidImage">
            <summary>
              Looks up a localized string similar to Value should be IImage or FormXObject..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.ColorSpace_SeparationInvalid">
            <summary>
              Looks up a localized string similar to Value should be IImage or FormXObject..
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Redact_AnnotationNotBelongsToDocument">
            <summary>
              Looks up a localized string similar to RedactAnnotation does not belong to this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Localization.Strings.Parser_InvalidOperands">
            <summary>
              Looks up a localized string similar to Invalid operands for the [{0}] operator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.Log">
            <summary>
            For internal use.
            Can be used for logging the currently executed operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack">
            <summary>
            The stack of currently executed operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.Log.Items">
            <summary>
            The list of log messages.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.IsSame(GrapeCity.Documents.Pdf.Log.Log)">
            <summary>
            Determines whether the provided <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> is the same as the current log.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> object.</param>
            <returns>true if the provided log is the same as the current log; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.IsSame(GrapeCity.Documents.Pdf.Log.Log,GrapeCity.Documents.Pdf.Log.Log)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.Save(System.IO.Stream)">
            <summary>
            For internal use.
            Saves the <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> to the stream in a XML format.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.Save(System.String)">
            <summary>
            For internal use.
            Saves the <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> to the file in a XML format.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.Clear">
            <summary>
            Clears the log.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.BeginOperation(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Adds an <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> object to the <see cref="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.BeginParseValue(System.String,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Creates and adds an <see cref="T:GrapeCity.Documents.Pdf.Log.OperationParsePdfObject"/> object to the <see cref="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.BeginParseValue(System.Type,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Creates and adds an <see cref="T:GrapeCity.Documents.Pdf.Log.OperationParsePdfObject"/> object to the <see cref="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.EndOperation">
            <summary>
            Pops a last operation object from the <see cref="F:GrapeCity.Documents.Pdf.Log.Log.OperationStack"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.AddItem(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <summary>
            Adds a log message.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.Load(System.IO.Stream)">
            <summary>
            For internal use.
            Loads a <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> from specified stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.Log.Load(System.String)">
            <summary>
            For internal use.
            Loads a <see cref="T:GrapeCity.Documents.Pdf.Log.Log"/> from specified file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.Log.LogMaxSize">
            <summary>
            Gets or sets the maximum log size, if log exceeds specified value then all warning and info will not be added.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntrySeverity">
            <summary>
            Defines possible severity of log entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.LogEntrySeverity.Info">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.LogEntrySeverity.Warning">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.LogEntrySeverity.Error">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.LogEntrySeverity.Critical">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryBase">
            <summary>
            Defines the base class for log entries.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryBase.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryBase"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryBase.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <summary>
            Determines whether the provided log entry is the same as the current entry.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryBase"/> object.</param>
            <returns>true if the provided entry is the same as the current entry; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryBase.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase,GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryBase"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryBase.Severity">
            <summary>
            Gets the severity of log entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryBase.Message">
            <summary>
            Get the message of log entry.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntry">
            <summary>
            Defines the log entry based on custom message.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntry.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntry"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntry.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntry"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntry.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntry.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryParser">
            <summary>
            Defines the log entry about a problem when parsing a PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryParser.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryParser"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryParser.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryParser"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryParser.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryParser.StreamPosition">
            <summary>
            Gets the position in the parser stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryParser.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryException">
            <summary>
            Defines the log entry based on custom exception.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryException.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryException.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryException.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryException.Exception">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryOperation">
            <summary>
            Defines the log entry about some operation performed during document processing.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryOperation.#ctor(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryOperation"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryOperation.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryOperation.Operation">
            <summary>
            Gets the associated <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryOperationBegin">
            <summary>
            Defines "operation begin" the log entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryOperationBegin.#ctor(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryOperationBegin"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryOperationBegin.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryOperationEnd">
            <summary>
            Defines "operation end" the log entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryOperationEnd.#ctor(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryOperationEnd"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryOperationEnd.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference">
            <summary>
            Indicates that PDF reference can not be resolved.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference.#ctor(GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference.ShouldSerializeObjID">
            <summary>
            Indicates whether to serialize <see cref="P:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference.ObjID"/> property.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference.ObjID">
            <summary>
            Gets the ID of referenced PDF object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryFailedToResolveReference.Message">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject">
            <summary>
            Indicates that PDF object has invalid/unexpected value in some context.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject.#ctor(GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject.ShouldSerializePdfObjectInfo">
            <summary>
            Indicates whether to serialize PdfObjectInfo property.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject.CantConvert(GrapeCity.Documents.Pdf.Spec.IPdfObject,System.String)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject"/> with message:
            <para>
            PDF object [{ipo}] can not be converted to [{expectedType}].
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject.CantConvert(GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Type)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject"/> with message:
            <para>
            PDF object [{ipo}] can not be converted to [{expectedType}].
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject.Message">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidPdfObject.PdfObjectInfo">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo"/> caused the warning.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidContainerElement">
            <summary>
            The base abstract class for <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp"/> and
            <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem"/> classes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidContainerElement.#ctor(GrapeCity.Documents.Pdf.Spec.PdfObjID,GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidContainerElement.ShouldSerializeContainerID">
            <summary>
            Indicates whether to serialize ContainerID property.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidContainerElement.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp">
            <summary>
            Indicates that a property of a PDF dictionary has invalid/unexpected value in some context.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp.#ctor(GrapeCity.Documents.Pdf.Spec.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp.CantConvertDictProp(GrapeCity.Documents.Pdf.Spec.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.String)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp"/> with message:
            <para>
            The property [{propName}] of PDF dictionary (ID: [{dictID}]) has value [{propValue}] it can not be converted to [{expectedType}].
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp.CantConvertDictProp(GrapeCity.Documents.Pdf.Spec.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Type)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp"/> with message:
            <para>
            The property [{propName}] of PDF dictionary (ID: [{dictID}]) has value [{propValue}] it can not be converted to [{expectedType}].
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp.PropName">
            <summary>
            Gets the name of the PDF dictionary property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp.PropValueInfo">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo"/> object representing the value of the PDF dictionary property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidDictProp.DictID">
            <summary>
            Gets the ID of PDF dictionary.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem">
            <summary>
            Indicates that an item of a PDF array has invalid/unexpected value in some context.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem.#ctor(GrapeCity.Documents.Pdf.Spec.PdfObjID,System.Int32,GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem.CantConvertArrayItem(GrapeCity.Documents.Pdf.Spec.PdfObjID,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.String)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem"/> with message:
            <para>
            The item [{propName}] of PDF array (ID: [{arrayID}]) has value [{itemValue}] it can not be converted to [{expectedType}].
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem.CantConvertArrayItem(GrapeCity.Documents.Pdf.Spec.PdfObjID,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Type)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem"/> with message:
            <para>
            The item [{propName}] of PDF array (ID: [{arrayID}]) has value [{itemValue}] it can not be converted to [{expectedType}].
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem.ItemIndex">
            <summary>
            Gets the item index.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem.ItemValueInfo">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo"/> object representing the value of the PDF array item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.LogEntryInvalidArrayItem.ArrayID">
            <summary>
            Gets the ID of PDF array.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.LogEntryList">
            <summary>
            Defines list of <see cref="T:GrapeCity.Documents.Pdf.Log.LogEntryBase"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.OperationBase">
            <summary>
            Defines some operation performed during document processing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Log.OperationBase.Logged">
            <summary>
            Indicates whether this operation was added to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationBase.Description">
            <summary>
            Gets the operation description.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationBase.IsSame(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Determines whether the provided <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> is the same as the current <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/>.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> object.</param>
            <returns>true if the provided <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> is the same as the current; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationBase.IsSame(GrapeCity.Documents.Pdf.Log.OperationBase,GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Log.OperationBase"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.OperationParsePdfObject">
            <summary>
            Parses a PDF object and initializes some high-level object from it.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationParsePdfObject.#ctor(System.String,GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Log.OperationParsePdfObject"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationParsePdfObject.ShouldSerializePdfObjectInfo">
            <summary>
            Indicates whether to serialize PdfObjectInfo property.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationParsePdfObject.IsSame(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationParsePdfObject.ParsedObjectType">
            <summary>
            Gets the type of object parsed from a PDF object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationParsePdfObject.PdfObjectInfo">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo"/> object describing source PDF object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Log.OperationParsePdfObject.Description">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Log.OperationStack">
            <summary>
            Defines the stack of currently executed operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationStack.Push(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Log.OperationStack.Pop">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagBase">
            <summary>
            Abstract base class for parameterized Marked Content Tags.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.MarkedContent.TagBase.GetTagName">
            <summary>
            Returns tag's name used in BDC / BMC commands.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagBase.HasProperties">
            <summary>
            Gets a value indicating whether the current tag object has additional properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagPropsBase">
            <summary>
            Abstract base class for tags that use <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> to store properties.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagPropsBase.HasProperties">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagPropsBase.Properties">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> object containing the current tag's properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagCustom">
            <summary>
            Represents a common custom tag, which can be prepared to represent any tag.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagCustom.Name">
            <summary>
            Gets or sets this tag's name.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagMcid">
            <summary>
            Represents a standard MCID tag.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.MarkedContent.TagMcid"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.MarkedContent.TagMcid"/> class.
            </summary>
            <param name="contentType">The value of the <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.ContentType"/> property.</param>
            <param name="mcid">The value of the <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.MCID"/> property.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.MarkedContent.TagMcid"/> class.
            </summary>
            <param name="contentType">The value of the <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.ContentType"/> property.</param>
            <param name="mcid">The value of the <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.MCID"/> property.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.ContentType">
            <summary>
            Gets or sets the type of a structure item that owns the content represented by this MCID tag.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagMcid.MCID">
            <summary>
            Gets or sets the ID of this marked content sequence.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact">
            <summary>
            Represents a standard Artifact tag.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Types">
            <summary>
            Specifies the well-known values of an artifact tag's <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Type"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Types.TypePagination">
            <summary>
            Pagination.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Types.TypeLayout">
            <summary>
            TypeLayout.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Types.TypePage">
            <summary>
            TypePage.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Types.TypeBackground">
            <summary>
            TypeBackground.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtypes">
            <summary>
            Specifies the well-known values of an artifact tag's <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtype"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtypes.Header">
            <summary>
            Header.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtypes.Footer">
            <summary>
            Footer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtypes.Watermark">
            <summary>
            Watermark.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Type">
            <summary>
            Gets or sets the type of this artifact.
            <para>
            If present, must be one of the names "Pagination", "Layout", "Page", or (PDF 1.7) "Background".
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Subtype">
            <summary>
            Gets or sets the subtype of this artifact.
            <para>
            This entry applies only when the <see cref="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.Type"/> property is "Pagination".
            Valid values are "Header", "Footer" and "Watermark".
            Additional values can be defined for this property, see PDF specification for details.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.MarkedContent.TagArtifact.BBox">
            <summary>
            Gets or sets this artifact’s bounding box (the rectangle that completely encloses its visible extent).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Metadata">
            <summary>
            Represents XMP metadata associated with a document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Metadata.TimeZoneInfo">
            <summary>
            For testing purposes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Metadata._doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this <see cref="T:GrapeCity.Documents.Pdf.Metadata"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Metadata._content">
            <summary>
            The parsed content of the <see cref="T:GrapeCity.Documents.Pdf.Metadata"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Metadata"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.PdfA">
            <summary>
            Gets or sets the PDF/A conformance version.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.PdfUa">
            <summary>
            Gets or sets the PDF/UA conformance version.
            Null indicates that the document is not PDF/UA compliant.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Producer">
            <summary>
            Gets or sets the document's producer. Maps to PDF 'Producer' property.
            The default is the versioned name of the GcPdf library.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Title">
            <summary>
            Gets or sets the document's title. Maps to Dublin Core 'title' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Description">
            <summary>
            Gets or sets the document description. Maps to Dublin Core 'description' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Coverage">
            <summary>
            Gets or sets the document coverage. Maps to Dublin Core 'coverage' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Identifier">
            <summary>
            Gets or sets the document identifier. Maps to Dublin Core 'identifier' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Copyright">
            <summary>
            Gets or sets the document copyright. Maps to Dublin Core 'rights' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Source">
            <summary>
            Gets or sets the document source. Maps to Dublin Core 'source' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.CreateDate">
            <summary>
            Gets or sets the creation date. Maps to XMP 'CreateDate' property.
            If null, the current date/time is used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.ModifyDate">
            <summary>
            Gets or sets the modification date. Maps to XMP 'ModifyDate' property.
            If null, the current date/time is used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.MetadataDate">
            <summary>
            Gets or sets the metadata date. Maps to XMP 'MetadataDate' property.
            If null, the current date/time is used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.CreatorTool">
            <summary>
            Gets or sets the creator tool, in PDF/A compatible documents this value should be
            the same as <see cref="P:GrapeCity.Documents.Pdf.DocumentInfo.Creator"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the metadata is marked as read-only.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Creators">
            <summary>
            Gets the list of document creators. Maps to Dublin Core 'creator' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Keywords">
            <summary>
            Gets the list of document keywords, or subjects. Maps to Dublin Core 'subject' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Contributors">
            <summary>
            Gets the list of document contributors. Maps to Dublin Core 'contributor' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Languages">
            <summary>
            Gets the list of document languages. Maps to Dublin Core 'language' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Publishers">
            <summary>
            Gets the list of document publishers. Maps to Dublin Core 'publisher' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Relations">
            <summary>
            Gets the list of document relations. Maps to Dublin Core 'relation' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Types">
            <summary>
            Gets the list of document types. Maps to Dublin Core 'type' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.Dates">
            <summary>
            Gets the list of document dates. Maps to Dublin Core 'date' property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.UserProps">
            <summary>
            Gets the list of document custom properties.
            <para>
            Note that the order of elements in the collection may change after saving and loading
            the document, this is due to the specifics of how properties are stored in the document,
            see the PDF specification for details.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.GetStream">
            <summary>
            Gets the content of the current metadata as a <see cref="T:System.IO.Stream"/>.
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/> representing the current metadata.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.GetXmlDocument">
            <summary>
            Gets the content of the current metadata as a <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <returns>An <see cref="T:System.Xml.XmlDocument"/> representing the current metadata.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.Reset">
            <summary>
            Resets values of this <see cref="T:GrapeCity.Documents.Pdf.Metadata"/> object to default values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.AddProperty(System.String,System.String,System.String)">
            <summary>
            Adds a property to metadata.
            Note that only allowed namespaces are:
            <para>"http://purl.org/dc/elements/1.1/" (Dublin Core Properties)</para>
            <para>"http://ns.adobe.com/xap/1.0/" (XMP Core Properties)</para>
            <para>"http://ns.adobe.com/pdf/1.3/" (PDF Properties)</para>
            Trying to add a property with another namespace will throw an exception.
            </summary>
            <param name="ns">XML namespace.</param>
            <param name="name">Property name.</param>
            <param name="value">Property value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.FormatUTC(System.DateTime,System.Boolean)">
            <summary>
            Formats a DateTime value for writing to metadata.
            </summary>
            <param name="dateTime">A DateTime value to format.</param>
            <param name="forceTimeZoneOffset">Indicates whether to force add time zone offset for a value even if it is 00:00. It is required in case of PDF/A.</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Metadata.UserProp">
            <summary>
            Represents a custom metadata property.
            Note that the only allowed namespaces are:
            <list type="bullet">
            <item>"http://purl.org/dc/elements/1.1/" (Dublin Core Properties)</item>
            <item>"http://ns.adobe.com/xap/1.0/" (XMP Core Properties)</item>
            <item>"http://ns.adobe.com/pdf/1.3/" (PDF Properties)</item>
            </list>
            Attempting to add a property with a different namespace will throw an exception.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.UserProp.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Metadata.UserProp"/> class.
            </summary>
            <param name="namespace">The namespace.</param>
            <param name="name">The property name.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.UserProp.Namespace">
            <summary>
            Gets the property namespace.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.UserProp.Name">
            <summary>
            Gets the property name.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Metadata.UserProp.Value">
            <summary>
            Gets the property value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Metadata.UserProp.Create(System.String,System.String,System.String)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Metadata.UserProp"/> object without any checks.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.OperatorList">
            <summary>
            The collection of <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorBase"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.GetOperator(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.OperatorList@,System.Int32@)">
            <summary>
            Fetches the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> and the index in it for a specified PDF operator position.
            </summary>
            <param name="pop">The PDF operator position.</param>
            <param name="ol">OUT: The <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> containing operator with the specified index.</param>
            <param name="olIndex">OUT: The index in <paramref name="ol"/>.</param>
            <returns><see langword="true"/> if <paramref name="pop"/> defines a valid index and <paramref name="ol"/> and <paramref name="olIndex"/> contain valid values.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.GetOperator(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,GrapeCity.Documents.Pdf.Operators.OperatorList@,System.Int32@,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary@)">
            <summary>
            Fetches the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> and the index in it for a specified PDF operator position.
            </summary>
            <param name="pop">The PDF operator position.</param>
            <param name="rootResourceDictionary">The root resource dictionary.</param>
            <param name="ol">OUT: The <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> containing operator with the specified index.</param>
            <param name="olIndex">OUT: The index in <paramref name="ol"/>.</param>
            <param name="rd">OUT: The active resource dictionary for the operator.</param>
            <returns><see langword="true"/> if <paramref name="pop"/> defines a valid index and <paramref name="ol"/> and <paramref name="olIndex"/> contain valid values.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Flat">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object containing all operators of this <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/>
            including nested operators of <see cref="T:GrapeCity.Documents.Pdf.Operators.DoFormXObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator,System.Numerics.Matrix3x2,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode,GrapeCity.Documents.Pdf.Layers.ViewState,System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from specified <see cref="T:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode,System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from page's content stream.
            The page bounds calculated using <see cref="M:GrapeCity.Documents.Pdf.Page.GetRenderSize(System.Single,System.Single)"/> method.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="viewState">The document view state.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="errorHandlingMode">Indicates how to handle errors in content stream.</param>
            <param name="includeTextPosition">Indicates whether to include information about position of text in content stream into PDF operators.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Enumerate(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Operators.OperatorBase},System.Func{GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.OperatorBase,System.Boolean})">
            <summary>
            Enumerates the list of operators, calls the <paramref name="callbackMethod"/> method for each
            operator.
            </summary>
            <param name="operators">The list of operators to enumerate.</param>
            <param name="callbackMethod">The callback method.</param>
            <returns>true if all operators were enumerated; false if callback method returns false for some operator.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from page's content stream.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <param name="includeTextPosition">Indicates whether to include information about position of text in content stream into PDF operators.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from page's content stream.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,System.Single,System.Single,System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from page's content stream.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Page,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from page's content stream.
            The page bounds calculated using <see cref="M:GrapeCity.Documents.Pdf.Page.GetRenderSize(System.Single,System.Single)"/> method.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <param name="includeTextPosition">Indicates whether to include information about position of text in content stream into PDF operators.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Build(GrapeCity.Documents.Pdf.Page,System.Single,System.Single,System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object from page's content stream.
            The page bounds calculated using <see cref="M:GrapeCity.Documents.Pdf.Page.GetRenderSize(System.Single,System.Single)"/> method.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.WriteOperators(System.Collections.Generic.IEnumerable{GrapeCity.Documents.Pdf.Operators.OperatorBase},System.IO.Stream,GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder.Operators">
            <summary>
            The list of operators to build.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._currentPathOperators">
            <summary>
            The list of operators forming current path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._markedContentOperatorsStack">
            <summary>
            The stack of <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent"/> operators.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._beginCompatibilitySectionOperatorsStack">
            <summary>
            The stack of <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection"/> operators.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._formXObjectsStack">
            <summary>
            The stack of <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._currentGraphicsStateUsedByOperator">
            <summary>
            Indicates whether the CurrentGraphicsState is used by visual operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder._includeTextPosition">
            <summary>
            Indicates whether to include text position information into PDF operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder.AddOperator(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <summary>
            Adds <paramref name="op"/> to the <see cref="F:GrapeCity.Documents.Pdf.Operators.OperatorList.Builder.Operators"/>,
            current <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent"/>, current <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.OperatorBase">
            <summary>
            Base abstract class representing PDF operator.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.OperatorBase.Name">
            <summary>
            Gets the operator's PDF name.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.OperatorBase.Desc">
            <summary>
            Gets the operator's description.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorBase.WriteOperands(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter)">
            <summary>
            Writes operator's operands to the content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorBase.Write(GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter)">
            <summary>
            Writes the operator to the content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorBase.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <summary>
            Determines whether the provided operator is the same as the current operator.
            </summary>
            <param name="other">A <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorBase"/> object.</param>
            <returns>true if the provided operator is the same as the current operator; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.OperatorBase.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase,GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <summary>
            Determines whether the specified <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorBase"/> instances are considered same,
            if both v1 and v2 are null, the method returns true.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.IVisualOperator">
            <summary>
            PDF operators implementing this interface render something.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.IVisualOperator.GetBounds">
            <summary>
            Returns the operator's bounds on the page.
            Note! Method can return a null if bounds can't be determined, it is possible
            if operator's operands are incorrect.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SaveGraphicsState">
            <summary>
            PDF "q" operator.
            Save the current graphics state on the graphics state stack.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SaveGraphicsState.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SaveGraphicsState"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SaveGraphicsState.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SaveGraphicsState.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.RestoreGraphicsState">
            <summary>
            PDF "Q" operator.
            Restore the graphics state by removing the most recently
            saved state from the stack and making it the current state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.RestoreGraphicsState.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.RestoreGraphicsState"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.RestoreGraphicsState.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.RestoreGraphicsState.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix">
            <summary>
            PDF "cm" operator.
            Modify the current transformation matrix (CTM) by concatenating the specified matrix.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.Matrix">
            <summary>
            Matrix argument of the operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.#ctor(System.Numerics.Matrix3x2)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix"/> class.
            </summary>
            <param name="matrix">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.Matrix"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ModifyTransformationMatrix.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetLineWidth">
            <summary>
            PDF "w" operator.
            Set the line width in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetLineWidth.LineWidth">
            <summary>
            The line width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineWidth.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineWidth"/> class.
            </summary>
            <param name="lineWidth">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineWidth.LineWidth"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineWidth.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineWidth.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineWidth.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle">
            <summary>
            PDF "J" operator.
            Set the line cap style in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.LineCap">
            <summary>
            The line cap style.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.#ctor(GrapeCity.Documents.Pdf.LineCapStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle"/> class.
            </summary>
            <param name="lineCap">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.LineCap"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle"/> class.
            </summary>
            <param name="lineCap">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.LineCap"/> as it specified in PDF content stream.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineCapStyle.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle">
            <summary>
            PDF "j" operator.
            Set the line join style in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.LineJoin">
            <summary>
            The line join style.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.#ctor(GrapeCity.Documents.Pdf.LineJoinStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle"/> class.
            </summary>
            <param name="lineJoin">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.LineJoin"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle"/> class.
            </summary>
            <param name="lineJoin">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.LineJoin"/> as it specified in PDF content stream.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineJoinStyle.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetMiterLimit">
            <summary>
            PDF "M" operator.
            Set the miter limit in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.MiterLimit">
            <summary>
            The miter limit.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetMiterLimit"/> class.
            </summary>
            <param name="miterLimit">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.MiterLimit"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetMiterLimit.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern">
            <summary>
            PDF "d" operator.
            Set the line dash pattern in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.DashPhase">
            <summary>
            The dash phase.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.DashPattern">
            <summary>
            The dash pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.#ctor(System.Single,System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern"/> class.
            </summary>
            <param name="dashPhase">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.DashPhase"/>.</param>
            <param name="dashPattern">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.DashPattern"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetLineDashPattern.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent">
            <summary>
            PDF "ri" operator.
            Set the colour rendering intent in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.Intent">
            <summary>
            The rendering intent.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.#ctor(GrapeCity.Documents.Pdf.RenderingIntent)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent"/> class.
            </summary>
            <param name="intent">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.Intent"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetRenderingIntent.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance">
            <summary>
            PDF "i" operator.
            Set the flatness tolerance in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.Flatness">
            <summary>
            The flatness tolerance.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance"/> class.
            </summary>
            <param name="flatness">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.Flatness"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetFlatnessTolerance.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetGraphicsState">
            <summary>
            PDF "gs" operator.
            Set the specified parameters in the graphics state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.DictName">
            <summary>
            The name of graphics state parameters dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.Dict">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetGraphicsState"/> class.
            </summary>
            <param name="dictName">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.DictName"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetGraphicsState"/> class.
            </summary>
            <param name="dictName">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.DictName"/>.</param>
            <param name="dict">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.Dict"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetGraphicsState.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MoveTo">
            <summary>
            PDF "m" operator.
            Begin a new subpath by moving the current point to coordinates (x, y),
            omitting any connecting line segment. If the previous path construction
            operator in the current path was also m, the new m overrides it;
            no vestige of the previous m operation remains in the path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveTo.X">
            <summary>
            The X coordinate of point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveTo.Y">
            <summary>
            The Y coordinate of point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveTo.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MoveTo"/> class.
            </summary>
            <param name="x">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveTo.X"/>.</param>
            <param name="y">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveTo.Y"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveTo.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveTo.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveTo.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.LineTo">
            <summary>
            PDF "l" operator.
            Append a straight line segment from the current point to the point (x, y).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.LineTo.X">
            <summary>
            The X coordinate of point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.LineTo.Y">
            <summary>
            The Y coordinate of point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.LineTo.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.LineTo"/> class.
            </summary>
            <param name="x">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.LineTo.X"/>.</param>
            <param name="y">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.LineTo.Y"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.LineTo.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.LineTo.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.LineTo.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1">
            <summary>
            PDF "c" operator.
            Append a cubic Bezier curve to the current path.
            The curve shall extend from the current point to the point (x3, y3), using (x1, y1 ) and (x2, y2 )
            as the Bezier control points.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X1">
            <summary>
            The X coordinate of point 1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y1">
            <summary>
            The Y coordinate of point 1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X2">
            <summary>
            The X coordinate of point 2.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y2">
            <summary>
            The Y coordinate of point 2.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X3">
            <summary>
            The X coordinate of point 3.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y3">
            <summary>
            The Y coordinate of point 3.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1"/> class.
            </summary>
            <param name="x1">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X1"/>.</param>
            <param name="y1">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y1"/>.</param>
            <param name="x2">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X2"/>.</param>
            <param name="y2">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y2"/>.</param>
            <param name="x3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.X3"/>.</param>
            <param name="y3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Y3"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2">
            <summary>
            PDF "v" operator.
            Append a cubic Bezier curve to the current path.
            The curve shall extend from the current point to the point (x3, y3),
            using the current point and (x2, y2) as the Bezier control points.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.X2">
            <summary>
            The X coordinate of point 2.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Y2">
            <summary>
            The Y coordinate of point 2.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.X3">
            <summary>
            The X coordinate of point 3.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Y3">
            <summary>
            The Y coordinate of point 3.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2"/> class.
            </summary>
            <param name="x2">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.X2"/>.</param>
            <param name="y2">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Y2"/>.</param>
            <param name="x3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.X3"/>.</param>
            <param name="y3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Y3"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo2.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3">
            <summary>
            PDF "y" operator.
            Append a cubic Bezier curve to the current path.
            The curve shall extend from the current point to the point (x3, y3 ),
            using (x1, y1 ) and (x3, y3 ) as the Bezier control points.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.X1">
            <summary>
            The X coordinate of point 1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Y1">
            <summary>
            The Y coordinate of point 1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.X3">
            <summary>
            The X coordinate of point 3.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Y3">
            <summary>
            The Y coordinate of point 3.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.CubicBezierTo1"/> class.
            </summary>
            <param name="x1">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.X1"/>.</param>
            <param name="y1">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Y1"/>.</param>
            <param name="x3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.X3"/>.</param>
            <param name="y3">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Y3"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.CubicBezierTo3.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CloseSubPath">
            <summary>
            PDF "h" operator.
            Close the current subpath by appending a straight line segment from the current point to the starting point of the subpath.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.CloseSubPath.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.CloseSubPath"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseSubPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseSubPath.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.AddRect">
            <summary>
            PDF "re" operator.
            Append a rectangle to the current path as a complete subpath.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.AddRect.Rect">
            <summary>
            The rectangle.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.AddRect.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.AddRect"/> class.
            </summary>
            <param name="rect">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.AddRect.Rect"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.AddRect.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.AddRect.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.AddRect.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.PathOperator">
            <summary>
            Base abstract class for operators performing something on the current path: stroke, fill etc.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.PathOperator.Operators">
            <summary>
            The array of operators forming the path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.PathOperator.Path">
            <summary>
            The path object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.PathOperator.GraphicsState">
            <summary>
            The current graphics state.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.PathOperator.PathMatrix">
            <summary>
            The matrix used to render the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PathOperator.GetBounds">
            <summary>
            Returns the path's bounds.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.VisualPathOperator">
            <summary>
            Base abstract class for operators render a path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.VisualPathOperator.IsTilePatternUsed">
            <summary>
            Gets the value indicating whether the path uses Tile pattern.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.StrokePath">
            <summary>
            PDF "S" operator.
            Stroke the path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.StrokePath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.StrokePath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.StrokePath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CloseStrokePath">
            <summary>
            PDF "s" operator.
            Close and stroke the path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseStrokePath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseStrokePath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseStrokePath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.FillNonZeroWindingPath">
            <summary>
            PDF "f" operator.
            Fill the path, using the nonzero winding number rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillNonZeroWindingPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillNonZeroWindingPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillNonZeroWindingPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.FillEvenOddPath">
            <summary>
            PDF "f*" operator.
            Fill the path, using the even-odd rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillEvenOddPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillEvenOddPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillEvenOddPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.FillStrokeNonZeroWindingPath">
            <summary>
            PDF "B" operator.
            Fill and then stroke the path, using the nonzero winding number rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeNonZeroWindingPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeNonZeroWindingPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeNonZeroWindingPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.FillStrokeEvenOddPath">
            <summary>
            PDF "B*" operator.
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeEvenOddPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeEvenOddPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.FillStrokeEvenOddPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeNonZeroWindingPath">
            <summary>
            PDF "b" operator.
            Close, fill and then stroke the path, using the nonzero winding number rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeNonZeroWindingPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeNonZeroWindingPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeNonZeroWindingPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeEvenOddPath">
            <summary>
            PDF "b*" operator.
            Close, fill and then stroke the path, using the even-odd rule to determine the region to fill.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeEvenOddPath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeEvenOddPath.Desc">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.CloseFillStrokeEvenOddPath.IsTilePatternUsed">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ClosePath">
            <summary>
            PDF "n" operator.
            End the path object without filling or stroking it.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ClosePath.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ClosePath.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetClippingPathNonZeroWinding">
            <summary>
            PDF "W" operator.
            Modify the current clipping path by intersecting it with the current path,
            using the nonzero winding number rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetClippingPathNonZeroWinding.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetClippingPathNonZeroWinding.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetClippingPathEvenOdd">
            <summary>
            PDF "W*" operator.
            Modify the current clipping path by intersecting it with the current path,
            using the even-odd rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetClippingPathEvenOdd.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetClippingPathEvenOdd.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.BeginText">
            <summary>
            PDF "BT" operator.
            Begin a text object, initializing the text matrix, Tm , and the text line matrix, Tlm,
            to the identity matrix. Text objects cannot be nested; a second BT cannot appear before an ET.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginText.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginText"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginText.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginText.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.EndText">
            <summary>
            PDF "ET" operator.
            End a text object, discarding the text matrix.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.EndText.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.EndText"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndText.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndText.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing">
            <summary>
            PDF "Tc" operator.
            Set the character spacing. Character spacing is used by the Tj, TJ, and ' operators.
            Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.CharacterSpacing">
            <summary>
            The character spacing value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing"/> class.
            </summary>
            <param name="characterSpacing">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.CharacterSpacing"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetCharacterSpacing.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetWordSpacing">
            <summary>
            PDF "Tw" operator.
            Set the word spacing. Word spacing is used by the Tj, TJ, and ' operators.
            Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.WordSpacing">
            <summary>
            The word spacing value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetWordSpacing"/> class.
            </summary>
            <param name="wordSpacing">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.WordSpacing"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetWordSpacing.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling">
            <summary>
            PDF "Tz" operator.
            Set the horizontal scaling, to (scale / 100). Value is a number specifying
            the percentage of the normal width. Initial value: 100 (normal width).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.Scale">
            <summary>
            The horizontal scaling value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling"/> class.
            </summary>
            <param name="scale">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.Scale"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextHorizontalScaling.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextLeading">
            <summary>
            PDF "TL" operator.
            Set the text leading, to leading, which is a number expressed in unscaled text space units.
            Text leading is used only by the T*, ', and " operators. Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextLeading.TextLeading">
            <summary>
            The text leading value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextLeading.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextLeading"/> class.
            </summary>
            <param name="textLeading">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextLeading.TextLeading"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextLeading.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextLeading.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextLeading.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize">
            <summary>
            PDF "Tf" operator.
            Set the text font and size.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.Font">
            <summary>
            The font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.FontName">
            <summary>
            The font resource name.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.FontSize">
            <summary>
            The font size.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.#ctor(GrapeCity.Documents.Pdf.Text.Font,GrapeCity.Documents.Pdf.Spec.PdfName,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize"/> class.
            </summary>
            <param name="font">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.Font"/>.</param>
            <param name="fontName">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.FontName"/>.</param>
            <param name="fontSize">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.FontSize"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextFontAndSize.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode">
            <summary>
            PDF "Tr" operator.
            Set the text rendering mode. Initial value: <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.Fill"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.TextRenderingMode">
            <summary>
            The text rendering mode.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode"/> class.
            </summary>
            <param name="textRenderingMode">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.TextRenderingMode"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextRenderingMode.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextRise">
            <summary>
            PDF "Ts" operator.
            Set the text rise, to rise, which is a number expressed in unscaled text space units.
            Initial value: 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextRise.TextRise">
            <summary>
            The text rise value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextRise.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextRise"/> class.
            </summary>
            <param name="textRise">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextRise.TextRise"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextRise.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextRise.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextRise.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MoveToNextLine">
            <summary>
            PDF "Td" operator.
            Move to the start of the next line, offset from the start of the current line by (tx, ty).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Tx">
            <summary>
            The X offset.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Ty">
            <summary>
            The Y offset.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MoveToNextLine"/> class.
            </summary>
            <param name="tx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Tx"/>.</param>
            <param name="ty">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Ty"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveToNextLine.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading">
            <summary>
            PDF "TD" operator.
            Move to the start of the next line, offset from the start of the current line by (tx, ty).
            As a side effect, this operator sets the leading parameter in the text state.
            This operator has the same effect as the following code:
            −ty TL
            tx ty Td
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Tx">
            <summary>
            The X offset.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Ty">
            <summary>
            The Y offset.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading"/> class.
            </summary>
            <param name="tx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Tx"/>.</param>
            <param name="ty">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Ty"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MoveToNextLineUpdateLeading.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetTextMatrix">
            <summary>
            PDF "Tm" operator.
            Set the text matrix and the text line matrix.
            The matrix specified by the operands is not concatenated onto the current text matrix, but replaces it.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.Matrix">
            <summary>
            The text matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.#ctor(System.Numerics.Matrix3x2)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetTextMatrix"/> class.
            </summary>
            <param name="matrix">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.Matrix"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetTextMatrix.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MoveToStartNextLine">
            <summary>
            PDF "T*" operator.
            Move to the start of the next line. This operator has the same effect as the code
              0 Tl Td
            where Tl is the current leading parameter in the text state.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MoveToStartNextLine.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MoveToStartNextLine"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToStartNextLine.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MoveToStartNextLine.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition">
            <summary>
            Represents the position of an operator in a content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Empty">
            <summary>
            The empty position;
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Index">
            <summary>
            The index in a content stream.
            In most cases the <see cref="F:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Index"/> will have one element, the position of the
            operator in the page (the "root") content stream.
            If the operator is in the content stream of form XObject used in the page content stream
            then <see cref="F:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Index"/> will contain 2 elements:
            0 - index of "Do" operator used to render form XObject in the page content stream
            1 - index of the operator in the form XObject content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.IsSameContentStreamWith(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition)">
            <summary>
            Checks whether a specified <see cref="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition"/> points to the same content stream as
            current <see cref="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition"/>.
            </summary>
            <param name="other">The <see cref="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition"/> to check.</param>
            <returns>true if <paramref name="other"/> points to the same content stream; false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Clone">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Inc(System.Int32)">
            <summary>
            Increments the index on specified value.
            </summary>
            <param name="value">The increment value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Inc(System.Int32,System.Int32)">
            <summary>
            Increments the index on specified value.
            </summary>
            <param name="value">The increment value.</param>
            <param name="level">The index to increment.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Inc">
            <summary>
            Increments the index.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Equals(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition)">
            <summary>
            Determines whether two <see cref="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition"/> instances are equal.
            </summary>
            <param name="other">The <see cref="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition"/> to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Push">
            <summary>
            Starts new level.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Pop">
            <summary>
            Ends level.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.IsEmpty">
            <summary>
            Gets a value indicating whether this position is empty.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Length">
            <summary>
            Gets the length of <see cref="F:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Index"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Compare(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition)">
            <summary>
            Compares two <see cref="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.TryParse(System.String,GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition@)">
            <summary>
            Tries to parse the <see cref="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition"/> from the string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.Create(System.Int32)">
            <summary>
            Create the <see cref="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition"/> with index of specified length.
            </summary>
            <param name="length">The index length.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition"/> structure.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.op_Equality(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition)">
            <summary>
            The equality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.op_Inequality(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition)">
            <summary>
            The inequality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.op_GreaterThanOrEqual(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition)">
            <summary>
            Greater or equal than operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.op_GreaterThan(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition)">
            <summary>
            Greater than operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.op_LessThanOrEqual(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition)">
            <summary>
            Less or equal than operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition.op_LessThan(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition)">
            <summary>
            Less than operator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowTextBase">
            <summary>
            Base abstract class for PDF operators showing text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.Font.TextBlock"/> object describing text to show.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.#ctor(GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowTextBase"/> class.
            </summary>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <paramref name="graphicsState"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GetTxTy(System.Int32,System.Int32,System.Single@,System.Single@)">
            <summary>
            Calculates tx and ty for a fragment of the operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GetPdfArray">
            <summary>
            Gets the content of this operator as <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GetBounds">
            <summary>
            Returns the text's bounds.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GetText">
            <summary>
            Returns the operator text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GetTextMapBoundsR">
            <summary>
            Calculates the operator position on the text map.
            The position includes rectangle of whole operator and rectangles of each <see cref="T:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem"/>.
            Note! Code based on <see cref="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.ProcessTextBlock(GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,System.Numerics.Matrix3x2,System.Drawing.RectangleF,System.Int32,GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions)"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextMapBoundsR">
            <summary>
            Represents the bounds of <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowTextBase"/> operator on a text map in
            "recognition" coordinate space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowTextPdfString">
            <summary>
            Base abstract class for PDF operators showing text using a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowTextPdfString.Text">
            <summary>
            The operator text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextPdfString.#ctor(GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowText"/> class.
            </summary>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState"/>.</param>
            <param name="text">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextPdfString.Text"/>.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowText">
            <summary>
            PDF "Tj" operator.
            Show a text string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText.#ctor(GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowText"/> class.
            </summary>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState"/>.</param>
            <param name="text">The value of <see cref="N:GrapeCity.Documents.Pdf.Text"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowText1">
            <summary>
            PDF "'" operator.
            Move to the next line and show a text string.
            Has same effect as: T* (str) Tj
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText1.#ctor(GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowText1"/> class.
            </summary>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState"/>.</param>
            <param name="text">The value of <see cref="N:GrapeCity.Documents.Pdf.Text"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText1.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText1.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowText2">
            <summary>
            PDF """ operator.
            Move to the next line and show a text string, using aw as the word spacing and ac as
            the character spacing (setting the corresponding parameters in the text state).
            aw and ac are numbers expressed in unscaled text space units.
            This operator has the same effect as the following code:
              WordSpacing Tw
              CharSpacing Tc
              str '
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowText2.WordSpacing">
            <summary>
            The word spacing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowText2.CharSpacing">
            <summary>
            The char spacing.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText2.#ctor(System.Single,System.Single,GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowText2"/> class.
            </summary>
            <param name="wordSpacing">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowText2.WordSpacing"/>.</param>
            <param name="charSpacing">the value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowText2.CharSpacing"/>.</param>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState"/>.</param>
            <param name="text">The value of <see cref="N:GrapeCity.Documents.Pdf.Text"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText2.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowText2.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowText2.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning">
            <summary>
            PDF "TJ" operator.
            Show one or more text strings, allowing individual glyph positioning.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.Text">
            <summary>
            The operator text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.#ctor(GrapeCity.Documents.Pdf.Text.Font.TextBlock,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Spec.PdfArray)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning"/> class.
            </summary>
            <param name="textBlock">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.GraphicsState"/>.</param>
            <param name="text">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.Text"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.ShowTextGlyphPositioning.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorSpace">
            <summary>
            Base abstract class for operators defining color space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetColorSpace.ColorSpaceName">
            <summary>
            The color space name.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetColorSpace.ColorSpace">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/> object defining new color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetColorSpace.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetColorSpace"/> class.
            </summary>
            <param name="colorSpaceName">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetColorSpace.ColorSpaceName"/>.</param>
            <param name="colorSpace">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetColorSpace.ColorSpace"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetColorSpace.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorSpaceStroking">
            <summary>
            PDF "CS" operator.
            Set the current color space to use for stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorSpaceStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorSpaceStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorSpaceNonStroking">
            <summary>
            PDF "cs" operator.
            Same as <see cref="T:GrapeCity.Documents.Pdf.Operators.SetColorSpaceStroking"/> but used for nonstroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorSpaceNonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorSpaceNonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColor">
            <summary>
            Base abstract class for operators defining color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.SetColor.Color">
            <summary>
            The new color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetColor.#ctor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.SetColor"/> class.
            </summary>
            <param name="color">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.SetColor.Color"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.SetColor.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColor1Stroking">
            <summary>
            PDF "SC" operator.
            Set the color to use for stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor1Stroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor1Stroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColor1NonStroking">
            <summary>
            PDF "sc" operator.
            Set the color to use for non stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor1NonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor1NonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColor2Stroking">
            <summary>
            PDF "SCN" operator.
            Set the color to use for stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor2Stroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor2Stroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColor2NonStroking">
            <summary>
            PDF "scn" operator.
            Set the color to use for non stroking operations.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor2NonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColor2NonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorGrayStroking">
            <summary>
            PDF "G" operator.
            Set the stroking color space to DeviceGray and current stroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorGrayStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorGrayStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorGrayNonStroking">
            <summary>
            PDF "g" operator.
            Set the nonstroking color space to DeviceGray and current nonstroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorGrayNonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorGrayNonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorRGBStroking">
            <summary>
            PDF "RG" operator.
            Set the stroking color space to DeviceRGB and current stroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorRGBStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorRGBStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorRGBNonStroking">
            <summary>
            PDF "rg" operator.
            Set the nonstroking color space to DeviceRGB and current nonstroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorRGBNonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorRGBNonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorCMYKStroking">
            <summary>
            PDF "K" operator.
            Set the stroking color space to DeviceCMYK and current stroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorCMYKStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorCMYKStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.SetColorCMYKNonStroking">
            <summary>
            PDF "k" operator.
            Set the nonstroking color space to DeviceCMYK and current nonstroke color to specified value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorCMYKNonStroking.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.SetColorCMYKNonStroking.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.Type3SetWidth">
            <summary>
            PDF "d0" operator.
            Set width information for the glyph and declare that the glyph description specifies both its shape and its color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Wx">
            <summary>
            The horizontal displacement in the glyph coordinate system.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Wy">
            <summary>
            The vertical displacement in the glyph coordinate system.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.Type3SetWidth"/> class.
            </summary>
            <param name="wx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Wx"/>.</param>
            <param name="wy">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Wy"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.Type3SetWidth.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox">
            <summary>
            PDF "d1" operator.
            Set width information for the glyph and declare that the glyph description specifies both its shape and its color.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Wx">
            <summary>
            The horizontal displacement in the glyph coordinate system.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Wy">
            <summary>
            The vertical displacement in the glyph coordinate system.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.LLX">
            <summary>
            The X coordinate of the lower-left corner.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.LLY">
            <summary>
            The Y coordinate of the lower-left corner.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.URX">
            <summary>
            The X coordinate of the upper-right corner.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.URY">
            <summary>
            The Y coordinate of the upper-right corner.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox"/> class.
            </summary>
            <param name="wx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Wx"/>.</param>
            <param name="wy">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Wy"/>.</param>
            <param name="llx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.LLX"/>.</param>
            <param name="lly">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.LLY"/>.</param>
            <param name="urx">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.URX"/>.</param>
            <param name="ury">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.URY"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.Type3SetWidthAndBoundingBox.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.InlineImage">
            <summary>
            PDF "BI" and "EI" operators.
            Draw inline image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.InlineImage.Image">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage"/> object defining image to draw.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.InlineImage.GraphicsState">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState"/> object defining the graphics state when this
            operator executed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.InlineImage.#ctor(GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.InlineImage"/> class.
            </summary>
            <param name="image">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.InlineImage.Image"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.InlineImage.GraphicsState"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.InlineImage.Matrix">
            <summary>
            Gets the GraphicsState.Matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.InlineImage.TryGetNonstrokeColor(System.Drawing.Color@)">
            <summary>
            Tries to interpret the non-stroke color of graphics state used by this operator
            as simple <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.InlineImage.GetBounds">
            <summary>
            Returns the image's bounds.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.InlineImage.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.InlineImage.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.InlineImage.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.DrawShading">
            <summary>
            PDF "sh" operator.
            Paint the shape and color shading described by a shading dictionary,
            subject to the current clipping path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DrawShading.ShadingName">
            <summary>
            The name of the shading.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DrawShading.Shading">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.Operators.DrawShading.Shading"/> object to draw.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DrawShading.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.Shadings.Shading)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.DrawShading"/> class.
            </summary>
            <param name="shadingName">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DrawShading.ShadingName"/>.</param>
            <param name="shading">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DrawShading.Shading"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DrawShading.GetBounds">
            <summary>
            Returns the operator's bounds.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DrawShading.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DrawShading.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DrawShading.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.DoXObject">
            <summary>
            PDF "Do" operator.
            Base class for DoFormXObject and DoImage.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoXObject.XObjectName">
            <summary>
            The name of the external object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoXObject.GraphicsState">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState"/> object defining the graphics state when this
            operator executed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoXObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.DoXObject"/> class.
            </summary>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.XObjectName"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.GraphicsState"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoXObject.TryGetNonstrokeColor(System.Drawing.Color@)">
            <summary>
            Tries to interpret the non-stroke color of graphics state used by this operator
            as simple <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoXObject.Matrix">
            <summary>
            Gets the GraphicsState.Matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoXObject.GetBounds">
            <summary>
            Returns the bounds of <see cref="T:GrapeCity.Documents.Pdf.Graphics.IXObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoXObject.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoXObject.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoXObject.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.DoFormXObject">
            <summary>
            PDF "Do" operator.
            Draws an <see cref="F:GrapeCity.Documents.Pdf.Operators.DoFormXObject.FormXObject"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoFormXObject.FormXObject">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> object to draw.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoFormXObject.Operators">
            <summary>
            The list of operators of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoFormXObject.FormXObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoFormXObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Graphics.FormXObject)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.DoFormXObject"/> class.
            </summary>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.XObjectName"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.GraphicsState"/>.</param>
            <param name="formXObject">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoFormXObject.FormXObject"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoFormXObject.GetBounds">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoFormXObject.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.DoImage">
            <summary>
            PDF "Do" operator.
            Draws an <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoImage.Image">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImage"/> object to draw.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImage.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.DoImage"/> class.
            </summary>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.XObjectName"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.GraphicsState"/>.</param>
            <param name="image">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoImage.Image"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImage.GetBoundsEx">
            <summary>
            Returns the operator's bounds on the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImage.GetBounds">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoImage.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.DoImageWrapper">
            <summary>
            PDF "Do" operator.
            Draws an <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.Image">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler"/> object to draw.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState,GrapeCity.Documents.Pdf.Graphics.Images.PdfImageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.DoImage"/> class.
            </summary>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.XObjectName"/>.</param>
            <param name="graphicsState">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoXObject.GraphicsState"/>.</param>
            <param name="image">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.Image"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.GetBounds">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.DoImageWrapper.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint">
            <summary>
            PDF "MP" operator.
            Designate a marked-content point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.Role">
            <summary>
            Indicating the role or significance of the point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint"/> class.
            </summary>
            <param name="role">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.Role"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams">
            <summary>
            PDF "DP" operator.
            Designate a marked-content point with an associated property list.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.Dict">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> containing the properties list.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.DictName">
            <summary>
            The name of the dictionary in the resources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams"/> class.
            </summary>
            <param name="role">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPoint.Role"/>.</param>
            <param name="dict">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.Dict"/>.</param>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.DictName"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.MarkedContentPointWithParams.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent">
            <summary>
            PDF "BMC" operator.
            Begin a marked-content sequence terminated by a balancing <see cref="T:GrapeCity.Documents.Pdf.Operators.EndMarkedContent"/> operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Role">
            <summary>
            Indicating the role or significance of the sequence.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Operators">
            <summary>
            The list of operators between BMC and EMC.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent"/> class.
            </summary>
            <param name="role">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Role"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams">
            <summary>
            PDF "BDC" operator.
            Begin a marked-content sequence terminated by a balancing <see cref="T:GrapeCity.Documents.Pdf.Operators.EndMarkedContent"/> operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Dict">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> containing the properties list.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.DictName">
            <summary>
            The name of the dictionary in the resources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams"/> class.
            </summary>
            <param name="role">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Role"/>.</param>
            <param name="dict">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Dict"/>.</param>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.DictName"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.BeginLayer">
            <summary>
            PDF "BDC" operator.
            Begin a PDF layer.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginLayer.Layer">
            <summary>
            The PDF layer, maybe <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginLayer.Active">
            <summary>
            Indicates whether the <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginLayer.Layer"/> was active.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginLayer.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams"/> class.
            </summary>
            <param name="role">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent.Role"/>.</param>
            <param name="dict">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Dict"/>.</param>
            <param name="name">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.DictName"/>.</param>
            <param name="layer">The layer <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> or <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentMembership"/>.</param>
            <param name="active">Indicates whether layer was active.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginLayer.Desc">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.BeginLayer.IsSame(GrapeCity.Documents.Pdf.Operators.OperatorBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.EndMarkedContent">
            <summary>
            PDF "EMC" operator.
            End a marked-content sequence begun by a <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent"/> or
            <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams"/> operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.EndMarkedContent.BeginMarkedContent">
            <summary>
            The balanced <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginMarkedContent"/> operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.EndMarkedContent.#ctor(GrapeCity.Documents.Pdf.Operators.BeginMarkedContent)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.EndMarkedContent"/> class.
            </summary>
            <param name="beginMarkedContent">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.EndMarkedContent.BeginMarkedContent"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndMarkedContent.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndMarkedContent.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection">
            <summary>
            PDF "BX" operator.
            Begin a compatibility section. Unrecognized operators (along with their operands)
            shall be ignored without error until the balancing EX operator is encountered.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection.Operators">
            <summary>
            The list of operators between BX and EX.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection">
            <summary>
            PDF "EX" operator.
            End a compatibility section begun by a balancing BX operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection.BeginCompatibilitySection">
            <summary>
            The balancing <see cref="T:GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection.#ctor(GrapeCity.Documents.Pdf.Operators.BeginCompatibilitySection)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection"/> class.
            </summary>
            <param name="beginCompatibilitySection">The value of <see cref="F:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection.BeginCompatibilitySection"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection.Name">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Operators.EndCompatibilitySection.Desc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OutlineNodeCollection">
            <summary>
            Defines the collection of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNodeCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.DocumentOutlines">
            <summary>
            The document outlines, see PDF 2.0 page 442.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentOutlines.SetDocID(System.Int32)">
            <summary>
            Called from <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.BeforeSave"/>, before <see cref="M:GrapeCity.Documents.Pdf.DocumentOutlines.BeforeSave"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.DocumentOutlines.BeforeSave">
            <summary>
            Called from <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.BeforeSave"/>, after <see cref="M:GrapeCity.Documents.Pdf.DocumentOutlines.SetDocID(System.Int32)"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OutlineNode">
            <summary>
            Defines the outline node within PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutlineNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutlineNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> class.
            </summary>
            <param name="title">The title of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutlineNode.#ctor(System.String,GrapeCity.Documents.Pdf.DestinationBase,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> class.
            </summary>
            <param name="title">The title of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.</param>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> to be activated when this <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> clicked.</param>
            <param name="expanded">The initial expanded state of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutlineNode.#ctor(System.String,GrapeCity.Documents.Pdf.Actions.ActionBase,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> class.
            </summary>
            <param name="title">The title of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.</param>
            <param name="action">The <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> to be activated when this <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> clicked.</param>
            <param name="expanded">The initial expanded state of <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.OutlineNodeCollection"/> collection containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Parent">
            <summary>
            Gets the parent <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Title">
            <summary>
            Gets or sets the title of the outline node.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.TextColor">
            <summary>
            Gets or sets the text color of the outline node.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.TextStyle">
            <summary>
            Gets or sets the text style of the outline node.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Dest">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.DestinationBase"/> to be displayed when this <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> is activated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Action">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> to be performed when this <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> is activated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Expanded">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.OutlineNode"/> expanded and its child nodes are visible.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.Children">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.OutlineNodeCollection"/> collection containing child nodes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutlineNode.HasChildren">
            <summary>
            Gets a value indicating whether <see cref="P:GrapeCity.Documents.Pdf.OutlineNode.Children"/> collection is not empty.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OutlineNode.FontStyle">
            <summary>
            Defines possible styles of outline text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineNode.FontStyle.Regular">
            <summary>
            Regular.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineNode.FontStyle.Italic">
            <summary>
            Italic style.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutlineNode.FontStyle.Bold">
            <summary>
            Bold style.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.OutputIntent">
            <summary>
            Represents a PDF Output Intent.
            <para>
            Output intents provide a means for matching the color characteristics of page content
            in a PDF document with those of a target output device or production environment
            in which the document will be printed.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutputIntent.GTS_PDFX">
            <summary>
            The string representing the GTS_PDFX output intent subtype.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutputIntent.GTS_PDFA1">
            <summary>
            The string representing the GTS_PDFA1 output intent subtype.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.OutputIntent.ISO_PDFE1">
            <summary>
            The string representing the ISO_PDFE1 output intent subtype.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutputIntent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.OutputIntent"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.Subtype">
            <summary>
            Gets or sets the output intent subtype.
            <para>
            According to the PDF specification the value may be GTS_PDFX, GTS_PDFA1, ISO_PDFE1
            or a key defined by an ISO 32000 extension.
            GcPdf allows setting this property to any value, the user is responsible for
            the correctness of the data.
            </para>
            This value is "GTS_PDFA1" by default.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.OutputCondition">
            <summary>
            Gets or sets a string concisely identifying the intended output device or production condition
            in human-readable form.
            <para>
            This is the preferred method of defining such a string for presentation to the user.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.OutputConditionIdentifier">
            <summary>
            Gets or sets a string identifying the intended output device or production condition in
            human- or machine-readable form.
            <para>
            If human-readable, this string may be used in lieu of the <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.OutputCondition"/> string for presentation to the user.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.RegistryName">
            <summary>
            Gets or sets a string (conventionally a uniform resource identifier, or URI) identifying
            the registry in which the condition designated by <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.OutputConditionIdentifier"/> is defined.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.Info">
            <summary>
            Gets or sets a string containing additional information or comments about the intended target
            device or production condition.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.OutputIntent.DestOutputProfile">
            <summary>
            Gets or sets an <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ICCProfile"/> color space defining the transformation from the PDF document’s source colors
            to output device colorants.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.OutputIntent.Create(System.String,System.String,System.String,System.String,System.IO.Stream)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.OutputIntent"/> object with specified parameters.
            </summary>
            <param name="outputConditionIdentifier">The value of <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.OutputConditionIdentifier"/>.</param>
            <param name="outputCondition">The value of <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.OutputCondition"/>.</param>
            <param name="registryName">The value of <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.RegistryName"/>.</param>
            <param name="info">The value of <see cref="P:GrapeCity.Documents.Pdf.OutputIntent.Info"/>.</param>
            <param name="iccMetadata">The stream with ICC profile metadata.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.OutputIntent"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RootPages">
            <summary>
            Represents the root Pages object referenced from the document catalog.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RootPages.ReadPages(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.IPdfDict,System.Int32,System.Collections.Generic.HashSet{GrapeCity.Documents.Pdf.Spec.IPdfDict},System.Boolean@)">
            <summary>
            Loads the pages from specified Pages dictionary.
            Returns false if the number of pages already loaded has exceeded the <paramref name="maxPageCount"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RootPages.Init(GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Initializes the page tree from the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RootPages.BuildPagesTree(System.Boolean,GrapeCity.Documents.Pdf.Spec.IPdfDict[]@)">
            <summary>
            Initializes the new page tree.
            The method is called for new document (WasLoaded == false) or 
            if page collection was changed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RootPages.BeforeSaveNewDocument">
            <summary>
            Called for new document, when WasLoaded == false, it is often and simple case,
            it can be optimized.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RootPages.BeforeSaveChangedPages">
            <summary>
            Called when the page collection was changed, most complex case.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RootPages.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageCollection">
            <summary>
            A collection of <see cref="T:GrapeCity.Documents.Pdf.Page"/> objects that make up a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.ClearItems">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.InsertItem(System.Int32,GrapeCity.Documents.Pdf.Page)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.RemoveItem(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.SetItem(System.Int32,GrapeCity.Documents.Pdf.Page)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.ClonePage(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Clones a page at a specified index (<paramref name="sourceIndex"/>) and inserts it
            at a specified position (<paramref name="destinationIndex"/>).
            </summary>
            <param name="sourceIndex">The index of the page to clone.</param>
            <param name="destinationIndex">The destination index.</param>
            <param name="cloneAnnotations">Indicates whether to clone page annotations.</param>
            <param name="cloneFields">Indicates whether to clone fields existing on the source page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Swap(System.Int32,System.Int32)">
            <summary>
            Swaps two pages specified by their 0-based indices.
            </summary>
            <param name="index1">The index of the first page to swap.</param>
            <param name="index2">The index of the second page to swap.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves a page specified by its 0-based index to another position in the collection.
            </summary>
            <param name="curIndex">The current index of the page to move.</param>
            <param name="newIndex">The new index of the page.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Add">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Page"/> and adds it to the end of the document.
            </summary>
            <returns>The newly created page.</returns>
            <remarks>
            <para>The size of the new page is determined by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageSize"/>
            property of the parent document.</para>
            <para>You can also add pages to a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> by calling the
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.NewPage"/> method.</para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Add(System.Drawing.SizeF)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Page"/> with the specified size and adds it to
            the end of the document.
            </summary>
            <param name="pageSize">The size of the new page, in points.</param>
            <returns>The newly created page.</returns>
            <remarks>
            <para>You can also add pages to a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> by calling the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.NewPage"/> method.</para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Add(GrapeCity.Documents.Common.PaperKind)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Page"/> of the specified <see cref="T:GrapeCity.Documents.Common.PaperKind"/> and adds it to
            the end of the document.
            </summary>
            <param name="paperKind">The <see cref="T:GrapeCity.Documents.Common.PaperKind"/> determining the size of the new page.</param>
            <returns>The newly created page.</returns>
            <remarks>
            <para>You can also add pages to a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> by calling the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.NewPage"/> method.</para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Insert(System.Int32)">
            <summary>
            Creates a new page and inserts it at a specific position in the document.
            </summary>
            <param name="index">The position where the new page will be inserted.</param>
            <returns>The newly created page.</returns>
            <remarks>
            <para>The size of the new page is determined by the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.PageSize"/> property
            of the parent document.</para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Insert(System.Int32,System.Drawing.SizeF)">
            <summary>
            Creates a new page with the specified size and inserts it at a specific
            position in the document.
            </summary>
            <param name="index">The position where the new page will be inserted.</param>
            <param name="pageSize">The size of the new page, expressed in points.</param>
            <returns>The newly created page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageCollection.Insert(System.Int32,GrapeCity.Documents.Common.PaperKind)">
            <summary>
            Creates a new page with the specified size and inserts it at a specific
            position in the document.
            </summary>
            <param name="index">The position where the new page will be inserted.</param>
            <param name="paperKind">The size of the new page, expressed as a <see cref="T:GrapeCity.Documents.Common.PaperKind"/>.</param>
            <returns>The newly created page.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.PageCollection"/> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageCollection.Last">
            <summary>
            Gets the last page in the collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AnnotationsTabsOrder">
            <summary>
            Defines possible values for annotations tabs order.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.RowOrder">
            <summary>
            Row order.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.ColumnOrder">
            <summary>
            Column order.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.StructureOrder">
            <summary>
            Structure order.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.AnnotationsArrayOrder">
            <summary>
            <b>Annotations array order</b>.
            This order refers to the order of annotation in the
            <see cref="P:GrapeCity.Documents.Pdf.Page.Annotations"/> collection.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.WidgetOrder">
            <summary>
            <b>Widget order</b>.
            This order uses the same ordering as <see cref="F:GrapeCity.Documents.Pdf.AnnotationsTabsOrder.AnnotationsArrayOrder"/>,
            but two passes are made,
            the first only picking the widget annotations and the second picking all other annotations.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Page">
            <summary>
            Represents a page in a <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Parse(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object from <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>,
            called when loading the document from PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.EnumerateResourceDictionaries(System.Func{GrapeCity.Documents.Pdf.Graphics.ResourceDictionary,System.Boolean})">
            <summary>
            Enumerates the <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> objects referenced by this page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.EndPage(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Called in sequential mode (StartDoc / EndDoc).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.OnRemoved">
            <summary>
            Called when page removed from document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.ResourceDictionary">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/> used by this page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Create(System.Drawing.SizeF,GrapeCity.Documents.Common.PaperKind,System.Boolean)">
            <summary>
            Creates new <see cref="T:GrapeCity.Documents.Pdf.Page"/>, its <see cref="P:GrapeCity.Documents.Pdf.Page.ResourceDictionary"/>
            initialized with new instance of <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Create(System.Drawing.SizeF)">
            <summary>
            Creates new <see cref="T:GrapeCity.Documents.Pdf.Page"/>, its <see cref="P:GrapeCity.Documents.Pdf.Page.ResourceDictionary"/>
            initialized with new instance of <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Create(GrapeCity.Documents.Common.PaperKind)">
            <summary>
            Creates new <see cref="T:GrapeCity.Documents.Pdf.Page"/>, its <see cref="P:GrapeCity.Documents.Pdf.Page.ResourceDictionary"/>
            initialized with new instance of <see cref="T:GrapeCity.Documents.Pdf.Graphics.ResourceDictionary"/>.
            </summary>
            <param name="paperKind"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in PNG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in PNG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in PNG format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsPng(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in PNG format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in BMP format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in BMP format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in BMP format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsBmp(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in BMP format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in GIF format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in GIF format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in GIF format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsGif(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in GIF format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in JPEG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a stream in JPEG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in JPEG format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsJpeg(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page as an image to a file in JPEG format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the page as an image to a stream in TIFF format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frame.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the page as an image to a stream in TIFF format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frame.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the page as an image to a file in TIFF format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frame.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsTiff(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions,GrapeCity.Documents.Imaging.TiffFrameSettings)">
            <summary>
            Saves the page as an image to a file in TIFF format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="frameSettings">Frame settings that are used for encoding the TIFF frame.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsSvg(System.IO.Stream,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)">
            <summary>
            Saves the page to a stream in SVG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="xmlSettings">The output XML formatting settings.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsSvg(System.IO.Stream,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)">
            <summary>
            Saves the page to a stream in SVG format.
            </summary>
            <param name="stream">The output stream.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="xmlSettings">The output XML formatting settings.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsSvg(System.String,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)">
            <summary>
            Saves the page to a file in SVG format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="xmlSettings">The output XML formatting settings.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SaveAsSvg(System.String,GrapeCity.Documents.Pdf.SaveAsImageOptions,System.Xml.XmlWriterSettings)">
            <summary>
            Saves the page to a file in SVG format.
            </summary>
            <param name="filePath">The output file path.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
            <param name="xmlSettings">The output XML formatting settings.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.ToSvgz(GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page to a byte array in SVGZ format.
            </summary>
            <param name="viewState">The document view state.</param>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.ToSvgz(GrapeCity.Documents.Pdf.SaveAsImageOptions)">
            <summary>
            Saves the page to a byte array in SVGZ format.
            </summary>
            <param name="options">The <see cref="T:GrapeCity.Documents.Pdf.SaveAsImageOptions"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.RemoveLayersContent(GrapeCity.Documents.Pdf.Layers.OptionalContentGroup[])">
            <summary>
            Removes the content associated with specified PDF layers.
            <para>
            Note that if any content was removed from a page by this method,
            all remaining content on that page will be merged into a single content stream,
            and the <see cref="P:GrapeCity.Documents.Pdf.Page.ContentStreams"/> collection will contain just that single element.
            </para>
            </summary>
            <param name="layers">The array of <see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentGroup"/> objects.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTransparencyFeatures(System.Boolean,System.Boolean)">
            <summary>
            For internal uses.
            Returns the PDF rendering features used by the page content stream.
            </summary>
            <param name="checkAnnotations">Indicates whether to check the annotations content streams.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures"/> value defining used features.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Draw(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean,System.Boolean)">
            <summary>
            Draws the page on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> on which to draw the page.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="drawAnnotations">Indicates whether to draw the annotations.</param>
            <param name="drawFormFields">Indicates whether to draw the form fields.</param>
            <param name="renderingCache">The <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object used to cache objects created during rendering.</param>
            <param name="print">Indicates whether the image is generated for printing.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.Draw(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean)">
            <summary>
            Draws the page on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> on which to draw the page.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="drawAnnotations">Indicates whether to draw the annotations.</param>
            <param name="drawFormFields">Indicates whether to draw the form fields.</param>
            <param name="renderingCache">The <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object used to cache objects created during rendering.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetAnnotations(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.DrawAnnotations(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Annotations.AnnotationBase},GrapeCity.Documents.Pdf.RenderingCache,System.Boolean)">
            <summary>
            Draws specified annotations on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            <para>Note that the specified annotations must belong to the current page.</para>
            </summary>
            <param name="graphics">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> on which to draw the annotations.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="annotations">The list of annotations to draw.</param>
            <param name="renderingCache">The <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object used to cache objects created during rendering.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.DrawAnnotations(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Annotations.AnnotationBase},GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean)">
            <summary>
            Draws specified annotations on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            <para>Note that the specified annotations must belong to the current page.</para>
            </summary>
            <param name="graphics">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> on which to draw the annotations.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="annotations">The list of annotations to draw.</param>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="renderingCache">The <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object used to cache objects created during rendering.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.DrawAnnotations(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.RenderingCache)">
            <summary>
            Draws all page annotations on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            </summary>
            <param name="graphics">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> on which to draw the annotations.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="renderingCache">The <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object used to cache objects created during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetPageLabelingRange">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> object that specifies the label of this page,
            or null if no such range exists.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> that corresponds to this page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetLabel">
            <summary>
            Returns the page label specified via <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/>,
            returns empty string if page does not belong to document.
            </summary>
            <returns>The page label.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetUsedFonts">
            <summary>
            Gets the list of fonts referenced from content streams on this page.
            </summary>
            <returns>The list of fonts referenced from this page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTable(System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.Recognition.TableExtractOptions,System.Single,System.Single,System.Boolean)">
            <summary>
            Tries to recognize a table within specified bounds,
            if the table is found returns an object that allows
            accessing the table's rows, columns and cells.
            </summary>
            <param name="bounds">The bounds within which to look for a table.</param>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="options">The table extraction options.</param>
            <param name="dpiX">The horizontal resolution. This determines the unit of measurement used by horizontal values in <paramref name="options"/>.</param>
            <param name="dpiY">The vertical resolution. This determines the unit of measurement used by vertical values in <paramref name="options"/>.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content streams.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/> object containing information about the table,
            or <see langword="null"/> if no table could be found within the specified bounds.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTable(System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Recognition.TableExtractOptions,System.Single,System.Single,System.Boolean)">
            <summary>
            Tries to recognize a table within specified bounds,
            if the table is found returns an object that allows
            accessing the table's rows, columns and cells.
            </summary>
            <param name="bounds">The bounds within which to look for a table.</param>
            <param name="options">The table extraction options.</param>
            <param name="dpiX">The horizontal resolution. This determines the unit of measurement used by horizontal values in <paramref name="options"/>.</param>
            <param name="dpiY">The vertical resolution. This determines the unit of measurement used by vertical values in <paramref name="options"/>.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content streams.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/> object containing information about the table,
            or <see langword="null"/> if no table could be found within the specified bounds.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTextMap(GrapeCity.Documents.Pdf.Layers.ViewState,System.Boolean,System.Single,System.Single,System.Boolean)">
            <summary>
            Builds and returns a text map for the current page.
            <para>
            Note that the X/Y resolutions of pixels used by the text map's methods and properties are the
            X/Y resolutions passed to this method (<paramref name="dpiX"/> and <paramref name="dpiY"/>).
            </para>
            <para>
            Note also that the current value of the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm"/>
            property affects the map that is created.
            </para>
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="includeTextPosition">Indicates whether to include information about text positions in content stream.
            This must be <see langword="true"/> to enable using the map's <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.DeleteText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,GrapeCity.Documents.Pdf.TextMap.DeleteTextMode)"/>
            or <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.ReplaceText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,System.String,GrapeCity.Documents.Text.Font,System.Nullable{System.Single})"/> methods.
            If those methods are not going to be used, pass <see langword="false"/> to improve speed/memory usage of the text map.</param>
            <param name="dpiX">The horizontal resolution of the map (the default is 72dpi).</param>
            <param name="dpiY">The vertical resolution of the map (the default is 72dpi).</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content streams during rendering.</param>
            <returns>An <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> object containing the page text map.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTextMap(GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean)">
            <summary>
            Builds and returns a text map for the current page.
            <para>
            Note that the X/Y resolutions of pixels used by the text map's methods and properties are the
            X/Y resolutions passed to this method (<paramref name="dpiX"/> and <paramref name="dpiY"/>).
            </para>
            <para>
            Note also that the current value of the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm"/>
            property affects the map that is created.
            </para>
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="dpiX">The horizontal resolution of the map (the default is 72dpi).</param>
            <param name="dpiY">The vertical resolution of the map (the default is 72dpi).</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content streams during rendering.</param>
            <returns>An <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> object containing the page text map.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTextMap(System.Boolean,System.Single,System.Single,System.Boolean)">
            <summary>
            Builds and returns a text map for the current page.
            <para>
            Note that the X/Y resolutions of pixels used by the text map's methods and properties are the
            X/Y resolutions passed to this method (<paramref name="dpiX"/> and <paramref name="dpiY"/>).
            </para>
            <para>
            Note also that the current value of the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm"/>
            property affects the map that is created.
            </para>
            </summary>
            <param name="includeTextPosition">Indicates whether to include information about text positions in content stream.
            This must be <see langword="true"/> to enable using the map's <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.DeleteText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,GrapeCity.Documents.Pdf.TextMap.DeleteTextMode)"/>
            or <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.ReplaceText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,System.String,GrapeCity.Documents.Text.Font,System.Nullable{System.Single})"/> methods.
            If those methods are not going to be used, pass <see langword="false"/> to improve speed/memory usage of the text map.</param>
            <param name="dpiX">The horizontal resolution of the map (the default is 72dpi).</param>
            <param name="dpiY">The vertical resolution of the map (the default is 72dpi).</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content streams during rendering.</param>
            <returns>An <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> object containing the page text map.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetTextMap(System.Single,System.Single,System.Boolean)">
            <summary>
            Builds and returns a text map for the current page.
            <para>
            Note that the X/Y resolutions of pixels used by the text map's methods and properties are the
            X/Y resolutions passed to this method (<paramref name="dpiX"/> and <paramref name="dpiY"/>).
            </para>
            <para>
            Note also that the current value of the <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.RecognitionAlgorithm"/>
            property affects the map that is created.
            </para>
            </summary>
            <param name="dpiX">The horizontal resolution of the map (the default is 72dpi).</param>
            <param name="dpiY">The vertical resolution of the map (the default is 72dpi).</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content streams during rendering.</param>
            <returns>An <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> object containing the page text map.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetText(GrapeCity.Documents.Pdf.Layers.ViewState,System.Boolean)">
            <summary>
            Retrieves all text on the current page.
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> object.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during processing.</param>
            <returns>The page text, or null if the page does not contain any text.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetText(System.Boolean)">
            <summary>
            Retrieves all text on the current page.
            </summary>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during processing.</param>
            <returns>The page text, or null if the page does not contain any text.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.AdjustCoordinates(GrapeCity.Documents.Common.Quadrilateral,System.Boolean,System.Single,System.Single)">
            <summary>
            Converts specified visual coordinates (usually in the coordinate system with the origin
            in the top left corner of the page and the Y axis going down, see <paramref name="fromBottomLeft"/>)
            to coordinates that take into account <see cref="P:GrapeCity.Documents.Pdf.Page.Rotate"/>, <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>
            and <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/> (if <c>CropBox</c> is not specified) values.
            <para>
            This method should be used when positioning annotations or destinations on a page.
            Do not use this method when drawing on <see cref="P:GrapeCity.Documents.Pdf.Page.Graphics"/>.
            </para>
            </summary>
            <param name="value">The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> to adjust.</param>
            <param name="fromBottomLeft">If true, the source coordinates' origin is
            in the bottom left corner of the page with Y axis going up
            (by default it is in the top left corner with Y axis going down).</param>
            <param name="deviceDpiX">The horizontal device resolution.</param>
            <param name="deviceDpiY">The vertical device resolution.</param>
            <returns>The adjusted <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.AdjustCoordinates(System.Drawing.PointF,System.Boolean,System.Single,System.Single)">
            <summary>
            Converts specified visual coordinates (usually in the coordinate system with the origin
            in the top left corner of the page and the Y axis going down, see <paramref name="fromBottomLeft"/>)
            to coordinates that take into account <see cref="P:GrapeCity.Documents.Pdf.Page.Rotate"/>, <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>
            and <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/> (if <c>CropBox</c> is not specified) values.
            <para>
            This method should be used when positioning annotations or destinations on a page.
            Do not use this method when drawing on <see cref="P:GrapeCity.Documents.Pdf.Page.Graphics"/>.
            </para>
            </summary>
            <param name="value">The <see cref="T:System.Drawing.PointF"/> to convert.</param>
            <param name="fromBottomLeft">If true, the source coordinates' origin is
            in the bottom left corner of the page with Y axis going up
            (by default it is in the top left corner with Y axis going down).</param>
            <param name="deviceDpiX">The horizontal device resolution.</param>
            <param name="deviceDpiY">The vertical device resolution.</param>
            <returns>The adjusted <see cref="T:System.Drawing.PointF"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.AdjustCoordinates(System.Drawing.RectangleF,System.Boolean,System.Single,System.Single)">
            <summary>
            Converts specified visual coordinates (usually in the coordinate system with the origin
            in the top left corner of the page and the Y axis going down, see <paramref name="fromBottomLeft"/>)
            to coordinates that take into account <see cref="P:GrapeCity.Documents.Pdf.Page.Rotate"/>, <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>
            and <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/> (if <c>CropBox</c> is not specified) values.
            <para>
            This method should be used when positioning annotations or destinations on a page.
            Do not use this method when drawing on <see cref="P:GrapeCity.Documents.Pdf.Page.Graphics"/>.
            </para>
            </summary>
            <param name="value">The <see cref="T:System.Drawing.RectangleF"/> to adjust.</param>
            <param name="fromBottomLeft">If true, the source coordinates' origin is
            in the bottom left corner of the page with Y axis going up
            (by default it is in the top left corner with Y axis going down).</param>
            <param name="deviceDpiX">The horizontal device resolution.</param>
            <param name="deviceDpiY">The vertical device resolution.</param>
            <returns>The adjusted <see cref="T:System.Drawing.RectangleF"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetRenderSize(System.Single,System.Single)">
            <summary>
            Gets the size of the page on a device with specified horizontal and vertical resolutions.
            </summary>
            <param name="deviceDpiX">The horizontal device resolution.</param>
            <param name="deviceDpiY">The vertical device resolution.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetUserToDeviceMatrix(System.Single,System.Single,System.Boolean)">
            <summary>
            Returns the matrix used to convert coordinates in content stream of this page
            to device coordinates.
            </summary>
            <param name="deviceDpiX">The horizontal device resolution.</param>
            <param name="deviceDpiY">The vertical device resolution.</param>
            <param name="ignoreRotate">Indicates whether to ignore rotation specified for page with <see cref="P:GrapeCity.Documents.Pdf.Page.Rotate"/> property.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> containing the content of this <see cref="T:GrapeCity.Documents.Pdf.Page"/>.
            <para>Notes:</para>
            <list type="number">
            <item>The stream returned by this method should be disposed after use.</item>
            <item>This method can return null if the current page is empty.</item>
            <item>In sequential generate mode this method is not supported and will throw an exception.</item>
            </list>
            </summary>
            <returns>A stream with the current page's content.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetOperators(GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,System.Boolean)">
            <summary>
            Returns the list of PDF operators forming the page content.
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content would be considered.</param>
            <param name="dpiX">The horizontal resolution.</param>
            <param name="dpiY">The vertical resolution.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF content stream during rendering.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetImages(System.Single,System.Single)">
            <summary>
            Gets the list of images on this page.
            </summary>
            <param name="dpiX">The horizontal resolution used to calculate the bounds of images on the page.</param>
            <param name="dpiY">The vertical resolution used to calculate the bounds of images on the page.</param>
            <returns>The list of images on the current page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.GetImages(System.Single,System.Single,System.Boolean)">
            <summary>
            Gets the list of images on this page.
            </summary>
            <param name="dpiX">The horizontal resolution used to calculate the bounds of images on the page.</param>
            <param name="dpiY">The vertical resolution used to calculate the bounds of images on the page.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in PDF during processing.</param>
            <returns>The list of images on the current page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SetContent(GrapeCity.Documents.Pdf.Operators.OperatorList)">
            <summary>
            For internal use.
            Sets the current page content.
            </summary>
            <param name="operatorList">The <see cref="T:GrapeCity.Documents.Pdf.Operators.OperatorList"/> defining new content.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SetContent(GrapeCity.Documents.Pdf.TextMap.ITextMap,System.Boolean)">
            <summary>
            For internal use.
            Sets the current page content.
            </summary>
            <param name="textMap">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> defining new content.</param>
            <param name="updateNestedContentStreams">Indicates whether to update nested content streams.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.SetContent(System.IO.MemoryStream,System.Boolean)">
            <summary>
            For internal use.
            Sets the current page content.
            If <paramref name="copyStream"/> is true then stream content will be copied 
            and it should be disposed; otherwise (<paramref name="copyStream"/> is false)
            the content stream will use passed stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.ReplaceText(GrapeCity.Documents.Pdf.FindTextParams,System.String,GrapeCity.Documents.Text.Font,System.Nullable{System.Single})">
            <summary>
            Replaces a specified text on the current page.
            <para>
            Note that the results may be affected by the current value of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.RecognitionAlgorithm"/> property.
            </para>
            </summary>
            <param name="findTextParams">The text to search for.</param>
            <param name="newText">The replacement text.</param>
            <param name="font">The font to use on <paramref name="newText"/>, if <see langword="null"/> the current font will be used.</param>
            <param name="fontSize">The font size to use on <paramref name="newText"/>, if <see langword="null"/> the current font size will be used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.ReplaceText(GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.TextMap.TextMapFragment,System.String,GrapeCity.Documents.Text.Font,System.Nullable{System.Single})">
            <summary>
            Replaces a specified text range on the current page.
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content should be considered.</param>
            <param name="fragment">The text range.</param>
            <param name="newText">The replacement text.</param>
            <param name="font">The font to use on <paramref name="newText"/>, if <see langword="null"/> the current font will be used.</param>
            <param name="fontSize">The font size to use on <paramref name="newText"/>, if <see langword="null"/> the current font size will be used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.ReplaceText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,System.String,GrapeCity.Documents.Text.Font,System.Nullable{System.Single})">
            <summary>
            Replaces a specified text range on the current page.
            </summary>
            <param name="fragment">The text range.</param>
            <param name="newText">The replacement text.</param>
            <param name="font">The font to use on <paramref name="newText"/>, if <see langword="null"/> the current font will be used.</param>
            <param name="fontSize">The font size to use on <paramref name="newText"/>, if <see langword="null"/> the current font size will be used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.DeleteText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Pdf.TextMap.DeleteTextMode)">
            <summary>
            Deletes a specified text from the current page.
            </summary>
            <param name="findTextParams">The text to search for.</param>
            <param name="mode">The text delete mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.DeleteText(GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.TextMap.TextMapFragment,GrapeCity.Documents.Pdf.TextMap.DeleteTextMode)">
            <summary>
            Deletes the specified text range from the current page.
            </summary>
            <param name="viewState">The <see cref="T:GrapeCity.Documents.Pdf.Layers.ViewState"/> used to determine what document content should be considered.</param>
            <param name="fragment">The text range.</param>
            <param name="mode">The text delete mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.DeleteText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,GrapeCity.Documents.Pdf.TextMap.DeleteTextMode)">
            <summary>
            Deletes the specified text range from the current page.
            </summary>
            <param name="fragment">The text range.</param>
            <param name="mode">The text delete mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Page.CreateEmptyTextMap">
            <summary>
            For internal use.
            Creates the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> object representing an empty map, has no text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.PieceInfo">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> object defining page-piece dictionary associated with the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.TransitionDuration">
            <summary>
            Gets or sets the page’s display duration (also called its advance timing):
            the maximum length of time, in seconds, that the page shall be displayed during presentations
            before the viewer application shall automatically advance to the next page
            Default: null (the viewer shall not advance automatically).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.TransitionEffect">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.TransitionEffect"/> object describing the transition effect
            that shall be used when displaying the page during presentations
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.ArticleBeads">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> objects displayed on this page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.AssociatedFiles">
            <summary>
            Gets the list of embedded files associated with this page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.UserUnit">
            <summary>
            Gets or sets a positive number greater than 1 giving the size of default user space units, in multiples of 1/72 inch.
            <para>Default value: 1.0 (user unit is 1/72 inch).</para>
            </summary>
            <remarks>
            As of December 2018, it seems that only Adobe Acrobat readers respect this property.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.AnnotationsTabsOrder">
            <summary>
            Gets or sets the tab order to be used for annotations on the page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Graphics">
            <summary>
            Gets an instance of GcPdfGraphics that can be used to draw on the current page,
            graphics created from the last page content stream, if
            <see cref="P:GrapeCity.Documents.Pdf.Page.ContentStreams"/> collection is empty then new <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/>
            automatically added.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.ContentStreams">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PageContentStreamCollection"/> containing content streams representing
            content of this page.
            <para>
            Note that while manipulating the <see cref="P:GrapeCity.Documents.Pdf.Page.ContentStreams"/> collection
            (inserting, removing or moving elements) is allowed, the result of such
            manipulations may produce an invalid PDF if the original document was created
            or modified by a tool other than GcPdf. Generally speaking, it is safe to
            insert new content streams at the first position in the collection,
            or add them to the end of it, provided any content in the new stream(s)
            was created by rendering on <see cref="M:GrapeCity.Documents.Pdf.PageContentStream.GetGraphics(GrapeCity.Documents.Pdf.Page)"/>.
            Any other operations on this collection in documents that were not created
            by GcPdf might yield invalid PDFs.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Index">
            <summary>
            Gets the index of the page in its document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PageCollection"/> collection containing this <see cref="T:GrapeCity.Documents.Pdf.Page"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Bounds">
            <summary>
            Gets the bounds of the current page in points.
            The return value is the same as returned by <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.MediaBox">
            <summary>
            Gets or sets the bounds of the page in points.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.CropBox">
            <summary>
            Gets or sets a rectangle, in points, defining the visible region of default user space.
            When the page is displayed or printed, its contents are to be clipped (cropped) to this
            rectangle and then imposed on the output medium in some implementation-defined manner.
            Default value is <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.BleedBox">
            <summary>
            Gets or sets a rectangle, in points, defining the region to which the contents of the page
            should be clipped when output in a production environment.
            Default value is <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.TrimBox">
            <summary>
            Gets or sets a rectangle, in points, defining the intended dimensions of the finished page after trimming
            Default value is <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.ArtBox">
            <summary>
            Gets or sets a rectangle, in points, defining the extent of the page's meaningful content
            (including potential white space) as intended by the page's creator.
            Default value is <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Size">
            <summary>
            Gets or sets the size of the current page in points.
            <para>
            This property is a wrapper around <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/> or <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/> properties.
            If <see cref="P:GrapeCity.Documents.Pdf.Page.CropBox"/> is not null then this property gets or sets its value,
            otherwise it gets or sets the value of <see cref="P:GrapeCity.Documents.Pdf.Page.MediaBox"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.PaperKind">
            <summary>
            Gets or sets the paper kind of the current page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Landscape">
            <summary>
            Gets or sets a value indicating whether the current page has landscape orientation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Tag">
            <summary>
            Gets or sets an arbitrary application-defined object associated with the current page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Annotations">
            <summary>
            Gets the list annotations associated with the current page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Page.Rotate">
            <summary>
            Gets or sets the number of degrees by which the page should be rotated clockwise when displayed or printed.
            The value must be a multiple of 90.
            Default value: 0.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageArticleBeadCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Articles.ArticleBead"/> objects owned by <see cref="T:GrapeCity.Documents.Pdf.Page"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageArticleBeadCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object that owns this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageContentStreamCollection">
            <summary>
            Defines collection of <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStreamCollection.HasNotEmptyStreams">
            <summary>
            Returns true if collection contains NOT empty content streams.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageContentStreamCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.PageContentStreamCollection"/> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageContentStreamCollection.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.PageContentStreamCollection"/> collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageContentStreamCollection.Last">
            <summary>
            Gets the last <see cref="T:GrapeCity.Documents.Pdf.PageContentStreamCollection"/> in the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStreamCollection.Add">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/> and adds it to this <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/>.
            </summary>
            <returns>The newly created page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStreamCollection.Insert(System.Int32)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/> and inserts it at a specific position in this <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/>.
            </summary>
            <param name="index">The position where the new page will be inserted.</param>
            <returns>The newly created page.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageContentStream">
            <summary>
            Defines content stream of the page of <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageContentStream.c_flgDisposeStream">
            <summary>
            See <see cref="P:GrapeCity.Documents.Pdf.PageContentStream.DisposeStream"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageContentStream._startDocStreamOffset">
            <summary>
            Used during sequential writing, contains offset in document stream where page content started.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStream.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/> class.
            </summary>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageContentStream.DisposeStream">
            <summary>
            Gets or sets a value indicating whether to dispose <see cref="F:GrapeCity.Documents.Pdf.ContentStream.m_Stream"/>
            when <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/> closed, has the meaning in sequential writing mode.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStream.OnRemoved">
            <summary>
            Called when PageContentStream removed from document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStream.EndPage(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Called in sequential mode (StartDoc / EndDoc).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStream.GetGraphics(GrapeCity.Documents.Pdf.Page)">
            <summary>
            Returns an instance of <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/> that can be used to generate content
            of this <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/>.
            </summary>
            <param name="page">The <see cref="T:GrapeCity.Documents.Pdf.Page"/> containing this <see cref="T:GrapeCity.Documents.Pdf.PageContentStream"/>.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.GcPdfGraphics"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageContentStream.GetStream">
            <summary>
            Gets the System.IO.Stream containing the content of this <see cref="T:GrapeCity.Documents.Pdf.ContentStream"/> object.
            <para>It is the caller's responsibility to dispose the returned stream after usage.</para>
            <para>Note 1: this method returns null if the current ContentStream object is empty.</para>
            <para>Note 2: in StartDoc/EndDoc mode this method is not supported and will throw an exception.</para>
            <para>Note 3: In some rare cases a page's content stream can break inside an operator, for example,
            some operands are in Page.ContentStreams[0] and other operands are in Page.ContentStreams[1].
            This is weird but does not contradict the PDF Specification. To avoid such situations use <see cref="M:GrapeCity.Documents.Pdf.Page.GetStream"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageContentStream.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.NumberingStyle">
            <summary>
            Defines possible numbering styles.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.DecimalArabic">
            <summary>
            Decimal Arabic numerals.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.UppercaseRoman">
            <summary>
            Uppercase Roman numerals.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.LowercaseRoman">
            <summary>
            Lowercase Roman numerals.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.UppercaseLetters">
            <summary>
            Uppercase letters (A to Z for the first 26 pages, AA to ZZ for the next 26, and so on).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.LowercaseLetters">
            <summary>
            Lowercase letters (a to z for the first 26 pages, aa to zz for the next 26, and so on).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.Unset">
            <summary>
            Value is not specified.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NumberingStyle.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageLabelingRange">
            <summary>
            Represents a page labeling range.
            <para>
            A document is divided into labeling ranges, each of which is a series of consecutive pages
            using the same numbering system.
            Labeling ranges shall not overlap, so that each page shall have only one label.
            Pages within a range shall be numbered sequentially in ascending order.
            A page's label consists of a numeric portion based on its position within its labeling range,
            optionally preceded by a label prefix denoting the range itself.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageLabelingRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageLabelingRange.#ctor(System.String,GrapeCity.Documents.Pdf.NumberingStyle,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageLabelingRange.GetPageLabel(System.Int32)">
            <summary>
            Returns the label for a page with a specified index.
            </summary>
            <param name="pageDocumentIndex">The page index in a document.</param>
            <returns>The page label.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageLabelingRange.FirstPageIndexInDocument">
            <summary>
            Gets the index of the page from which this <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> starts.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageLabelingRange.Prefix">
            <summary>
            Gets or sets the label prefix for page labels in this range.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageLabelingRange.StartPageNumber">
            <summary>
            Gets or sets the value of the numeric portion for the first page label in the range.
            Subsequent pages shall be numbered sequentially from this value,
            which shall be greater than or equal to 1. Default value: 1.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PageLabelingRange.NumberingStyle">
            <summary>
            Gets or sets the numbering style that shall be used for the numeric portion of each page label.
            There is no default numbering style; if <see cref="P:GrapeCity.Documents.Pdf.PageLabelingRange.NumberingStyle"/> is
            <see cref="F:GrapeCity.Documents.Pdf.NumberingStyle.Unset"/>, page labels
            shall consist solely of a label prefix with no numeric portion.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PageLabelingRangeNumberTree.GetRange(System.Int32)">
            <summary>
            Returns a <see cref="T:GrapeCity.Documents.Pdf.PageLabelingRange"/> for specified page index.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.IResourceProvider">
            <summary>
            Provides a mechanism for getting a resource by its name.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor">
            <summary>
            Base class for content stream processors which can be used for:
            rendering, text searching etc.
            </summary>
            <summary>
            Base class for content stream processors which can be used for:
            rendering, text searching etc.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.IsSoftMaskObjectUsed(GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask)">
            <summary>
            Checks whether the specified <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask"/> referenced from the current graphics state
            or from any graphics state in stack.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetTextFontAndSize(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Text.Font,System.Single)">
            <summary>
            Sets current text font and size, called when executing "Tf" operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OnSetResourceColorSpace(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace)">
            <summary>
            Callback method, called when <see cref="T:GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace"/> defined as resource defined as current
            color space via "SC" or "sc" commands.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OnSetColorSpaceColor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Callback method, called when new color is set as current color via "SC", "sc", "SCN" or "scn" commands.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColorSpace(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "CS" and "cs" operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColor1(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "SC" and "sc".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColor2(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "SCN" and "scn".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColorGray(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "G" and "g".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColorRGB(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "RG" and "rg".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetColorCMYK(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase@)">
            <summary>
            Common processing for "K" and "k".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.DrawPath(System.Boolean,System.Nullable{GrapeCity.Documents.Pdf.FillRule})">
            <summary>
            Draws the current path defined by <see cref="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.m_CurrentPath"/>, called by OpXXXPath() methods.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.PushClipPath(GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path,GrapeCity.Documents.Pdf.FillRule)">
            <summary>
            Intersects current clipping path with specified path, called by "W" and "W*" operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.PopClipPath">
            <summary>
            Removes last path added by <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.PushClipPath(GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path,GrapeCity.Documents.Pdf.FillRule)"/> method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ShowText(GrapeCity.Documents.Pdf.Spec.PdfArray)">
            <summary>
            Override this method to render a text.
            Current text rendering matrix can be requested via <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTextRenderingMatrix"/>
            method.
            NOTE, this method should advance text matrix, see <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTxToTm(System.Single)"/>
            and <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTyToTm(System.Single)"/> methods.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ProcessImage(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase)">
            <summary>
            Processes an image.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ProcessShading(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.Shadings.Shading)">
            <summary>
            Draws a shading.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ProcessFormXObject(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.FormXObject)">
            <summary>
            Processes nested <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetBlendMode(GrapeCity.Documents.Pdf.PdfBlendMode)">
            <summary>
            Called when current blend mode in m_CurrentGraphicsState.BlendMode is changed.
            Note! m_CurrentGraphicsState.BlendMode already contains new value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetSoftMask(GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask)">
            <summary>
            Sets the soft mask defined by <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask"/> object,
            this object created from the <see cref="T:GrapeCity.Documents.Pdf.Graphics.SoftMask"/>
            using <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CreateSoftMask(GrapeCity.Documents.Pdf.Graphics.SoftMask)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CreateSoftMask(GrapeCity.Documents.Pdf.Graphics.SoftMask)">
            <summary>
            Create a <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask"/> from PDF soft mask definition.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SetGraphicsStateParams(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.GraphicsStateParams)">
            <summary>
            Sets graphics state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SaveGraphicsState">
            <summary>
            Saves current graphics state to the stack.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.RestoreGraphicsState">
            <summary>
            Restores graphics state from the stack.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSaveGraphicsState">
            <summary>
            "q"
            Save the current graphics state on the graphics state stack
            (see “Graphics State Stack” on page 214).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpRestoreGraphicsState">
            <summary>
            "Q"
            Restore the graphics state by removing the most recently saved state from the stack
            and making it the current state (see “Graphics State Stack” on page 214).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpModifyCurrentTransformationMatrix(System.Numerics.Matrix3x2)">
            <summary>
            "cm"
            Modify the current transformation matrix (CTM) by concatenating the specified matrix
            (see Section 4.2.1, “Coordinate Spaces”).
            Although the operands specify a matrix, they are written as six separate numbers, not as an array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetLineWidth(System.Single)">
            <summary>
            "w"
            Set the line width in the graphics state (see “Line Width” on page 215).
            It is a non-negative number expressed in user space units;
            stroking a path entails painting all points whose perpendicular distance from the
            path in user space is less than or equal to half the line width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetLineCapStyle(System.Int32)">
            <summary>
            "J"
            Set the line cap style in the graphics state (see “Line Cap Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetLineJoinStyle(System.Int32)">
            <summary>
            "j"
            Set the line join style in the graphics state (see “Line Join Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetMiterLimit(System.Single)">
            <summary>
            "M"
            Set the miter limit in the graphics state (see “Miter Limit” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetLineDashPattern(System.Single,System.Single[])">
            <summary>
            "d"
            Set the line dash pattern in the graphics state (see “Line Dash Pattern” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorRenderingIntent(GrapeCity.Documents.Pdf.RenderingIntent)">
            <summary>
            "ri"
            (PDF 1.1) Set the color rendering intent in the graphics state
            (see “Rendering Intents” on page 260).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetFlatnessTolerance(System.Single)">
            <summary>
            "i"
            Set the flatness tolerance in the graphics state (see Section 6.5.1, “Flatness Tolerance”).
            flatness is a number in the range 0 to 100; a value of 0 specifies the output device’s
            default flatness tolerance.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetGraphicsStateParams(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "gs"
            (PDF 1.2) Set the specified parameters in the graphics state.
            dictName is the name of a graphics state parameter dictionary
            in the ExtGState subdictionary of the current resource dictionary (see the next section).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpBeginSubPath(System.Single,System.Single)">
            <summary>
            "m"
            Begin a new subpath by moving the current point to coordinates (x, y),
            omitting any connecting line segment.
            If the previous path construction operator in the current path was also m,
            the new "m" overrides it; no vestige of the previous m operation remains in the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpAppendLine(System.Single,System.Single)">
            <summary>
            "l"
            Append a straight line segment from the current point to the point (x, y).
            The new current point is (x, y).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpAppendBezier1(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "c"
            Append a cubic Bézier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x2 , y2 )
            as the Bézier control points (see “Cubic Bézier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpAppendBezier2(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "v"
            Append a cubic Bezier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ),
            using the current point and (x2 , y2 ) as the Bézier control points
            (see “Cubic Bézier Curves,” below). The new current point is (x3 , y3 ).
            </summary>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpAppendBezier3(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "y"
            Append a cubic Bezier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x3 , y3 )
            as the Bézier control points (see “Cubic Bézier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpCloseSubPath">
            <summary>
            "h"
            Close the current subpath by appending a straight line segment from the current point
            to the starting point of the subpath. If the current subpath is already closed, h does nothing.
            This operator terminates the current subpath.
            Appending another segment to the current path begins a new subpath,
            even if the new segment begins at the endpoint reached by the h operation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpAppendRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "re"
            Append a rectangle to the current path as a complete subpath,
            with lower-left corner (x, y) and dimensions width and height in user space. The operation
              x y width height re
            is equivalent to:
              x y m
              (x + width ) y l
              (x + width ) ( y + height ) l
              x(y + height ) l
              h
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpStrokePath">
            <summary>
            "S"
            Stroke the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpCloseStrokePath">
            <summary>
            "s"
            Close and stroke the path. This operator has the same effect as the sequence h S.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpFillNonZeroWindingPath">
            <summary>
            "f"
            Fill the path, using the nonzero winding number rule to determine the region to fill
            (see “Nonzero Winding Number Rule” on page 232).
            Any subpaths that are open are implicitly closed before being filled.
            
            Also this method executes "F" command.
            Equivalent to f; included only for compatibility. Although PDF consumer applications
            must be able to accept this operator, PDF producer applications should use f instead.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpFillEvenOddPath">
            <summary>
            "f*"
            Fill the path, using the even-odd rule to determine the region to fill
            (see “Even-Odd Rule” on page 233).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpFillStrokeNonZeroWindingPath">
            <summary>
            "B"
            Fill and then stroke the path, using the nonzero winding number rule to determine the region
            to fill. This operator produces the same result as constructing two identical path objects,
            painting the first with f and the second with S. Note, however, that the filling and
            stroking portions of the operation consult different values of several graphics state parameters,
            such as the current color.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpFillStrokeEvenOddPath">
            <summary>
            "B*"
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            This operator produces the same result as B, except that the path is filled as
            if with f* instead of f.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpCloseFillStrokeNonZeroWindingPath">
            <summary>
            "b"
            Fill and then stroke the path, using the nonzero winding number rule to determine the region
            to fill. This operator produces the same result as constructing two identical path objects,
            painting the first with f and the second with S. Note, however, that the filling and
            stroking portions of the operation consult different values of several graphics state parameters,
            such as the current color.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpCloseFillStrokeEvenOddPath">
            <summary>
            "b*"
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            This operator produces the same result as B, except that the path is filled as
            if with f* instead of f.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpClosePath">
            <summary>
            "n"
            End the path object without filling or stroking it.
            This operator is a path-painting no-op, used primarily for the side effect of changing
            the current clipping path (see Section 4.4.3, “Clipping Path Operators”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetClippingPathNonZeroWinding">
            <summary>
            "W"
            Modify the current clipping path by intersecting it with the current path,
            using the nonzero winding number rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetClippingPathEvenOdd">
            <summary>
            "W*"
            Modify the current clipping path by intersecting it with the current path,
            using the even-odd rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpBeginText">
            <summary>
            "BT"
            Begin a text object, initializing the text matrix, Tm , and the text line matrix, Tlm,
            to the identity matrix. Text objects cannot be nested; a second BT cannot appear before an ET.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpEndText">
            <summary>
            "ET"
            End a text object, discarding the text matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetCharacterSpacing(System.Single)">
            <summary>
            "Tc"
            Set the character spacing, Tc , to charSpace, which is a number expressed in unscaled text
            space units. Character spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            </summary>
            <param name="charSpace"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetWordSpacing(System.Single)">
            <summary>
            "Tw"
            Set the word spacing, Tw , to wordSpace, which is a number expressed in unscaled text space units.
            Word spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            </summary>
            <param name="wordSpace"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextHorizontalScaling(System.Single)">
            <summary>
            "Tz"
            Set the horizontal scaling, Th , to (scale ÷ 100). scale is a number specifying
            the percentage of the normal width. Initial value: 100 (normal width).
            </summary>
            <param name="scale"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextLeading(System.Single)">
            <summary>
            "TL"
            Set the text leading, Tl , to leading, which is a number expressed in unscaled text space units.
            Text leading is used only by the T*, ', and " operators. Initial value: 0.
            </summary>
            <param name="leading"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextFontAndSize(GrapeCity.Documents.Pdf.Spec.PdfName,System.Single)">
            <summary>
            "Tf"
            Set the text font, Tf , to font and the text font size, Tfs, to size.
            font is the name of a font resource in the Font subdictionary of the current resource dictionary;
            size is a number representing a scale factor.
            There is no initial value for either font or size;
            they must be specified explicitly by using Tf before any text is shown.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextRenderingMode(System.Int32)">
            <summary>
            "Tr"
            Set the text rendering mode, Tmode , to render, which is an integer. Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextRise(System.Single)">
            <summary>
            "Ts"
            Set the text rise, Trise, to rise, which is a number expressed in unscaled text space units.
            Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpMoveToNextLine(System.Single,System.Single)">
            <summary>
            "Td"
            Move to the start of the next line, offset from the start of the current line by (tx, ty).
            tx and ty are numbers expressed in unscaled text space units.
            More precisely, this operator performs the following assignments:
                       | 1  0  0 |
            Tm = Tlm = | 0  1  0 | * Tlm
                       | tx ty 1 |
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpMoveToNextLineUpdateLeading(System.Single,System.Single)">
            <summary>
            "TD"
            Move to the start of the next line, offset from the start of the current line by (tx, ty).
            As a side effect, this operator sets the leading parameter in the text state.
            This operator has the same effect as the following code:
            −ty TL
            tx ty Td
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetTextMatrix(System.Numerics.Matrix3x2)">
            <summary>
            "Tm"
            Set the text matrix, Tm , and the text line matrix, Tlm:
              Tm = Tlm = m
            The matrix specified by the operands is not concatenated onto the current text matrix,
            but replaces it.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpMoveToNextLine">
            <summary>
            "T*"
            Move to the start of the next line. This operator has the same effect as the code
              0 Tl Td
            where Tl is the current leading parameter in the text state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpShowText(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            "Tj"
            Show a text string.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpShowText1(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            "'"
            Move to the next line and show a text string. This operator has the same effect as the code:
              T*
              str Tj
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpShowText2(System.Single,System.Single,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            """
            Move to the next line and show a text string, using aw as the word spacing and ac as
            the character spacing (setting the corresponding parameters in the text state).
            aw and ac are numbers expressed in unscaled text space units.
            This operator has the same effect as the following code:
              aw Tw
              ac Tc
              str '
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpShowTextGlyphPositioning(GrapeCity.Documents.Pdf.Spec.PdfArray)">
            <summary>
            "TJ"
            Show one or more text strings, allowing individual glyph positioning
            (see implementation note 58 in Appendix H).
            Each element of array can be a string or a number.
            If the element is a string, this operator shows the string.
            If it is a number, the operator adjusts the text position by that amount;
            that is, it translates the text matrix, Tm.
            The number is expressed in thousandths of a unit of text space
            (see Section 5.3.3, “Text Space Details,” and implementation note 59 in Appendix H).
            This amount is subtracted from the current horizontal or vertical coordinate,
            depending on the writing mode.
            In the default coordinate system, a positive adjustment has the effect of
            moving the next glyph painted either to the left or down by the given amount.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorSpaceStroking(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "CS"
            
            (PDF 1.1) Set the current color space to use for stroking operations.
            The operand name must be a name object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorSpaceNonStroking(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "cs"
            
            (PDF 1.1) Same as CS but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColor1Stroking">
            <summary>
            "SC"
            
            (PDF 1.1) Set the color to use for stroking operations in a device,
            CIE-based (other than ICCBased), or Indexed color space.
            The number of operands required and their interpretation depends
            on the current stroking color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColor1NonStroking">
            <summary>
            "sc"
            
            (PDF 1.1) Same as SC but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColor2Stroking">
            <summary>
            "SCN"
            
            Same as SC but also supports Pattern, Separation, DeviceN, and ICCBased color spaces.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColor2NonStroking">
            <summary>
            "scn"
            
            (PDF 1.1) Same as SCN but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorGrayStroking">
            <summary>
            "G"
            
            Set the stroking color space to DeviceGray
            (or the DefaultGray color space; see “Default Color Spaces” on page 257)
            and set the gray level to use for stroking operations.
            gray is a number between 0.0 (black) and 1.0 (white).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorGrayNonStroking">
            <summary>
            "g"
            
            Same as G but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorRGBStroking">
            <summary>
            "RG"
            
            Set the stroking color space to DeviceRGB (or the DefaultRGB color space; see “Default Color Spaces” on page 257)
            and set the color to use for stroking operations.
            Each operand must be a number between 0.0 (minimum intensity) and 1.0 (maximum intensity).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorRGBNonStroking">
            <summary>
            "rg"
            
            Same as RG but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorCMYKStroking">
            <summary>
            "K"
            
            Set the stroking color space to DeviceCMYK (or the DefaultCMYK color space;
            see “Default Color Spaces” on page 257) and set the color to use for stroking operations.
            Each operand must be a number between 0.0 (zero concentration) and 1.0 (maximum concentration).
            The behavior of this operator is affected by the overprint mode
            (see Section 4.5.6, “Overprint Control”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpSetColorCMYKNonStroking">
            <summary>
            "k"
            
            Same as K but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpType3SetWidth(System.Single,System.Single)">
            <summary>
            "d0"
            Set width information for the glyph and declare that the glyph description specifies both its shape and its color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpType3SetWidthAndBoundingBox(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "d1"
            Set width and bounding box information for the glyph and declare that the glyph description specifies only shape, not color.
            llx and lly are the coordinates of the lower-left corner, and urx and ury the upper-right corner, of the glyph bounding box.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpDrawShading(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "sh"
            (PDF 1.3) Paint the shape and color shading described by a shading dictionary,
            subject to the current clipping path.
            The current color in the graphics state is neither used nor altered.
            The effect is different from that of painting a path using a shading pattern as the current color.
            name is the name of a shading dictionary resource in the Shading subdictionary of
            the current resource dictionary(see Section 3.7.2, “Resource Dictionaries”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpDoXObject(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "Do"
            An external object (commonly called an XObject) is a graphics object
            whose contents are defined by a self-contained content stream,
            separate from the content stream in which it is used.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpMarkedContentPoint(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "MP"
            Designate a marked-content point. <paramref name="role"/> is a name object indicating the role or significance of the point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpMarkedContentPoint2(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "DP"
            Designate a marked-content point with an associated property list. <paramref name="role"/> is a name object indicating the role or significance of the point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpBeginCompatibilitySection">
            <summary>
            "BX"
            Begin a compatibility section. Unrecognized operators (along with their operands) are ignored without error until the balancing EX operator is encountered.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpEndCompatibilitySection">
            <summary>
            "EX"
            End a compatibility section begun by a balancing BX operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.OpEndInlineImage(GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage)">
            <summary>
            "EI"
            
            Ends inline image, defined using "BI" "ID" "EI" operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTextRenderingMatrix">
            <summary>
            Returns matrix which converts unscaled text coordinate space to device coordinate space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTextRenderingMatrixUserSpace">
            <summary>
            Returns matrix which converts unscaled text coordinate space to user coordinate space,
            unlike <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTextRenderingMatrix"/> do not apply <see cref="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.UserToDeviceMatrix"/>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Do">
            <summary>
            Processes content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetFont(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Text.Font"/> object by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetPattern(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern"/> object by resource name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CreateStrokePen(System.Drawing.Color,System.Single)">
            <summary>
            Creates stroke pen to draw paths on a base of the current <see cref="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CurrentGraphicsState"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTx(System.Single,System.Int32,System.Int32)">
            <summary>
            Calculates horizontal offset which should be applied to CurrentGraphicsState.TextMatrix after drawing a string with specified props.
            </summary>
            <param name="charsWidth">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTxToTm(System.Single,System.Int32,System.Int32)">
            <summary>
            Applies offset to the CurrentGraphicsState.TextMatrix for a string with specified props.
            </summary>
            <param name="charsWidth">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTxToTm(System.Single)">
            <summary>
            Applies offset to the CurrentGraphicsState.TextMatrix for a string with specified props.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GetTy(System.Single,System.Int32,System.Int32)">
            <summary>
            Calculates vertical offset which should be applied to CurrentGraphicsState.TextMatrix
            after drawing a string with specified props.
            </summary>
            <param name="charsHeight">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTyToTm(System.Single,System.Int32,System.Int32)">
            <summary>
            Applies vertical offset to the m_CurrentGraphicsState.TextMatrix for a string with specified props.
            </summary>
            <param name="charsHeight">The summary width of chars in string in glyph coordinate space divided by 1000.</param>
            <param name="charCount">The count of chars in string.</param>
            <param name="spaceCount">The count of spaces in string.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ApplyTyToTm(System.Single)">
            <summary>
            Applies vertical offset to the m_CurrentGraphicsState.TextMatrix for a string with specified props.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.UserToDeviceMatrix">
            <summary>
            Gets the user to device matrix passed to constructor.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.ShadingInitialMatrix">
            <summary>
            Gets the initial matrix for current content stream, used when rendering patterns.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CurrentGraphicsState">
            <summary>
            Gets the current graphics state.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.CurrentPath">
            <summary>
            Gets the current PDF path.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState">
            <summary>
            Defines graphics state during processing of PDF content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState.Transform">
            <summary>
            Current transformation matrix *without* <see cref="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.m_UserToDeviceMatrix"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState.ClipPathCount">
            <summary>
            Count of <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path"/> objects added using with <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.PushClipPath(GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path,GrapeCity.Documents.Pdf.FillRule)"/> method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState.SoftMaskObject">
            <summary>
            The current <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask"/> object created from soft mask definition specified
            by <see cref="F:GrapeCity.Documents.Pdf.Graphics.GraphicsState.SoftMask"/> property.
            Note! The <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SoftMask"/> object supports the <see cref="T:System.IDisposable"/>
            but its disposing managed during processing the content stream, so the owning 
            <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState"/> does not support <see cref="T:System.IDisposable"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState.ResetToDefault">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.GraphicsState.AssignFrom(GrapeCity.Documents.Pdf.Graphics.GraphicsState)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path">
            <summary>
            Describes a PDF path.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path._cx">
            <summary>
            X coordinate of the current point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path._cy">
            <summary>
            Y coordinate of the current point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.SubPaths">
            <summary>
            List of subpaths in path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.GetBounds(System.Numerics.Matrix3x2)">
            <summary>
            Returns the path's bounds.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.BeginSubPath(System.Single,System.Single)">
            <summary>
            Begin a new subpath by moving the current point to coordinates (x, y),
            omitting any connecting line segment.
            
            If the previous path construction operator in the current path was also [m],
            the new [m] overrides it; no vestige of the previous m operation remains in the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.AppendLine(System.Single,System.Single)">
            <summary>
            Append a straight line segment from the current point to the point (x, y).
            The new current point is (x, y).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.AppendBezier1(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a cubic Bezier curve.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x2 , y2 )
            as the Bezier control points (see “Cubic Bezier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.AppendBezier2(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a cubic Bezier curve.
            The curve extends from the current point to the point (x3 , y3 ),
            using the current point and (x2 , y2 ) as the Bezier control points
            (see “Cubic Bezier Curves,” below). The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.AppendBezier3(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a cubic Bezier curve.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x3 , y3 )
            as the Bezier control points (see “Cubic Bezier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.CloseSubPath">
            <summary>
            "h"
            Close the current subpath by appending a straight line segment from the current point
            to the starting point of the subpath. If the current subpath is already closed, h does nothing.
            This operator terminates the current subpath.
            Appending another segment to the current path begins a new subpath,
            even if the new segment begins at the endpoint reached by the h operation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.Path.AppendRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Append a rectangle as a complete subpath,
            with lower-left corner (x, y) and dimensions width and height in user space. The operation
              x y width height re
            is equivalent to:
              x y m
              (x + width ) y l
              (x + width ) ( y + height ) l
              x(y + height ) l
              h
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SubPath">
            <summary>
            Describes the PDF subpath.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SubPath.X">
            <summary>
            X coordinate of starting point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SubPath.Y">
            <summary>
            Y coordinate of starting point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SubPath.Closed">
            <summary>
            Indicates whether the subpath is closed and no new segments can be added to it.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.SubPath.Segments">
            <summary>
            Segments of subpath.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.PathSegment">
            <summary>
            Base class for segments of PDF subpath: line, bezier.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.LineSegment">
            <summary>
            Line in subpath.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.LineSegment.X">
            <summary>
            X coordinate of line's end.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.LineSegment.Y">
            <summary>
            Y coordinate of line's end.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment">
            <summary>
            Bezier in subpath.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.X1">
            <summary>
            X coordinate of first Bezier control point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.Y1">
            <summary>
            Y coordinate of first Bezier control point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.X2">
            <summary>
            X coordinate of second Bezier control point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.Y2">
            <summary>
            Y coordinate of second Bezier control point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.X3">
            <summary>
            X coordinate of third Bezier control point.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.BezierSegment.Y3">
            <summary>
            Y coordinate of third Bezier control point.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.OperatorInfo">
            <summary>
            Contains information about a PDF operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.OperatorInfo.Name">
            <summary>
            The operator name.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.OperatorInfo.Position">
            <summary>
            The index of operator in a content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.OperatorInfo.OperandCount">
            <summary>
            The count of operands.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.OperatorInfo.#ctor(System.String,GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.OperatorInfo"/> structure.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.OperatorInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.OperatorInfo.Equals(GrapeCity.Documents.Pdf.Parser.OperatorInfo)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator">
            <summary>
            Process a PDF operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator.Operator">
            <summary>
            The operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator.#ctor(System.String,GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator.Description">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.OperationProcessOperator.IsSame(GrapeCity.Documents.Pdf.Log.OperationBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfContentStreamProcessorException">
            <summary>
            The exception that is thrown when an error occurs while processing a PDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfContentStreamProcessorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfContentStreamProcessorException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfContentStreamProcessorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfContentStreamProcessorException"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfOperatorException">
            <summary>
            The exception that is thrown when a nested exception has occurred while processing a PDF operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfOperatorException.Operator">
            <summary>
            The operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfOperatorException.#ctor(GrapeCity.Documents.Pdf.Parser.OperatorInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfOperatorException"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamProcessor">
            <summary>
            The log entry that is added when processing a PDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamProcessor.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamProcessor"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamEnumerateException">
            <summary>
            The log entry that is added when an exception occurs while enumerating a content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamEnumerateException.Exception">
            <summary>
            The exception that occurred while enumerating a content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamEnumerateException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryContentStreamEnumerateException.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.LogEntryInvalidObjectContent">
            <summary>
            The log entry that is added when an object is invalid and cannot be processed by a PDF operation (rendering etc).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryInvalidObjectContent.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.LogEntryInvalidObjectContent"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.LogEntryObjectNotImplemented">
            <summary>
            Indicates that processing of this object is not implemented by a PDF operation (rendering etc).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryObjectNotImplemented.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.LogEntryObjectNotImplemented"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException">
            <summary>
            The log entry that is added when an exception occurs while processing a PDF operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException.Operator">
            <summary>
            The operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException.Exception">
            <summary>
            The exception occurs during processing the PDF operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException.#ctor(GrapeCity.Documents.Pdf.Log.LogEntrySeverity,GrapeCity.Documents.Pdf.Parser.OperatorInfo,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.LogEntryOperatorException.IsSame(GrapeCity.Documents.Pdf.Log.LogEntryBase)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode">
            <summary>
            Defines the possible modes of error handing when processing a content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode.Ignore">
            <summary>
            Ignore an error if possible and continue processing a content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode.Stop">
            <summary>
            Stop processing a content stream on error, do not throw an exception.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode.ThrowException">
            <summary>
            Throw an exception on error.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase">
            <summary>
            Base class for content stream processors.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.m_ResourceDictionary">
            <summary>
            The current resource dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.m_MarkedContentStack">
            <summary>
            The stack of marked content items started with BDC/EMC operators
            (<see cref="T:GrapeCity.Documents.Pdf.Layers.OptionalContentIdentifier"/>).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.m_CurrentOperatorPosition">
            <summary>
            The position of current PDF operator in the content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSaveGraphicsState">
            <summary>
            "q"
            Save the current graphics state on the graphics state stack
            (see “Graphics State Stack” on page 214).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpRestoreGraphicsState">
            <summary>
            "Q"
            Restore the graphics state by removing the most recently saved state from the stack
            and making it the current state (see “Graphics State Stack” on page 214).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpModifyCurrentTransformationMatrix(System.Numerics.Matrix3x2)">
            <summary>
            "cm"
            Modify the current transformation matrix (CTM) by concatenating the specified matrix
            (see Section 4.2.1, “Coordinate Spaces”).
            Although the operands specify a matrix, they are written as six separate numbers, not as an array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetLineWidth(System.Single)">
            <summary>
            "w"
            Set the line width in the graphics state (see “Line Width” on page 215).
            It is a non-negative number expressed in user space units;
            stroking a path entails painting all points whose perpendicular distance from the
            path in user space is less than or equal to half the line width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetLineCapStyle(System.Int32)">
            <summary>
            "J"
            Set the line cap style in the graphics state (see “Line Cap Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetLineJoinStyle(System.Int32)">
            <summary>
            "j"
            Set the line join style in the graphics state (see “Line Join Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetMiterLimit(System.Single)">
            <summary>
            "M"
            Set the miter limit in the graphics state (see “Miter Limit” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetLineDashPattern(System.Single,System.Single[])">
            <summary>
            "d"
            Set the line dash pattern in the graphics state (see “Line Dash Pattern” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorRenderingIntent(GrapeCity.Documents.Pdf.RenderingIntent)">
            <summary>
            "ri"
            (PDF 1.1) Set the color rendering intent in the graphics state
            (see “Rendering Intents” on page 260).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetFlatnessTolerance(System.Single)">
            <summary>
            "i"
            Set the flatness tolerance in the graphics state (see Section 6.5.1, “Flatness Tolerance”).
            flatness is a number in the range 0 to 100; a value of 0 specifies the output device’s
            default flatness tolerance.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetGraphicsStateParams(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "gs"
            (PDF 1.2) Set the specified parameters in the graphics state.
            dictName is the name of a graphics state parameter dictionary
            in the ExtGState subdictionary of the current resource dictionary (see the next section).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpBeginSubPath(System.Single,System.Single)">
            <summary>
            "m"
            Begin a new subpath by moving the current point to coordinates (x, y),
            omitting any connecting line segment.
            If the previous path construction operator in the current path was also m,
            the new m overrides it; no vestige of the previous m operation remains in the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpAppendLine(System.Single,System.Single)">
            <summary>
            "l"
            Append a straight line segment from the current point to the point (x, y).
            The new current point is (x, y).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpAppendBezier1(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "c"
            Append a cubic Bezier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x2 , y2 )
            as the Bezier control points (see “Cubic Bezier Curves,” below).
            The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpAppendBezier2(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "v"
            Append a cubic Bezier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ),
            using the current point and (x2 , y2 ) as the Bezier control points
            (see “Cubic Bezier Curves,” below). The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpAppendBezier3(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "y"
            Append a cubic Bezier curve to the current path.
            The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x3 , y3 )
            as the Bezier control points (see "Cubic Bezier Curves" below).
            The new current point is (x3 , y3 ).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpCloseSubPath">
            <summary>
            "h"
            Close the current subpath by appending a straight line segment from the current point
            to the starting point of the subpath. If the current subpath is already closed, h does nothing.
            This operator terminates the current subpath.
            Appending another segment to the current path begins a new subpath,
            even if the new segment begins at the endpoint reached by the h operation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpAppendRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "re"
            Append a rectangle to the current path as a complete subpath,
            with lower-left corner (x, y) and dimensions width and height in user space. The operation
              x y width height re
            is equivalent to:
              x y m
              (x + width ) y l
              (x + width ) ( y + height ) l
              x(y + height ) l
              h
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpStrokePath">
            <summary>
            "S"
            Stroke the path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpCloseStrokePath">
            <summary>
            "s"
            Close and stroke the path. This operator has the same effect as the sequence h S.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpFillNonZeroWindingPath">
            <summary>
            "f"
            Fill the path, using the nonzero winding number rule to determine the region to fill
            (see “Nonzero Winding Number Rule” on page 232).
            Any subpaths that are open are implicitly closed before being filled.
            
            Also this method executes "F" command.
            Equivalent to "f"; included only for compatibility. Although PDF consumer applications
            must be able to accept this operator, PDF producer applications should use "f" instead.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpFillEvenOddPath">
            <summary>
            "f*"
            Fill the path, using the even-odd rule to determine the region to fill
            (see “Even-Odd Rule” on page 233).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpFillStrokeNonZeroWindingPath">
            <summary>
            "B"
            Fill and then stroke the path, using the nonzero winding number rule to determine the region
            to fill. This operator produces the same result as constructing two identical path objects,
            painting the first with f and the second with S. Note, however, that the filling and
            stroking portions of the operation consult different values of several graphics state parameters,
            such as the current color.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpFillStrokeEvenOddPath">
            <summary>
            "B*"
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            This operator produces the same result as B, except that the path is filled as
            if with f* instead of f.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpCloseFillStrokeNonZeroWindingPath">
            <summary>
            "b"
            Fill and then stroke the path, using the nonzero winding number rule to determine the region
            to fill. This operator produces the same result as constructing two identical path objects,
            painting the first with f and the second with S. Note, however, that the filling and
            stroking portions of the operation consult different values of several graphics state parameters,
            such as the current color.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpCloseFillStrokeEvenOddPath">
            <summary>
            "b*"
            Fill and then stroke the path, using the even-odd rule to determine the region to fill.
            This operator produces the same result as B, except that the path is filled as
            if with f* instead of f.
            See also “Special Path-Painting Considerations” on page 569.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpClosePath">
            <summary>
            "n"
            End the path object without filling or stroking it.
            This operator is a path-painting no-op, used primarily for the side effect of changing
            the current clipping path (see Section 4.4.3, “Clipping Path Operators”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetClippingPathNonZeroWinding">
            <summary>
            "W"
            Modify the current clipping path by intersecting it with the current path,
            using the nonzero winding number rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetClippingPathEvenOdd">
            <summary>
            "W*"
            Modify the current clipping path by intersecting it with the current path,
            using the even-odd rule to determine which regions lie inside the clipping path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpBeginText">
            <summary>
            "BT"
            Begin a text object, initializing the text matrix, Tm , and the text line matrix, Tlm,
            to the identity matrix. Text objects cannot be nested; a second BT cannot appear before an ET.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpEndText">
            <summary>
            "ET"
            End a text object, discarding the text matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetCharacterSpacing(System.Single)">
            <summary>
            "Tc"
            Set the character spacing, Tc , to charSpace, which is a number expressed in unscaled text
            space units. Character spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetWordSpacing(System.Single)">
            <summary>
            "Tw"
            Set the word spacing, Tw , to wordSpace, which is a number expressed in unscaled text space units.
            Word spacing is used by the Tj, TJ, and ' operators. Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextHorizontalScaling(System.Single)">
            <summary>
            "Tz"
            Set the horizontal scaling, Th , to (scale ÷ 100). scale is a number specifying
            the percentage of the normal width. Initial value: 100 (normal width).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextLeading(System.Single)">
            <summary>
            "Tl"
            Set the text leading, Tl , to leading, which is a number expressed in unscaled text space units.
            Text leading is used only by the T*, ', and " operators. Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextFontAndSize(GrapeCity.Documents.Pdf.Spec.PdfName,System.Single)">
            <summary>
            "Tf"
            Set the text font, Tf , to font and the text font size, Tfs, to size.
            font is the name of a font resource in the Font subdictionary of the current resource dictionary;
            size is a number representing a scale factor.
            There is no initial value for either font or size;
            they must be specified explicitly by using Tf before any text is shown.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextRenderingMode(System.Int32)">
            <summary>
            "Tr"
            Set the text rendering mode, Tmode , to render, which is an integer. Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextRise(System.Single)">
            <summary>
            "Ts"
            Set the text rise, Trise, to rise, which is a number expressed in unscaled text space units.
            Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpMoveToNextLine(System.Single,System.Single)">
            <summary>
            "Td"
            Move to the start of the next line, offset from the start of the current line by (tx , ty ).
            tx and ty are numbers expressed in unscaled text space units.
            More precisely, this operator performs the following assignments:
                       | 1  0  0 |
            Tm = Tlm = | 0  1  0 | * Tlm
                       | tx ty 1 |
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpMoveToNextLineUpdateLeading(System.Single,System.Single)">
            <summary>
            "TD"
            Move to the start of the next line, offset from the start of the current line by (tx , ty ).
            As a side effect, this operator sets the leading parameter in the text state.
            This operator has the same effect as the following code:
            −ty TL
            tx ty Td
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetTextMatrix(System.Numerics.Matrix3x2)">
            <summary>
            "Tm"
            Set the text matrix, Tm , and the text line matrix, Tlm:
              Tm = Tlm = m
            The matrix specified by the operands is not concatenated onto the current text matrix, but replaces it.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpMoveToNextLine">
            <summary>
            "T*"
            Move to the start of the next line. This operator has the same effect as the code
              0 Tl Td
            where Tl is the current leading parameter in the text state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpShowText(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            "Tj"
            Show a text string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpShowText1(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            "'"
            Move to the next line and show a text string. This operator has the same effect as the code:
              T*
              str Tj
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpShowText2(System.Single,System.Single,GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            """
            Move to the next line and show a text string, using aw as the word spacing and ac as
            the character spacing (setting the corresponding parameters in the text state).
            aw and ac are numbers expressed in unscaled text space units.
            This operator has the same effect as the following code:
              aw Tw
              ac Tc
              str '
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpShowTextGlyphPositioning(GrapeCity.Documents.Pdf.Spec.PdfArray)">
            <summary>
            "TJ"
            Show one or more text strings, allowing individual glyph positioning
            (see implementation note 58 in Appendix H).
            Each element of array can be a string or a number.
            If the element is a string, this operator shows the string.
            If it is a number, the operator adjusts the text position by that amount;
            that is, it translates the text matrix, Tm.
            The number is expressed in thousandths of a unit of text space
            (see Section 5.3.3, “Text Space Details,” and implementation note 59 in Appendix H).
            This amount is subtracted from the current horizontal or vertical coordinate,
            depending on the writing mode.
            In the default coordinate system, a positive adjustment has the effect of
            moving the next glyph painted either to the left or down by the given amount.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorSpaceStroking(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "CS"
            
            (PDF 1.1) Set the current color space to use for stroking operations.
            The operand name must be a name object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorSpaceNonStroking(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "cs"
            
            (PDF 1.1) Same as CS but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColor1Stroking">
            <summary>
            "SC"
            
            (PDF 1.1) Set the color to use for stroking operations in a device,
            CIE-based (other than ICCBased), or Indexed color space.
            The number of operands required and their interpretation depends
            on the current stroking color space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColor1NonStroking">
            <summary>
            "sc"
            
            (PDF 1.1) Same as SC but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColor2Stroking">
            <summary>
            "SCN"
            
            Same as SC but also supports Pattern, Separation, DeviceN, andICCBased color spaces.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColor2NonStroking">
            <summary>
            "scn"
            
            (PDF 1.1) Same as SCN but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorGrayStroking">
            <summary>
            "G"
            
            Set the stroking color space to DeviceGray
            (or the DefaultGray color space; see “Default Color Spaces” on page 257)
            and set the gray level to use for stroking operations.
            gray is a number between 0.0 (black) and 1.0 (white).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorGrayNonStroking">
            <summary>
            "g"
            
            Same as G but used for nonstroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorRGBStroking">
            <summary>
            "RG"
            
            Set the stroking color space to DeviceRGB (or the DefaultRGB color space; see “Default Color Spaces” on page 257)
            and set the color to use for stroking operations.
            Each operand must be a number between 0.0 (minimum intensity) and 1.0 (maximum intensity).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorRGBNonStroking">
            <summary>
            "rg"
            
            Same as RG but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorCMYKStroking">
            <summary>
            "K"
            
            Set the stroking color space to DeviceCMYK (or the DefaultCMYK color space;
            see “Default Color Spaces” on page 257) and set the color to use for stroking operations.
            Each operand must be a number between 0.0 (zero concentration) and 1.0 (maximum concentration).
            The behavior of this operator is affected by the overprint mode
            (see Section 4.5.6, “Overprint Control”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpSetColorCMYKNonStroking">
            <summary>
            "k"
            
            Same as K but used for non-stroking operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpType3SetWidth(System.Single,System.Single)">
            <summary>
            "d0"
            Set width information for the glyph and declare that the glyph description specifies both its shape and its color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpType3SetWidthAndBoundingBox(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            "d1"
            Set width and bounding box information for the glyph and declare that the glyph description specifies only shape, not color.
            llx and lly are the coordinates of the lower-left corner, and urx and ury the upper-right corner, of the glyph bounding box.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpEndInlineImage(GrapeCity.Documents.Pdf.Graphics.Images.PdfInlineImage)">
            <summary>
            "EI"
            
            Ends inline image, defined using "BI" "ID" "EI" operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpDrawShading(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "sh"
            (PDF 1.3) Paint the shape and color shading described by a shading dictionary,
            subject to the current clipping path.
            The current color in the graphics state is neither used nor altered.
            The effect is different from that of painting a path using a shading pattern as the current color.
            name is the name of a shading dictionary resource in the Shading subdictionary of
            the current resource dictionary(see Section 3.7.2, “Resource Dictionaries”).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpDoXObject(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "Do"
            An external object (commonly called an XObject) is a graphics object
            whose contents are defined by a self-contained content stream,
            separate from the content stream in which it is used.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpMarkedContentPoint(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "MP"
            Designate a marked-content point. <paramref name="role"/> is a name object indicating the role or significance of the point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpMarkedContentPoint2(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "DP"
            Designate a marked-content point with an associated property list. <paramref name="role"/> is a name object indicating the role or significance of the point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpBeginMarkedContent(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "BMC"
            Begin a marked-content sequence terminated by a balancing EMC operator. <paramref name="role"/> is a name object indicating the role or significance of the sequence.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpBeginMarkedContent2(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            "BDC"
            Begin a marked-content sequence with an associated property list, terminated by a balancing EMC operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpEndMarkedContent">
            <summary>
            "EMC"
            End a marked-content sequence begun by a BMC or BDC operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpBeginCompatibilitySection">
            <summary>
            "BX"
            Begin a compatibility section. Unrecognized operators (along with their operands) are ignored without error until the balancing EX operator is encountered.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.OpEndCompatibilitySection">
            <summary>
            "EX"
            End a compatibility section begun by a balancing BX operator.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessorBase.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning processed content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator">
            <summary>
            Defines interface to enumerate PDF content streams.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.Reset">
            <summary>
            Moves to the start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.Next">
            <summary>
            Moves to the next operator, returns false if EOF.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.Operator">
            <summary>
            Gets a name of the current operator or null if EOF.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.Operands">
            <summary>
            Gets a list of operands for the current operator or null if EOF.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning the enumerated content stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.IContentStreamEnumerator.ParseInlineImages">
            <summary>
            Gets a value indicating whether inline images are parsed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.ContentStreamReader">
            <summary>
            Defines parser of PDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Read">
            <summary>
            Reads value from the current position it can be any valid PDF identifier: number, string, dictionary etc.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Next">
            <summary>
            Reads next operator from underlying PDF content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.ParseInlineImages">
            <summary>
            Gets a value indicating whether inline images should be parsed, if false
            then <see cref="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Operands"/> stack will be empty for EI operator.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Operator">
            <summary>
            Gets the operator where this <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamReader"/> is positioned by the <see cref="M:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Next"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Operands">
            <summary>
            Gets the operands for the current <see cref="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Operator"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.ContentStreamReader.Doc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.FdfParser">
            <summary>
            Parses FDF stream into dictionary of PDF objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.FdfParser.Objects">
            <summary>
            The dictionary of parsed PDF objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.FdfParser.Version">
            <summary>
            The FDF version.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.FdfParser.CatalogObject">
            <summary>
            The FDF catalog object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.MarkedContentStack.CurrentLayer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Parser.MarkedContentStackLayerItem"/> object representing the current PDF layer.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase">
            <summary>
            Base class for PDF document streams parsers.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.m_ReadObjID">
            <summary>
            The ID of the currently read PDF object, used in decryption.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.ReadNumberOrRef">
            <summary>
            Reads <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> or <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>, assumes that stream positioned on first digit.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.ReadObjectHeader(GrapeCity.Documents.Pdf.Spec.PdfObjID@)">
            <summary>
            Reads the object's header "10 0 obj", assumes stream is positioned on header of object like "10 0 obj" or on whitespace
            before this header.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.Read">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfDocStreamReaderBase.ReadPdfObject">
            <summary>
            Reads a PDF object, assumes stream is positioned on a header of object like "10 0 obj" or on whitespace
            before this header.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfObjectStreamReader">
            <summary>
            The parser of PDF Object Stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfObjectStreamReader.Doc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParserException">
            <summary>
            Represents common exception occurs during parsing PDF content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParserException.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParserException"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParserException.#ctor(System.String,System.Exception,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParserException"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfParserException.StreamPosition">
            <summary>
            Gets the position in the stream where exception occurs.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser">
            <summary>
            Parses the PDF stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.c_flgReadRoot">
            <summary>
            The Root object is currently read from a PDF stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.c_flgReadSignature">
            <summary>
            The Signature object is currently read from a PDF stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser._doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStreams">
            <summary>
            The dictionary of <see cref="T:GrapeCity.Documents.Pdf.Spec.ObjectStream"/> objects, generated during structure parsing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.UnencryptedObjects">
            <summary>
            Contains IDs of objects which do not require a decryption.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.MainCrossReferenceIndexPos">
            <summary>
            Position of main cross-reference table or stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.MainCrossReferenceIndexType">
            <summary>
            Type of main cross-reference (Table or Stream).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.GetStartxrefPosition">
            <summary>
            Returns a position of the main Cross-Reference Table or Cross-Reference Stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.Findxref">
            <summary>
            Searches for xref table at the end of stream,
            if found the <see cref="T:System.IO.Stream"/> positioned AFTER xref,
            the return value points to the start of xref.
            Note! The method is slow, it should be called rarely.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.ReadReferences(GrapeCity.Documents.Pdf.Parser.PdfParser.TrailerInfo,System.Int32@)">
            <summary>
            Builds the <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_CrossReferenceIndex"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.ReadCrossReferenceTable(GrapeCity.Documents.Pdf.Parser.PdfParser.TrailerInfo,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Reads Cross-Reference table, assumes stream is positioned after "xref" token.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.ReadCrossReferenceStream(GrapeCity.Documents.Pdf.Parser.PdfParser.TrailerInfo,System.Int32,System.Int32@)">
            <summary>
            Reads a Cross-Reference stream object,
            assumes the stream is positioned on the object header like "10 0 obj".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.GetStreamLength(GrapeCity.Documents.Pdf.Spec.PdfStreamObject,System.Int64@,System.Int64@)">
            <summary>
            Gets the "length" of the stream,
            propLength - the value specified in the Length dictionary property, -1 if it is not specified at all
            realLength - the actual length as distance in bytes between "stream" and "endstream"
            returns true if realLength was successfully calculated.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.DeepParseCrossReferenceStream(GrapeCity.Documents.Pdf.Parser.PdfParser.TrailerInfo,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Reads Cross-Reference stream object, assumes stream is positioned on object header like "10 0 obj".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.ReadStructure(GrapeCity.Documents.Pdf.DecryptionOptions,GrapeCity.Documents.Pdf.Spec.IPdfDict@,GrapeCity.Documents.Pdf.Spec.IPdfDict@,GrapeCity.Documents.Pdf.Spec.IPdfDict@,System.Boolean@,System.String@)">
            <summary>
            Reads the main PDF objects (Root, FileID, DocumentInfo, Pages),
            can throw an exception if stream contains invalid / unknown data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.GetStreamData(GrapeCity.Documents.Pdf.Spec.PdfStreamObject,GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.Boolean)">
            <summary>
            Returns the <see cref="T:System.IO.Stream"/> containing data of PDF Stream Object.
            Note! The method returns null if data failed to get.
            Note! The data returned as is, it is NOT decoded.
            Note! The stream should be disposed after usage.
            Note! This method affects <see cref="P:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Position"/> of this <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.GetDecodedStream(GrapeCity.Documents.Pdf.Spec.PdfStreamObject,GrapeCity.Documents.Pdf.Security.EncryptionStreamType)">
            <summary>
            Decodes the PDF Stream Object and returns <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo"/>.
            Returns null if PDF Stream Object failed to decode.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.TryDecodeStream(GrapeCity.Documents.Pdf.Spec.PdfStreamObject,GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.IO.Stream@,GrapeCity.Documents.Pdf.Spec.PdfName@,GrapeCity.Documents.Pdf.Spec.IPdfDict@,System.Boolean@,GrapeCity.Documents.Pdf.Spec.IPdfDict@,System.Int64@)">
            <summary>
            Tries to decode the PDF Stream Object.
            Note! The method returns false if data failed to get.
            Note! The image filter (if used) is not applied, the <paramref name="imageFilterName"/> 
            and <paramref name="imageFilterDecodeParams"/>
            will contain name and parameters of the image filter.
            The method assumes that the image filter is last
            in the "Filters" array otherwise method returns null.
            Note! The <paramref name="stream"/> should be disposed after usage.
            Note! This method affects <see cref="P:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Position"/> of this <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.PrepareDetachedStream(GrapeCity.Documents.Pdf.Spec.PdfStreamObject,GrapeCity.Documents.Pdf.Spec.PdfDetachedStreamObject,System.Boolean)">
            <summary>
            Fills properties of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDetachedStreamObject"/> using
            <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfParser.Doc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.StateUpdater">
            <summary>
            Updates the state of <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser"/>, should be used with "using":
            using (StateUpdater su = StateUpdater.SetFlag(parser, c_flgReadRoot))
                { ... }
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfParser.StateUpdater.SetFlag(GrapeCity.Documents.Pdf.Parser.PdfParser,System.Int32)">
            <summary>
            Sets the flag specified by <paramref name="flg"/> in <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_Flags"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.CrossReferenceIndexType">
            <summary>
            The type of cross-reference index.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.CrossReferenceIndexType.Table">
            <summary>
            xref table.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfParser.CrossReferenceIndexType.Stream">
            <summary>
            Cross-reference stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.ObjectStreamEntryInfo">
            <summary>
            The entry in the PDF Object Stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfParser.IndexEntry">
            <summary>
            Defines single entry of Index array in Cross-Reference stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase">
            <summary>
            Base class for PDF streams readers.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Stream">
            <summary>
            The underlying <see cref="T:System.IO.Stream"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_LastChar">
            <summary>
            The last byte read from the <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Stream"/> or -1 if EOF.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_Cache">
            <summary>
            The <see cref="T:System.Text.StringBuilder"/> used in internal operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_BytesCache">
            <summary>
            The <see cref="T:GrapeCity.Documents.Common.ByteList"/> used in internal operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_ReadDictKey">
            <summary>
            The name of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> property currently read.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_Flags">
            <summary>
            The boolean flags.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadDict">
            <summary>
            Reads the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/>, assumes the stream is positioned on SECOND '&lt;' char.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadArray">
            <summary>
            Reads the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/>, assumes stream is positioned on '['.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.IsWhiteSpace(System.Int32)">
            <summary>
            Checks does <paramref name="code"/> is white-space: 0, 32, 9, 10, 13
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.IsWhiteSpaceNotEol(System.Int32)">
            <summary>
            Checks does <paramref name="code"/> is white-space: 0, 32, 9
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipWhiteSpaceChars">
            <summary>
            Skips all white-spaces, returns <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_LastChar"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipToEofDict">
            <summary>
            Skips all bytes till end of PDF dictionary ">>".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipToEol">
            <summary>
            Skips all bytes till CR or LF character.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipEol">
            <summary>
            Skips all CR or LF characters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipComment">
            <summary>
            Skips PDF comment, including EOL and white-spaces after comment,
            assumes that stream positioned on first comment char '%'.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipWhiteSpaceAndComment">
            <summary>
            Skips all white-spaces and PDF comment if it exists.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.SkipWhiteSpaceCharsNoEol">
            <summary>
            Skips all white-space bytes, but stops on 13 or 10.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.TryReadInt(System.Int32@)">
            <summary>
            Tries to read an integer from the current position, assumes stream is positioned on first digit.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.TryReadLong(System.Int64@)">
            <summary>
            Tries to read a long from the current position, assumes stream is positioned on first digit.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.CheckIdent(System.Byte[])">
            <summary>
            Checks does the current position points to <paramref name="expectedIdent"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadIdent">
            <summary>
            Reads all bytes till whitespace or delimiter and combines them into string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadIdentEx">
            <summary>
            Skips all white-space and comments, reads all not white-space characters into string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadName">
            <summary>
            Reads the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>, assumes stream is positioned on '/'.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.CreateString">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>, the <see cref="F:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.m_BytesCache"/> contains the string data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadString">
            <summary>
            Reads the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>, assumes stream is positioned on '('.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadHexString">
            <summary>
            Reads the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> in HEX format, assumes stream is positioned AFTER '&lt;'.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.ReadNumber">
            <summary>
            Reads the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/>, assumes stream is positioned on first char of number.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Seek(System.Int64)">
            <summary>
            Sets a position in underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets a position in underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Read">
            <summary>
            Reads the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> from the current position,
            assumes stream is positioned on white-space or first char of the object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.TryParseDouble(System.String,System.Double@)">
            <summary>
            Tries to convert a string to double.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.TryParseInt(System.String,System.Int32@)">
            <summary>
            Tries to convert a string to int.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.TryParseLong(System.String,System.Int64@)">
            <summary>
            Tries to convert a string to long.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Position">
            <summary>
            Gets position in underlying stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Parser.PdfStreamReaderBase.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfDateTime">
            <summary>
            Represents a PDF DateTime type.
            </summary>
            <remarks>
            <para>
            The PDF Specification does not define a special type for DateTime values,
            such values are stored as strings in a special format, similar to (D:YYYYMMDDHHmmSSOHH'mm'),
            see the spec for details (PDF 1.7 chapter 3.8.3).
            </para>
            <para>
            But there are many PDF documents in which DateTime strings are specified
            in some custom format, for example using a regional format.
            GcPdf uses this struct when processing such values.
            Where possible, the value is converted to <see cref="T:System.DateTimeOffset"/>,
            otherwise it preserves the original string value.
            </para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> struct
            using a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> struct
            using a string. 
            The passed string is converted to <see cref="T:System.DateTimeOffset"/> if possible.
            </summary>
            <param name="value">The string representing a date time value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.#ctor(GrapeCity.Documents.Pdf.Spec.IPdfString)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> struct
            using a <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/>. 
            The passed string is converted to <see cref="T:System.DateTimeOffset"/> if possible.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/> representing a date time value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.ToString(System.String)">
            <summary>
            Converts this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> to string,
            using a specified format if the current struct holds a DateTime value.
            </summary>
            <param name="dateTimeFormat">The date time format.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.Equals(GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> is equal to another <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>.
            </summary>
            <param name="other">The <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value to compare to.</param>
            <returns>True if values are equal, false otherwise.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDateTime.IsString">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> struct
            contains a string value which cannot be converted to <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDateTime.DateTimeValue">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value representing local time.
            Throws an exception if this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> is represented by an unparsed string.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDateTime.DateTimeOffset">
            <summary>
            Gets the <see cref="T:System.DateTimeOffset"/> value defined by this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>.
            Throws an exception if this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> is represented by an unparsed string.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDateTime.Value">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/> representing the value of this <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.op_Implicit(System.DateTime)~GrapeCity.Documents.Pdf.PdfDateTime">
            <summary>
            Converts a <see cref="T:System.DateTime"/> value to <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.op_Equality(GrapeCity.Documents.Pdf.PdfDateTime,GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            The equality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.op_Inequality(GrapeCity.Documents.Pdf.PdfDateTime,GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            The inequality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.DateTimeToPdfString(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime"/> value to a string in PDF format
            as described in PDF 1.7 specification chapter 3.8.3.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value.</param>
            <returns>Returns string with formatted datetime.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.DateTimeToPdfString(System.DateTimeOffset)">
            <summary>
            Converts a <see cref="T:System.DateTimeOffset"/> value to a string in PDF format
            as described in PDF 1.7 specification chapter 3.8.3.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value.</param>
            <returns>Returns string with formatted datetime.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDateTime.TryParse(System.String,System.DateTimeOffset@)">
            <summary>
            Tries to convert a string to <see cref="T:System.DateTimeOffset"/>.
            See PDF 1.7 specification chapter 3.8.3.
            </summary>
            <param name="s">The string in the format D:YYYYMMDDHHmmSSOHH'mm'.</param>
            <param name="value">OUT: The parsed <see cref="T:System.DateTimeOffset"/> value.</param>
            <returns>True if conversion succeed, false otherwise.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfEnum`1">
            <summary>
            Represents a PDF enumeration type.
            </summary>
            <remarks>
            <para>
            The PDF Specification defines many properties with values represented by a limited set of predefined values.
            Such values are stored as PDF name objects, which is very similar to enumerations in C#.
            </para>
            <para>
            But there are many PDF documents in which some of such properties have arbitrary custom values
            that are not defined in the PDF specification.
            </para>
            <para>
            GcPdf uses this struct when processing such values.
            Where possible, the value is converted to the underlying enumeration type <typeparamref name="TEnum"/>,
            otherwise the original string value is preserved.
            </para>
            </remarks>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct
            using a <typeparamref name="TEnum"/> value.
            </summary>
            <param name="value">The <typeparamref name="TEnum"/> value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct
            using a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> object. 
            The passed <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> is converted to <typeparamref name="TEnum"/> if possible.
            </summary>
            <param name="value">The string representing a <typeparamref name="TEnum"/> value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct
            using a string. 
            The passed string is converted to <typeparamref name="TEnum"/> if possible.
            </summary>
            <param name="value">The string representing a <typeparamref name="TEnum"/> value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.Equals(GrapeCity.Documents.Pdf.PdfEnum{`0})">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> is equal to another <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            </summary>
            <param name="other">The <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value to compare to.</param>
            <returns>True if the values are equal, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.Equals(`0)">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> is equal to TEnum value.
            </summary>
            <param name="other">The TEnum value to compare to.</param>
            <returns>True if the values are equal, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.GetEnumValue(`0)">
            <summary>
            Returns the <see cref="P:GrapeCity.Documents.Pdf.PdfEnum`1.EnumValue"/> if <see cref="P:GrapeCity.Documents.Pdf.PdfEnum`1.IsString"/> is false, <paramref name="defValue"/> otherwise.
            </summary>
            <param name="defValue">The default value if this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> has no enumeration value.</param>
            <returns><see cref="P:GrapeCity.Documents.Pdf.PdfEnum`1.EnumValue"/> if <see cref="P:GrapeCity.Documents.Pdf.PdfEnum`1.IsString"/> is false, <paramref name="defValue"/> otherwise.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfEnum`1.IsString">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct
            contains a string value which cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfEnum`1.IsPdfValue">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> struct
            contains a PDF value which cannot be converted to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfEnum`1.EnumValue">
            <summary>
            Gets the <typeparamref name="TEnum"/> value defined by this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            Throws an exception if this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> is represented by an unparsed PDF value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfEnum`1.PdfValue">
            <summary>
            Gets the PDF value defined by this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            Throws an exception if this <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> is represented by a parsed <typeparamref name="TEnum"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.Equals(System.Nullable{GrapeCity.Documents.Pdf.PdfEnum{`0}},System.Nullable{`0})">
            <summary>
            Returns true if nullable <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> equals to nullable <typeparamref name="TEnum"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.op_Implicit(`0)~GrapeCity.Documents.Pdf.PdfEnum{`0}">
            <summary>
            Converts a <typeparamref name="TEnum"/> value to <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/>.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.op_Implicit(GrapeCity.Documents.Pdf.PdfEnum{`0})~`0">
            <summary>
            Converts a <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value to <typeparamref name="TEnum"/>.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.op_Equality(GrapeCity.Documents.Pdf.PdfEnum{`0},GrapeCity.Documents.Pdf.PdfEnum{`0})">
            <summary>
            Equality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfEnum`1.op_Inequality(GrapeCity.Documents.Pdf.PdfEnum{`0},GrapeCity.Documents.Pdf.PdfEnum{`0})">
            <summary>
            Inequality operator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfNumberTree`1">
            <summary>
            Contains utilities to work with PDF number trees.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfNumberTree`1.ReadNumberTree(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.PdfNumberTree{`0}.AddValueDelegate)">
            <summary>
            Parses number tree represented by PdfDict.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfNumberTree`1.AddValueDelegate">
            <summary>
            Callback method called to parse value associated with the number.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Properties.Resources.qq">
            <summary>
              Looks up a localized string similar to aa.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RawImageFormat">
            <summary>
            Specifies a format of <see cref="T:GrapeCity.Documents.Pdf.RawImage"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RawImageFormat.Jpeg">
            <summary>
            JPEG image.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RawImageFormat.Jpeg2000">
            <summary>
            JPEG2000 image.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RawImage">
            <summary>
            Represents an image natively supported by the PDF format.
            <para>
            Raw images are inserted into PDF as is, without any processing.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RawImage.FromFile(System.String,GrapeCity.Documents.Pdf.RawImageFormat,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> class from a disk file,
            <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> supports only JPEG or JPEG2000 image formats.
            </summary>
            <param name="fileName">The image file name.</param>
            <param name="format">The format of the image.</param>
            <param name="width">The width of the image in pixels.</param>
            <param name="height">The height of the image in pixels.</param>
            <param name="horizontalResolution">The horizontal resolution.</param>
            <param name="verticalResolution">The vertical resolution.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RawImage.FromStream(System.IO.Stream,GrapeCity.Documents.Pdf.RawImageFormat,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> class from a stream,
            <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> supports only JPEG or JPEG2000 image formats.
            </summary>
            <param name="stream">The stream containing image data.</param>
            <param name="format">The format of the image.</param>
            <param name="width">The width of the image in pixels.</param>
            <param name="height">The height of the image in pixels.</param>
            <param name="horizontalResolution">The horizontal resolution.</param>
            <param name="verticalResolution">The vertical resolution.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RawImage.FromBytes(System.Byte[],GrapeCity.Documents.Pdf.RawImageFormat,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> class from a byte array,
            <see cref="T:GrapeCity.Documents.Pdf.RawImage"/> supports only JPEG or JPEG2000 image formats.
            </summary>
            <param name="data">The byte array containing image data.</param>
            <param name="format">The format of the image.</param>
            <param name="width">The width of the image in pixels.</param>
            <param name="height">The height of the image in pixels.</param>
            <param name="horizontalResolution">The horizontal resolution.</param>
            <param name="verticalResolution">The vertical resolution.</param>
            <returns></returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.Data">
            <summary>
            Gets the image data.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.Format">
            <summary>
            Gets the format of the image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.HorizontalResolution">
            <summary>
            Gets the horizontal resolution of the image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RawImage.VerticalResolution">
            <summary>
            Gets the vertical resolution of the image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.IAcrobatLikeRecognitionOptions.CoefVertLinearization">
            <summary>
            Gets or sets a coefficient used to determine if the vertical intersection ratio between two text primitives
            correspond to a text line. The default is 0.6.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.IAcrobatLikeRecognitionOptions.CoefSpacing">
            <summary>
            Gets or sets a coefficient used to detect whitespaces between tokens.
            The default is 0.15.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions">
            <summary>
            <para>For internal use.</para>
            Represents recognition options for the Adobe Acrobat-like recognition algorithm.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions.CoefVertLinearization">
            <summary>
            Gets or sets a coefficient used to determine if the vertical intersection ratio between two text primitives
            correspond to a text line. The default is 0.6.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions.CoefSpacing">
            <summary>
            Gets or sets a coefficient used to detect whitespaces between tokens.
            The default is 0.15.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions">
            <summary>
            <para>For internal use.</para>
            Represents recognition options used by the advanced algorithm
            when building text maps.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions.CoefLinearization">
            <summary>
            Gets or sets a coefficient used to determine if the horizontal distance between two text primitives
            correspond to a text line. The default is 0.9.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions.CoefClustering">
            <summary>
            Gets or sets a coefficient used to determine if the distance between two text primitives
            corresponds to a text cluster. The default is 0.7.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions.CoefInterlineChange">
            <summary>
            Gets or sets a coefficient used to split text clusters when distance between text lines changes.
            The default is 0.2.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions.CoefSpacing">
            <summary>
            Gets or sets a coefficient used to detect whitespaces between tokens.
            The default is 0.15.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Cluster">
            <summary>
            Represents a block of text in <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer"/>,  it is a list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement">
            <summary>
            Common interface for <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Cluster"/> and <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Image"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement.GetBoundsR">
            <summary>
            Returns the bounds of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement"/> in the "recognition" coordinate space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement.GetBounds">
            <summary>
            Returns the bounds of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement"/> on a page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.IElement.Clone(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.CloneContext)">
            <summary>
            Returns a clone of the object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.ImageRef">
            <summary>
            Extends the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Image"/> with additional properties
            required for <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.LayerRef">
            <summary>
            Extends the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/> with additional properties
            required for <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line">
            <summary>
            Represents a line of text in <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer"/>, it is a list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetFontHeight(System.Single)">
            <summary>
            Returns the line font height, this value can be used to determine whether lines have equal
            font height.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetBoundsR">
            <summary>
            Returns line's bounds in "recognition" coordinate space,
            the result rectangle contains all text tokens forming the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetGBoundsR">
            <summary>
            Returns line's glyph bounds in "recognition" coordinate space,
            the result rectangle contains all text tokens forming the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetArea">
            <summary>
            Returns the line's area as a list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetPoints">
            <summary>
            Returns the array of points defining the line's area.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetGArea">
            <summary>
            Returns the line's "glyph" area as a list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Line.GetGPoints">
            <summary>
            Returns the array of points defining the line's "glyph" area.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.RecognizerCallback">
            <summary>
            The callback method called during recognition process.
            Used for debug purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.TokenizationBuildRelations(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Builds properties:
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef.LeftTokens"/>,
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef.RightTokens"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Linearization(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Combines <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/> objects into <see cref="T:GrapeCity.Documents.Text.TextLine"/> objects using following rules:
            -) The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/> objects should have similar FontSizeY:
               tta.Attrs.FontSizeY - ttb.Attrs.FontSizeY &lt;= CoefPrecision * Min(tta.Attrs.FontSizeY, ttb.Attrs.FontSizeY)
            -) The horizontal distance between tokens should be less than CoefHorzLinearization * Min(tta.Attrs.FontSizeX, ttb.Attrs.FontSizeX)
            -) Tokens should overlap vertically more than CoefVertLinearization.
               Note! Token added to the line only if it intersects on more then CoefVertLinearization
               with ALL tokens already exists in the line
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.LinearizationMergeLinesByTokenRelations">
            <summary>
            Merge lines connected via <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef.LeftTokens"/> or <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef.RightTokens"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.LinearizationDropCap(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Merges drop-cap lines.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Clustering(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Combines text lines into text clusters using following rules:
            -) Lines have same font size
            -) Lines intersect horizontally 
            -) The vertical distance between lines less than CoefClustering
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.ClusteringInterlineChangeDetection(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Split clusters if distance between lines changes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.PageReadingOrder(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Builds <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Elements"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.ClusteringBuildParagraphs(GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Comparer)">
            <summary>
            Splits text clusters into paragraphs if possible.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Clone">
            <summary>
            Clones this <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer"/>.
            Used for debug purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Recognizer.Recognize(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Pdf.Recognition.Core.ContentMap,GrapeCity.Documents.Pdf.Recognition.AdvancedRecognitionOptions,GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.RecognizerCallback)">
            <summary>
            Performs the recognition.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Stage">
            <summary>
            Represents a stage of recognition process.
            Used for debug purposes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Stage.Title">
            <summary>
            The stage title, a short description.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Stage.Description">
            <summary>
            The stage description.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.Stage.Index">
            <summary>
            The ordinal index of the stage.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokensStage">
            <summary>
            Information about text tokens is updated during this stage
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.LinesStage">
            <summary>
            Information about text lines is updated during this stage
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.ClustersStage">
            <summary>
            Information about text clusters is updated during this stage.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.ElementsStage">
            <summary>
            Information about page elements is updated during this stage.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRefFlags">
            <summary>
            Defines possible values for <see cref="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef.Flags"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRefFlags.DropCap">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef"/> is a drop-cap.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AdvancedRecognizer.TokenRef">
            <summary>
            Extends the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/> with additional properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions">
            <summary>
            <para>For internal use.</para>
            Base class implementing the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions"/> interface.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.AssignFrom(GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions)">
            <summary>
            Copies properties from another object.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.IncludeInvisibleText">
            <summary>
            Gets or sets a value indicating whether to process text that was rendered
            using the invisible text rendering mode (text is neither filled nor stroked).
            <para>The default is true.</para>
            </summary>
            <remarks>See PDF Spec 2.0, Table 104, Mode 3.</remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.CoefPrecision">
            <summary>
            Gets or sets a coefficient used to determine whether two values are similar.
            <para>The default is 0.25.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.CoefTokenization">
            <summary>
            Gets or sets a coefficient used to determine whether the distance between two text primitives
            corresponds to a text token.
            <para>The default is 0.08.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.CoefDuplicateTokens">
            <summary>
            Gets or sets a coefficient used to determine whether two text tokens overlap.
            <para>The default is 0.85.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.CoefHorzOverlay">
            <summary>
            Gets or sets a coefficient used to determine whether two text primitives overlay horizontally.
            <para>The default is 0.10.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.CoefVertOverlay">
            <summary>
            Gets or sets a coefficient used to determine whether two text primitives overlay vertically.
            <para>The default is 0.12.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.BuildImages">
            <summary>
            For internal use.
            Indicates whether to build <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Images"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.ContentMapOptions.BuildPaths">
            <summary>
            For internal use.
            Indicates whether to build <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Paths"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.Conflicts.ConflictOverlayTokens">
            <summary>
            Tokens are overlay.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMapCallback">
            <summary>
            Represents the method that called during building a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions">
            <summary>
            Defines the options used to build a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.IncludeInvisibleText">
            <summary>
            Gets or sets a value indicating whether to process a text rendered when text rendering mode is "Invisible".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefPrecision">
            <summary>
            Gets or sets a coefficient used to determine whether or not two values are similar.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefTokenization">
            <summary>
            Gets or sets a coefficient used to determine if the distance between two text primitives
            corresponds to text token.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefDuplicateTokens">
            <summary>
            Gets or sets a coefficient used to determine whether text tokens are overlapped.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefHorzOverlay">
            <summary>
            Gets or sets a coefficient used to determine whether two text primitives overlay horizontally.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefVertOverlay">
            <summary>
            Gets or sets a coefficient used to determine whether two text primitives overlay vertically.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.BuildImages">
            <summary>
            Gets or sets a value indicating whether to build <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Images"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.BuildPaths">
            <summary>
            Gets or sets a value indicating whether to build <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Paths"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap">
            <summary>
            Represents the low level map of PDF objects created from PDF content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Stages">
            <summary>
            The list of stages performed during building process.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefCoefPrecision">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefPrecision"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefCoefTokenization">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefTokenization"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefBuildImages">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.BuildImages"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefBuildPaths">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.BuildPaths"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefCoefDuplicateTokens">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefDuplicateTokens"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefCoefHorzOverlay">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefHorzOverlay"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefCoefVertOverlay">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefVertOverlay"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_DefIncludeInvisibleText">
            <summary>
            The default value of <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.IncludeInvisibleText"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_TextMapHeightIncreaseRatio">
            <summary>
            The height of text lines in text map increased by this value
            to top and to bottom.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Layers">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/> objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Paths">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.RemoveDuplicateTokens(GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Comparer)">
            <summary>
            Removes overlapped tokens with same font size, it handles situation when
            same text rendered several times at same position with minor offset to
            emulate the bold font.
            Tokens are overlapped if they intersect and the intersection area larger than 
            <see cref="P:GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions.CoefDuplicateTokens"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Tokenization(GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Comparer)">
            <summary>
            Merge text tokens if following rules are valid:
            -) Tokens have same formatting
            -) Horizontal distance between tokens less than CoefTokenization:
               HorzDistance &lt; CoefTokenization * Min(tta.Attrs.FontSizeX, ttb.Attrs.FontSizeX)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.TokenizationDetectOverlays(GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Comparer)">
            <summary>
            Calculates <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.OverlayIndex"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Cut(System.Drawing.RectangleF)">
            <summary>
            Returns a fragment of this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>,
            <paramref name="bounds"/> should be specified relative to top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Clone">
            <summary>
            Create a clone of this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Create(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Operators.OperatorBase},System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions,GrapeCity.Documents.Pdf.Recognition.Core.ContentMapCallback)">
            <summary>
            Creates <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/> from list of PDF operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Create(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode,System.Boolean,GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions,GrapeCity.Documents.Pdf.Recognition.Core.ContentMapCallback)">
            <summary>
            Creates <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/> from PDF page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.ImageFlags">
            <summary>
            Defines possible values of <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.Flags"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.ImageFlags.IntersectsWithText">
            <summary>
            Indicates whether an image intersects with text.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.Image">
            <summary>
            Represents an image in content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.Owner">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Image"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.PdfImage">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Graphics.Images.PdfImageBase"/> object producing this object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.Bounds">
            <summary>
            The position of the image on its page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.BoundsR">
            <summary>
            The position of the image in the "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.Flags">
            <summary>
            The image flags.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Image.OperatorIndex">
            <summary>
            The index of PDF operator generating this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Image"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer">
            <summary>
            Represents a group of PDF objects with same rotation angle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.RotationAngle">
            <summary>
            The rotation angle in radians.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Sin">
            <summary>
            The Sin of <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.RotationAngle"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Cos">
            <summary>
            The Cos of <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.RotationAngle"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Tokens">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/> objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Images">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Image"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.Layer.GetPoint(System.Single,System.Single)">
            <summary>
            Converts a point in "recognition" coordinate space to a point
            in page coordinate space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.Layer.GetBounds(System.Drawing.RectangleF)">
            <summary>
            Converts a rectangle in "recognition" coordinate space to a <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>
            in page coordinate space.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.Layer.GetTextLength">
            <summary>
            Returns length of text in this layer.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Cut(System.Drawing.RectangleF)">
            <summary>
            Returns a fragment of this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/>,
            <paramref name="bounds"/> should be specified relative to top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.Layer.Clone">
            <summary>
            Creates a copy of this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath">
            <summary>
            Represents a PDF path in content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath.Path">
            <summary>
            The PDF path object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath.Matrix">
            <summary>
            The transformation matrix when <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath"/> was used.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath.OperatorName">
            <summary>
            The name of PDF operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.PdfPath.OperatorIndex">
            <summary>
            The index of PDF operator in content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.TextAttrs">
            <summary>
            Represents an attributes of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextAttrs.Equals(GrapeCity.Documents.Pdf.Recognition.Core.TextAttrs,System.Single)">
            <summary>
            Returns true if this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextAttrs"/> equal to <paramref name="other"/>.
            The <paramref name="coefPrecision"/> used to compare the font size.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem">
            <summary>
            The item of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/>, represents a separate character.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem.DimensionR">
            <summary>
            The width for the horizontal text token and height for vertical
            in the "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem.GBoundsR">
            <summary>
            The glyph bounds in the "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem.CharInfo">
            <summary>
            The parameters of character from PDF operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem.Clone">
            <summary>
            Clones this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken">
            <summary>
            Represents the text token, it is a list of characters with same formatting.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.Layer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/> containing this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.OperatorIndex">
            <summary>
            The index of PDF operator generating this token.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.Attrs">
            <summary>
            The text attributes used by this token.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.PositionRY">
            <summary>
            The Y coordinate of baseline in the "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.BoundsR">
            <summary>
            The bounds in "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GBoundsR">
            <summary>
            The glyph bounds, calculated on the base of children <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem.GBoundsR"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.OverlayIndex">
            <summary>
            The overlay index, tokens can be combined in lines and clusters if they have same <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.OverlayIndex"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.Matrix">
            <summary>
            The active matrix when token is rendered.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetTextMapBoundsR">
            <summary>
            Returns the <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GBoundsR"/> rectangle increased
            by <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.c_TextMapHeightIncreaseRatio"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetBaseLineStartPoint">
            <summary>
            Returns the position of token base line relative to the top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetBounds(System.Drawing.RectangleF)">
            <summary>
            Converts rectangle in "recognition" coordinate space to page coordinate space using
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.Matrix"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetBounds">
            <summary>
            Returns the bounds of token relative to the top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetGBounds">
            <summary>
            Returns the "glyph" bounds of token relative to the top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetPoints(System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Used for visualization purposes, returns coordinates of points at the middle of
            left, top, right and bottom edges.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetGPoints(System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Used for visualization purposes, returns coordinates of points at the middle of
            left, top, right and bottom edges.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.TextToken.GetItemGBounds(System.Int32)">
            <summary>
            Returns the "glyph" bounds of <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextTokenItem"/> with specified index relative
            to the top-left corner of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.GetMinDistanceBetweenRows(System.Collections.Generic.IEnumerable{GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.ElementLink},GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options)">
            <summary>
            Calculates a minimal possible distance between table's rows.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.GetMinDistanceBetweenColumns(System.Collections.Generic.IEnumerable{GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.ElementLink},GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options)">
            <summary>
            Calculates a minimal possible distance between table's columns.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options.MinimumColWidth">
            <summary>
            Gets or sets the minimum column width.
            <para>The default is 1.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options.MinimumRowHeight">
            <summary>
            Gets or sets the minimum row height.
            <para>The default is 1.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options.GetMinimumDistanceBetweenRows">
            <summary>
            Gets or sets a function that is called to determine the minimum possible distance between rows.
            The function parameter is the collection of tokens' heights.
            <para>
            The default implementation returns the statistical mode, unless its value is 0 or NaN
            in which case the average is returned.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Core.XYCutSegmenter.Options.GetMinimumDistanceBetweenCols">
            <summary>
            Gets or sets a function that is called to determine the minimum possible distance between columns.
            The function parameter is the collection of characters' widths.
            <para>
            The default implementation returns the average value multiplied by 2.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.LayerRef">
            <summary>
            Extends the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.Layer"/> with additional properties
            required for <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line">
            <summary>
            Represents a line of text in <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer"/>, it is a list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRef"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetBoundsR">
            <summary>
            Returns line's bounds in "recognition" coordinate space,
            the result rectangle contains all text tokens forming the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetGBoundsR">
            <summary>
            Returns line's glyph bounds in "recognition" coordinate space,
            the result rectangle contains all text tokens forming the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetArea">
            <summary>
            Returns the line's area as a list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetPoints">
            <summary>
            Returns the array of points defining the line's area.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetGArea">
            <summary>
            Returns the line's "glyph" area as a list of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Line.GetGPoints">
            <summary>
            Returns the array of points defining the line's "glyph" area.
            Used for visualization purposes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.RecognizerCallback">
            <summary>
            The callback method called during recognition process.
            Used for debug purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer.Clone">
            <summary>
            Clones this <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer"/>.
            Used for debug purposes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer.GetLayers(GrapeCity.Documents.Pdf.Recognition.Core.ContentMap,GrapeCity.Documents.Pdf.Recognition.IAcrobatLikeRecognitionOptions,GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.RecognizerCallback)">
            <summary>
            Builds list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.LayerRef"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Recognizer.Recognize(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Pdf.Recognition.Core.ContentMap,GrapeCity.Documents.Pdf.Recognition.IAcrobatLikeRecognitionOptions,GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.RecognizerCallback)">
            <summary>
            Performs the recognition.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Stage">
            <summary>
            Represents a stage of recognition process.
            Used for debug purposes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Stage.Title">
            <summary>
            The stage title, a short description.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Stage.Description">
            <summary>
            The stage description.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.Stage.Index">
            <summary>
            The ordinal index of the stage.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.LinesStage">
            <summary>
            Information about text lines is updated during this stage
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRefFlags">
            <summary>
            Defines possible values for <see cref="F:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRef.Flags"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRefFlags.DropCap">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRef"/> is a drop-cap.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognizer.TokenRef">
            <summary>
            Extends the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.TextToken"/> with additional properties.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table">
            <summary>
            Represents a recognized table.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.TableVector">
            <summary>
            The abstract base class for rows and columns of a <see cref="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.ModelImpl.TableVector.Size">
            <summary>
            The vector's size, height for row, width for column.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.TableRow">
            <summary>
            Represents a row of a <see cref="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.TableCol">
            <summary>
            Represents a column of a <see cref="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.TableCell">
            <summary>
            Represents a cell in a <see cref="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable">
            <summary>
            Represents a recognized table.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITable.Rows">
            <summary>
            Gets the list of table rows.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITable.Cols">
            <summary>
            Gets the list of table columns.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITable.Cells">
            <summary>
            Gets the list of table cells.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Model.ITable.GetCell(System.Int32,System.Int32)">
            <summary>
            Gets the cell at a specified position.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell"/> at the specified position.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Model.ITable.GetBounds">
            <summary>
            Returns the bounds of the table on the page.
            </summary>
            <returns>The table bounds.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Model.ITableVector">
            <summary>
            The base interface for rows and columns of an <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableVector.Length">
            <summary>
            Gets the vector length.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Model.ITableVector.GetBounds">
            <summary>
            Returns the vector bounds on a page.
            </summary>
            <returns>The vector bounds.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Model.ITableRow">
            <summary>
            Represents a row in an <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Model.ITableCol">
            <summary>
            Represents a column in an <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell">
            <summary>
            Represents a cell in an <see cref="T:GrapeCity.Documents.Pdf.Recognition.Model.ITable"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.Row">
            <summary>
            Gets the 0-based index of the table row containing the current cell.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.Col">
            <summary>
            Gets the 0-based index of the table column containing the current cell.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.SpanRows">
            <summary>
            Gets the number of rows spanned by the current cell.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.SpanCols">
            <summary>
            Gets the number of columns spanned by the current cell.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.Text">
            <summary>
            Gets the cell text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Model.ITableCell.GetBounds">
            <summary>
            Returns the bounds of the cell on the page.
            </summary>
            <returns>The cell bounds.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.RecognitionAlgorithm">
            <summary>
            Defines possible algorithms that can be used to recognize
            the logical structure of a PDF when building text maps.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.RecognitionAlgorithm.Advanced">
            <summary>
            Advanced algorithm that employs various heuristics and strategies
            to try to correctly recognize the logical document structure
            when building text maps.
            <para>
            Please note that because the details of this algorithm may change from version
            to version, the text maps for a specific PDF may also change when GcPdf is updated.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.RecognitionAlgorithm.AcrobatLike">
            <summary>
            Algorithm that primarily relies on the physical structure of a PDF when building text maps.
            Results yielded by this algorithm are consistent with how
            Acrobat Reader handles text when searching, selecting etc.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.RecognitionOptions">
            <summary>
            <para>For internal use.</para>
            Base abstract class for classes that represent options used
            by a recognition algorithm when building text maps.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions">
            <summary>
            <para>For internal use.</para>
            Represents recognition options for the recognition algorithm used on PDF logical structure,
            see PDF specification for more details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.AcrobatLikeRecognitionOptions"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions.CoefVertLinearization">
            <summary>
            Gets or sets a coefficient used to determine if the vertical intersection ratio between two text primitives
            correspond to a text line. The default is 0.6.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions.CoefSpacing">
            <summary>
            Gets or sets a coefficient used to detect whitespaces between tokens.
            The default is 0.15.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions.CoefPrecision">
            <summary>
            Gets or sets a coefficient used to determine whether two values are similar.
            <para>The default is 0.25.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.StructureRecognitionOptions.CoefTokenization">
            <summary>
            Gets or sets a coefficient used to determine whether the distance between two text primitives
            corresponds to a text token.
            <para>The default is 0.08.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase">
            <summary>
            The base abstract class for classes representing a portion
            of document content associated with a PDF structure tag (element).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase.Element">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> object containing this item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase.LogicalStructure">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/> object owning this item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase.ContentItemLink">
            <summary>
            Gets the associated <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase.Page">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object where this item is located.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem">
            <summary>
            The base abstract class for <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.McidContentItem"/> and <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.McrContentItem"/> classes.
            Represents a content item associated with a portion of a content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem.GetImages">
            <summary>
            Gets the list of images associated with the current content item.
            </summary>
            <returns>The list of images.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem.GetParagraph">
            <summary>
            Returns an <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph"/> object representing the paragraph
            of text associated with the current content item, or null if no paragraph
            is associated with current item.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph"/> representing the paragraph, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem.GetText">
            <summary>
            Returns the text of the paragraph associated with the current content item
            (as returned by <see cref="M:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem.GetParagraph"/>), or an empty string if no paragraph
            is associated with the current item.
            </summary>
            <returns>The text of the paragraph, or null.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.McidContentItem">
            <summary>
            Represents a parsed <see cref="T:GrapeCity.Documents.Pdf.Structure.McidContentItemLink"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.McrContentItem">
            <summary>
            Represents a parsed <see cref="T:GrapeCity.Documents.Pdf.Structure.McrContentItemLink"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.ObjrContentItem">
            <summary>
            Represents a parsed <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.ObjrContentItem.PdfObject">
            <summary>
            Gets the PDF object associated with this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.ObjrContentItem"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element">
            <summary>
            Represents a parsed PDF tag (structure element) in the document's logical structure.
            <para>
            An instance of this class is created from a <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>,
            and holds a reference to that object in its <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.StructElement"/> property.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Type">
            <summary>
            Gets the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Type"/> if it is not null.
            Gets an empty string if <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Type"/> is null.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Parent">
            <summary>
            Gets the parent of the current element.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.LogicalStructure">
            <summary>
            Gets the document logical structure to which this element belongs.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.StructElement">
            <summary>
            Gets the structure element (PDF tag) that was used to create this element.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.HasItems">
            <summary>
            Gets a value indicating whether the current element
            has any children (the <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Items"/> list is not empty).
            <para>
            Note that even if the current element has no children, accessing <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Items"/>
            will initialize it, so using this property is recommended
            when checking whether an element has any children.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Items">
            <summary>
            Gets the list of current element's child elements.
            <para>
            Note that even if the current element has no children,
            accessing this property initializes the list.
            To simply check whether the element has any children,
            use <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.HasItems"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.HasChildren">
            <summary>
            Gets a value indicating whether the current element
            has any children <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> objects (the <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Children"/> list is not empty).
            <para>
            Note that even if the current element has no children, accessing <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Children"/>
            will initialize it, so using this property is recommended
            when checking whether an element has any children.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.Children">
            <summary>
            Gets the list of current element's child elements.
            <para>
            Note that even if the current element has no children,
            accessing this property initializes the list.
            To simply check whether the element has any children,
            use <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.HasChildren"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.HasContentItems">
            <summary>
            Gets a value indicating whether the current element has any content items
            associated with it (the <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.ContentItems"/> list is not empty).
            <para>
            Note that even if there are no associated content items, accessing <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.ContentItems"/>
            will initialize it, so using this property is recommended
            when checking whether an element has any associated content items.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.ContentItems">
            <summary>
            Gets the list of content items associated with the current element.
            <para>
            Note that even if the current element has no associated content items,
            accessing this property initializes the list.
            To simply check whether the element has any associated content items,
            use <see cref="P:GrapeCity.Documents.Pdf.Recognition.Structure.Element.HasContentItems"/>.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.FindContentItem(System.Func{GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase,System.Boolean},System.Boolean)">
            <summary>
            Iterates over content items that belong to this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> or its children,
            and returns a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItem"/> that matches a criteria specified via a callback.
            </summary>
            <param name="callback">The callback method used to test the content items.</param>
            <param name="recursive">Indicates whether to iterate over content items of child elements.</param>
            <returns>The first content item for which the <paramref name="callback"/> returned true,
            or null if no such item exists.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.FindChild(System.Func{GrapeCity.Documents.Pdf.Recognition.Structure.Element,System.Boolean},System.Boolean)">
            <summary>
            Iterates over child elements of this <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> or its children,
            and returns an <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> that matches a criteria specified via a callback.
            </summary>
            <param name="callback">The callback method used to test the elements.</param>
            <param name="recursive">Indicates whether to iterate over child elements' children.</param>
            <returns>The first element for which the <paramref name="callback"/> returned true,
            or null if no such element exists.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.GetImages">
            <summary>
            Returns the list of <see cref="T:GrapeCity.Documents.Pdf.PdfImageInfo"/> objects 
            associated with the current element.
            </summary>
            <returns>The list of images associated with this element.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.GetParagraphs">
            <summary>
            Returns the list of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph"/> objects representing the content
            associated with the current element.
            </summary>
            <returns>The list of paragraphs associated with this element.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.GetText">
            <summary>
            Returns the text associated with this element.
            This method calls <see cref="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.GetParagraphs"/> and returns an empty string
            if that method returns null.
            </summary>
            <returns>The text associated with this element, or an empty string.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Structure.Element.GetFullType">
            <summary>
            Builds and returns the dot-delimited full name of this element
            including all parent elements' names.
            <para>The result looks like "xxx.yyy.Type".</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure">
            <summary>
            Represents the parsed logical structure of a document.
            This is created on the basis of <see cref="P:GrapeCity.Documents.Pdf.GcPdfDocument.StructTreeRoot"/>,
            i.e. from the tags in the PDF structure tree.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure.Elements">
            <summary>
            Gets the list of top level <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> objects in the document's logical structure.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructureItem">
            <summary>
            Represents the base abstract class for items in a <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.LogicalStructure"/>.
            Derived classes are <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.Element"/> and <see cref="T:GrapeCity.Documents.Pdf.Recognition.Structure.ContentItemBase"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.DpiX">
            <summary>
            The horizontal Dpi used when calculate position of PDF elements.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.DpiY">
            <summary>
            The vertical Dpi used when calculate position of PDF elements.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.IgnoreErrors">
            <summary>
            Indicating whether to ignore errors during processing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.Options">
            <summary>
            The recognizer options.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.LogicalStructure">
            <summary>
            The parsed <see cref="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.LogicalStructure"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.IncludeTextPosition">
            <summary>
            Indicates whether to include information about position of text in content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer._operatorsCache">
            <summary>
            The cached page operators.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.Operator">
            <summary>
            The BMC operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.Mcid">
            <summary>
            The value of MCID entry in <see cref="F:GrapeCity.Documents.Pdf.Operators.BeginMarkedContentWithParams.Dict"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.DoOperator">
            <summary>
            The PDF "Do" operator containing the <see cref="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.Operator"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.ParentDoOperator">
            <summary>
            The parent PDF "Do" operator containing the <see cref="F:GrapeCity.Documents.Pdf.Recognition.Structure.Recognizer.BmcOperator.DoOperator"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TableExtractOptions">
            <summary>
            Represents options used by the table extraction algorithm.
            <para>
            Units of measurement that are used by members of this class are determined
            by the horizontal and vertical resolutions of the target (usually point, 1/72 of an inch),
            see <see cref="M:GrapeCity.Documents.Pdf.Page.GetTable(System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Recognition.TableExtractOptions,System.Single,System.Single,System.Boolean)"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TableExtractOptions.MinimumColWidth">
            <summary>
            Gets or sets the minimum column width.
            <para>The default is 1.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TableExtractOptions.MinimumRowHeight">
            <summary>
            Gets or sets the minimum row height.
            <para>The default is 1.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TableExtractOptions.GetMinimumDistanceBetweenRows">
            <summary>
            Gets or sets a function that is called to determine the minimum possible distance between rows.
            The function parameter is the collection of tokens' heights.
            <para>
            The default implementation returns the statistical mode, unless its value is 0 or NaN
            in which case the average is returned.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TableExtractOptions.GetMinimumDistanceBetweenCols">
            <summary>
            Gets or sets a function that is called to determine the minimum possible distance between columns.
            The function parameter is the collection of characters' widths.
            <para>
            The default implementation returns the average value multiplied by 2.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TableExtractor">
            <summary>
            Searches a <see cref="T:GrapeCity.Documents.Pdf.Recognition.ModelImpl.Table"/> in the specified <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TableExtractor.GetMinDistanceBetweenRows(System.Collections.Generic.IEnumerable{GrapeCity.Documents.Pdf.Recognition.TableExtractor.ElementLink},GrapeCity.Documents.Pdf.Recognition.TableExtractOptions)">
            <summary>
            Calculates a minimal possible distance between table's rows.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TableExtractor.GetMinDistanceBetweenColumns(System.Collections.Generic.IEnumerable{GrapeCity.Documents.Pdf.Recognition.TableExtractor.ElementLink},GrapeCity.Documents.Pdf.Recognition.TableExtractOptions)">
            <summary>
            Calculates a minimal possible distance between table's columns.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.WidthR">
            <summary>
            The width of the char in "normalized" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.Index">
            <summary>
            The start index of this char in Text of its <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.Length">
            <summary>
            The length of the char in unicode chars.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.NextIndex">
            <summary>
            Gets <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.Index"/> + <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Char.Length"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.RotationAngle">
            <summary>
            The text rotation angle in radians.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.Sin">
            <summary>
            The Sin of <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.RotationAngle"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.Cos">
            <summary>
            The Cos of <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.RotationAngle"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer.GetBounds(System.Drawing.RectangleF)">
            <summary>
            Converts a rectangle in "recognition" coordinate space to a <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>
            in page coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.Paragraph">
            <summary>
            The paragraph owning this <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Line"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.TextIndex">
            <summary>
            The start index of this line in Text of its <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.TextLength">
            <summary>
            The length of the line in unicode chars.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.Layer">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Layer"/> containing this line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.First">
            <summary>
            Gets the first <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment"/> in the line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.Last">
            <summary>
            Gets the last <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment"/> in the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetCharCount">
            <summary>
            Returns the count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetCharAt(System.Drawing.PointF,System.Int32@,System.Boolean@,GrapeCity.Documents.Common.Quadrilateral@)">
            <summary>
            Returns the index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object at specified position.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetChar(System.Int32)">
            <summary>
            Returns an <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object with specified index.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetRunFragmentIndexAndIndexInRunFragment(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Returns an <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> index and index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/>
            in token by the index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> in line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetCoords(System.Int32,System.Int32)">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The index of first <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetCoords">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of this line.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetPoints(System.Int32,System.Int32)">
            <summary>
            Gets the array of points defining a polygon with coordinates of a 
            range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The index of first <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>An array of points defining the polygon of the fragment on a page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetPoints">
            <summary>
            Gets the array of points defining a polygon with coordinates of this line.
            </summary>
            <returns>An array of points defining the polygon of the line on a page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.GetText(System.Int32,System.Int32)">
            <summary>
            Returns the text of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The index of first <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/>.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>The text of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.Map">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/> object owning this line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Recognition.TextMap.Line.Text">
            <summary>
            Gets the line text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetCoords(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Gets the coordinates of <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> on the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetText(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Gets a text of <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.HitTest(System.Single,System.Single)">
            <summary>
            Use this function passing in a specific pixel location relative to the top-left
            location of the text map and obtains the information about the correspondent
            hit-test metrics of the text string where the hit-test has occurred.
            </summary>
            <param name="x">The pixel location X to hit-test, relative to the top-left location of the layout box.</param>
            <param name="y">The pixel location Y to hit-test, relative to the top-left location of the layout box.</param>
            <returns>Returns <see cref="T:GrapeCity.Documents.Pdf.TextMap.HitTestInfo"/> contains information about hit test.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetWord(GrapeCity.Documents.Pdf.TextMap.MapPos,System.Int32@,System.Int32@,GrapeCity.Documents.Common.Quadrilateral@)">
            <summary>
            Returns info about word at specified position.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetMapPosByTextIndex(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Calculates index of nearest <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Line"/> and index of <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Char"/> in the line
            corresponding to text index in <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.Text"/>.
            Returns true if textIndex is inside the line and false if text index outside of the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Pdf.TextMap.FindTextCallback)">
            <summary>
            Searches a text in this text map, calls <paramref name="callback"/> for each found text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.IsEmpty">
            <summary>
            Returns a value indicating whether the map has no text blocks.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetFragment(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Returns the fragment of text from <paramref name="startPos"/> to <paramref name="endPos"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetFragmentToPos(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Returns the fragment of text from top of the page to <paramref name="pos"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetFragmentFromPos(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Returns the fragment of text from <paramref name="pos"/> to the end of the page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.GetFragment(GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Returns the fragment of text corresponding to the whole page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.ReplaceText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,System.String,GrapeCity.Documents.Text.Font,System.Nullable{System.Single})">
            <summary>
            Replaces a specified text fragment with another text.
            </summary>
            <param name="fragment">The fragment to replace.</param>
            <param name="text">The replacement text.</param>
            <param name="font">The font for the replacement text. If <see langword="null"/>, the current font will be used.</param>
            <param name="fontSize">The font size for the replacement text. If <see langword="null"/>, the current font size will be used.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.DeleteText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,GrapeCity.Documents.Pdf.TextMap.DeleteTextMode)">
            <summary>
            Deletes a specified text fragment.
            </summary>
            <param name="fragment">The fragment to delete.</param>
            <param name="mode">The text delete mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.BuildUsingOperators(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode,System.Boolean)">
            <summary>
            For testing purposes only.
            It method does exactly same as <see cref="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.Build(GrapeCity.Documents.Pdf.Page,GrapeCity.Documents.Pdf.Layers.ViewState,System.Single,System.Single,GrapeCity.Documents.Pdf.Parser.ContentStreamErrorHandlingMode,System.Boolean)"/>
            but it uses <see cref="M:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap.Create(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Operators.OperatorBase},System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Recognition.Core.IContentMapOptions,GrapeCity.Documents.Pdf.Recognition.Core.ContentMapCallback)"/>
            method working other operators.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.FindNearestTextLineInfo.RightLI">
            <summary>
            Line index at right from point:
            
                +-------------+
                |             |  x
                +-------------+
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.FindNearestTextLineInfo.LeftLI">
            <summary>
            Line index at left from point:
            
                +-------------+
                |             |  x
                +-------------+
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.FindNearestTextLineInfo.TopLI">
            <summary>
            Line index at top from point:
            
                +-------------+
                |             |
                +-------------+
                
                       x
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Map.FindNearestTextLineInfo.BottomLI">
            <summary>
            Line index at bottom from point:
            
                       x
            
                +-------------+
                |             |
                +-------------+
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Map">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/> object owning this paragraph.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Layer">
            <summary>
            The rotation layer containing this paragraph.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.TextIndex">
            <summary>
            The start index of this paragraph in Text of its <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.TextLength">
            <summary>
            The length of the paragraph in unicode chars.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Run"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.GetTextRuns(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Finds the first and last <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRun"/> objects in the <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs"/> collection of this paragraph
            that contain a specified fragment in this paragraph's whole text (as returned by <see cref="M:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.GetText"/>).
            The fragment is specified by the starting index of its first character in the paragraph text, 
            and the total number of characters in the fragment.
            </summary>
            <param name="startIndex">The zero-based index of the fragment's starting character in this paragraph's text.</param>
            <param name="length">The total number of characters in the fragment.</param>
            <param name="firstRunIndex">OUT: The index of the run in <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs"/> that contains the beginning of the specified text fragment.</param>
            <param name="indexInFirstRun">OUT: The index of the text fragment's first character in the run at <paramref name="firstRunIndex"/> position in <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs"/>.</param>
            <param name="lastRunIndex">OUT: The index of the run in <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs"/> that contains the end of the specified text fragment.</param>
            <param name="indexInLastRun">OUT: The index of the text fragment's last character in the run at <paramref name="lastRunIndex"/> position in <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph.Runs"/>.</param>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Run.Paragraph">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Paragraph"/> object owning this paragraph.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Run.Attrs">
            <summary>
            The formatting attributes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Run.TextIndex">
            <summary>
            The start index of this paragraph in Text of its <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.Run.TextLength">
            <summary>
            The length of the paragraph in unicode chars.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Line">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Line"/> object owning this <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Run">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Run"/> object producing this token.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.PositionRY">
            <summary>
            The Y coordinate of baseline of first item the "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.BoundsR">
            <summary>
            The token bounds in "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Matrix">
            <summary>
            The matrix to convert from "recognition" coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.TextIndex">
            <summary>
            The start index of this paragraph in Text of its <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.TextLength">
            <summary>
            The length of the paragraph in unicode chars.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.GetBounds(System.Drawing.RectangleF)">
            <summary>
            Converts rectangle in "recognition" coordinate space to page coordinate space using
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Matrix"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.GetPoint(System.Drawing.PointF)">
            <summary>
            Converts a point in "recognition" coordinate space to page coordinate space using
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Matrix"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.GetPoint(System.Single,System.Single)">
            <summary>
            Converts a point in "recognition" coordinate space to page coordinate space using
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.Matrix"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment.GetBounds">
            <summary>
            Returns the bounds of token relative to the top-left corner of the page.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Layer">
            <summary>
            The list of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Line"/> objects grouped by rotation angle.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Layer.RotateAngle">
            <summary>
            The layer rotation angle.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Line">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment"/> objects, corresponds to the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Line"/>,
            contains additional properties related to the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Line.LineIndex">
            <summary>
            The line index in the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment">
            <summary>
            The fragment of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Line"/> which will be deleted/replaced
            or shifted because another line fragment deleted/replaced.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.ForRemove">
            <summary>
            Indicates whether this <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment"/> should be removed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.MinR">
            <summary>
            The position of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment"/> (X for horizontal and Y for vertical)
            in recognition coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.SizeR">
            <summary>
            The size of <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment"/> (width for horizontal and height for vertical)
            in recognition coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.OffsetR">
            <summary>
            The offset which should be apply to the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment"/> after removing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.NextLine">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.NextLine"/> and <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.NextFragmentIndex"/> define
            the next <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment"/> if replacement should be moved to next line.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.NextFragmentIndex">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.NextLine"/> and <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.NextFragmentIndex"/> define
            the next <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment"/> if replacement should be moved to next line.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.Fragments">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.RunFragmentFragment"/> objects forming the line fragment.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.Operators">
            <summary>
            The list of <see cref="T:GrapeCity.Documents.Pdf.Operators.ShowTextBase"/> objects forming the line fragment.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map">
            <summary>
            Defines relation between text operators and <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Map"/>.
            It is used to process text replace or text delete operations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.TextOperatorsAffectTextLineMatrix">
            <summary>
            The set of text operators affecting the text line matrix.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.OperatorsAffectTextPosition">
            <summary>
            The set of operators affecting the text position.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.OperatorsSetTextPosition">
            <summary>
            The set of operators which set the current text position to some absolutely value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.OperatorsToIgnoreWhenSearchingTm">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.AdjustDeleteAndReplace(GrapeCity.Documents.Pdf.Operators.OperatorList,System.Collections.Generic.Dictionary{GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment,GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement},GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)"/> method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.OperatorsToDeleteWhenSearchingTm">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.AdjustDeleteAndReplace(GrapeCity.Documents.Pdf.Operators.OperatorList,System.Collections.Generic.Dictionary{GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment,GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement},GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)"/> method.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.TextMap">
            <summary>
            The text map used to build this map.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Layers">
            <summary>
            The list of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Line"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Create(GrapeCity.Documents.Pdf.Recognition.TextMap.Map,GrapeCity.Documents.Pdf.TextMap.TextMapFragment)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.UpdateOperatorPositions(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,System.Int32,System.Boolean)">
            <summary>
            Updates <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment.Position"/> of all fragments
            after <paramref name="origin"/> on value specified by <paramref name="delta"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.GetBaseOperatorFragment(GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Line,System.Int32,GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment@,System.Boolean@)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment"/> which is used to get current text attributes,
            in most cases it is visually first operator of line[lineFragmentIndex].
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.SplitTextOperator(GrapeCity.Documents.Pdf.Operators.OperatorList,System.Collections.Generic.List{GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment})">
            <summary>
            Split the PDF operator used by fragments in <paramref name="fragments"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.NormalizeTextOperatorFragments(GrapeCity.Documents.Pdf.Operators.OperatorList)">
            <summary>
            Normalizes the operator fragments, split the text operators if needed
            and assign separate operator to each fragment,
            each "complex" text operator like ['] and ["]
            convert into sequence of "primitive" operators
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.WrapReplacementText(GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.ReplacementText,System.Single,System.Single,GrapeCity.Documents.Pdf.Text.Font,System.Single,GrapeCity.Documents.Drawing.DMatrix,System.Single,System.Single,System.Single)">
            <summary>
            Wraps the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.ReplacementText"/> at specified position <paramref name="wrapPosR"/>
            currently it works very simple:
            tries to search a space before <paramref name="wrapPosR"/> and split.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.AdjustLineFragments(System.Collections.Generic.Dictionary{GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment,GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement})">
            <summary>
            Calculates <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.LineFragment.OffsetR"/> for each line fragment.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.DeletePreserveSpace">
            <summary>
            Deletes a text associated with this <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.DeleteStandard(System.String,GrapeCity.Documents.Text.Font,System.Nullable{System.Single})">
            <summary>
            Deletes the text associated with this <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map"/> and
            shift text after deleted text, optionally
            inserts specified text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement.Text">
            <summary>
            The text to be inserted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement.Position">
            <summary>
            The position in content stream where to insert <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement.GraphicsState">
            <summary>
            The graphics state at <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement.Position"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement.OffsetR">
            <summary>
            The offset relative to the Text Matrix in recognition coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement.SizeR">
            <summary>
            The size of replacement text in recognition coordinate space.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement.CurrentFontName">
            <summary>
            The font name before replacement text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement.CurrentFontSize">
            <summary>
            The font size before replacement text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Map.Replacement.CurrentFont">
            <summary>
            The font before replacement text.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.RunFragmentFragment">
            <summary>
            The fragment of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.RunFragmentFragment.RunFragmentIndex">
            <summary>
            The index of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment"/> in the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Line"/> defined by the
            <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.Line.LineIndex"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.RunFragmentFragment.StartIndexInRunFragment">
            <summary>
            The index of the first <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Char"/> in the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.RunFragment"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.RunFragmentFragment.Length">
            <summary>
            The number of <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextMap.Char"/>s in this fragment.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.RunFragmentFragment.BoundsR">
            <summary>
            The bounds in recognition coordinate space.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment">
            <summary>
            The fragment of the text operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment.Position">
            <summary>
            The position of a text operator in a content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment.Operator">
            <summary>
            The text operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment.StartIndex">
            <summary>
            The index in the <see cref="F:GrapeCity.Documents.Pdf.Operators.ShowTextBase.TextBlock"/> where the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment"/> starts,
            -1 indicates that the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment"/> reference full operator.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment.Length">
            <summary>
            The length of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment.IsFragment">
            <summary>
            Returns a value indicating whether the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment"/>
            represents a fragment of <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment.Operator"/>, if false the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment"/>
            represents full <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment.Operator"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragmentList">
            <summary>
            List of the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragmentList.TryGetValue(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment@)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment"/> associated with the specified <see cref="T:GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragmentList.Add(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.ShowTextBase)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment"/> representing full operator
            <paramref name="op"/> and adds it to the list.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragmentList.Add(GrapeCity.Documents.Pdf.Operators.PdfOperatorPosition,GrapeCity.Documents.Pdf.Operators.ShowTextBase,System.Int32,System.Int32)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment"/> representing fragment of the operator
            <paramref name="op"/> and adds it to the list.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragmentList.Sort">
            <summary>
            Sorts items by the <see cref="F:GrapeCity.Documents.Pdf.Recognition.TextReplaceMap.TextOperatorFragment.Position"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Recognition.Util">
            <summary>
            Contains utility methods used by recognition classes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Recognition.Util.c_UnknownChar">
            <summary>
            The char used for unknown characters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Util.IsLetterOrDigit(System.String)">
            <summary>
            Returns true if all chars in a string are letters or digits,
            <see cref="M:System.Char.IsLetterOrDigit(System.Char)"/> returns true.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Util.IsRightToLeft(System.String)">
            <summary>
            Returns true if all chars in a string are RTL (arabic, hebrew etc)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Util.IsDelimiterOrWhiteSpace(System.String)">
            <summary>
            Returns true if all chars in a string are spaces, punctuation or separators
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Recognition.Util.IsWhiteSpace(System.String)">
            <summary>
            Returns true if all chars in a string are spaces
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Redact.RedactHelper.Contains(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Redact.RedactHelper.RedactArea},System.Drawing.RectangleF,System.Single)">
            <summary>
            Returns true if one of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> in <paramref name="areas"/>
            contains r.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Redact.RedactHelper.Contains(System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Common.Quadrilateral},System.Single)">
            <summary>
            Returns true if <paramref name="r"/> contains all items from <paramref name="area"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Redact.RedactHelper.AreIntersect(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Redact.RedactHelper.RedactArea},System.Drawing.RectangleF,System.Single)">
            <summary>
            Returns true if one of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> in <paramref name="areas"/>
            intersects with r.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Redact.RedactHelper.AreIntersect(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Redact.RedactHelper.RedactArea},GrapeCity.Documents.Common.Quadrilateral)">
            <summary>
            Returns true if one of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> in <paramref name="areas"/>
            intersects with <paramref name="q"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Redact.RedactHelper.GetIntersectionRatio(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Redact.RedactHelper.RedactArea},GrapeCity.Documents.Common.Quadrilateral)">
            <summary>
            Returns intersection area of <paramref name="areas"/> and <paramref name="q"/>.
            The code assumes that <see cref="T:GrapeCity.Documents.Pdf.Redact.RedactHelper.RedactArea"/> in the <paramref name="areas"/>
            are NOT intersect.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RedactOptions">
            <summary>
            Represents additional options to use when a document is being redacted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.RedactOptions.Default">
            <summary>
            The default <see cref="T:GrapeCity.Documents.Pdf.RedactOptions"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.IgnoreUnreadableObjects">
            <summary>
            Gets or sets a value indicating whether to completely remove objects that
            need to be partially redacted but which are unreadable or unknown to GcPdf.
            <para>
            If true (the default), such objects will be silently removed.
            Otherwise an exception will be thrown.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptions">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef"/> object that specifies
            additional options used when a redact action requires that some PDF
            content is rendered as an image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.Precision">
            <summary>
            Gets or sets the maximum distance (in points) between a PDF object's boundary
            that is outside a redact area, and the redact area's edge, at which
            the object is still considered to be inside the redact.
            <para>The default value is 2 points.</para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef">
            <summary>
            Represents options that are used when a redact action
            requires that some PDF content is rendered as an image.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.Zoom">
            <summary>
            Gets or sets the zoom factor. The default is 1.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.BackColor">
            <summary>
            Gets or sets the background color. The default is white.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.Resolution">
            <summary>
            Gets or sets the resolution of the generated images. The default is 96.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseRenderingCache">
            <summary>
            Gets or sets a value indicating whether to use the rendering cache.
            <para>
            This property is true by default. Setting this property to false reduces
            memory consumption, at the cost of slower rendering speed.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseGlyphBitmapCache">
            <summary>
            Gets or sets a value indicating whether glyphs are cached as bitmaps rather than as glyph paths.
            <para>The default is true.</para>
            <para>This property is ignored if <see cref="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseRenderingCache"/> is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.EnableFontHinting">
            <summary>
            Gets or sets a value indicating whether font hinting should be enabled for TrueType fonts.
            <para>The default is true.</para>
            <para>This property is ignored if <see cref="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseRenderingCache"/> is true and <see cref="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseGlyphBitmapCache"/> is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.AllowFontSbits">
            <summary>
            Gets or sets a value indicating whether bitmaps embedded in an OpenType font should be rendered.
            <para>The default is true.</para>
            <para>This property is ignored if either <see cref="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseRenderingCache"/> or <see cref="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.UseGlyphBitmapCache"/> is false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RedactOptions.RenderOptionsDef.InterpolationMode">
            <summary>
            Gets or sets the sampling mode to use when drawing images with resizing.
            Default is <see cref="F:GrapeCity.Documents.Drawing.InterpolationMode.NearestNeighbor"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures">
            <summary>
            Defines set of PDF rendering features which are used by the content streams.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures.ContentStreamUsesBlendMode">
            <summary>
            The custom blend mode is used in the content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures.NestedContentStreamsUseBlendMode">
            <summary>
            One of nested content streams (referenced via Do operator) uses the custom blend mode.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures.ContentStreamUsesSoftMask">
            <summary>
            The soft mask is used in the content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.TransparencyFeatures.NestedContentStreamUsesSoftMask">
            <summary>
            One of nested content streams (referenced via Do operator) uses the soft mask.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.Graphics">
            <summary>
            The destination <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>, passed to the constructor.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.FormXObjectRendering">
            <summary>
            Indicates whether this <see cref="T:GrapeCity.Documents.Pdf.Parser.ContentStreamReader"/> used to
            render the <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.ActiveGraphics">
            <summary>
            The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> object currently used in drawing operations.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.FillPathComplex(GrapeCity.Documents.Drawing.IPath,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Fills the current path defined by <see cref="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.m_CurrentPath"/>
            if it is defined by pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.DrawPathComplex(GrapeCity.Documents.Drawing.IPath,GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase)">
            <summary>
            Draws the current path defined by <see cref="F:GrapeCity.Documents.Pdf.Parser.ContentStreamProcessor.m_CurrentPath"/>
            if it is defined by pattern.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.PushGlyphPathClip(GrapeCity.Documents.Drawing.IPath)">
            <summary>
            Pushes clip region defined by <paramref name="path"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.PushClipRect(System.Drawing.RectangleF)">
            <summary>
            Pushes clip region defined by <paramref name="bounds"/> using matrix
            defined by CurrentGraphicsState.Matrix.
            Method should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.PopClipPath"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.RenderFormXObjectTransparencyGroup(GrapeCity.Documents.Pdf.Graphics.FormXObject,System.Boolean,System.Boolean,System.Boolean,GrapeCity.Documents.Drawing.IGcTransparencyGroup@,System.Drawing.Rectangle@)">
            <summary>
            Called when a <see cref="T:GrapeCity.Documents.Pdf.Graphics.GroupAttributes"/> is specified in <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Group"/>.
            In this case a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> is rendered into separate layer
            which is composed with <see cref="F:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.ActiveGraphics"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer.RenderFormXObjectCurrentContext(GrapeCity.Documents.Pdf.Graphics.FormXObject)">
            <summary>
            Called when processing a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> if its
            <see cref="P:GrapeCity.Documents.Pdf.Graphics.FormXObject.Group"/> is null.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.RenderingCache">
            <summary>
            Represents a cache used to speed up rendering.
            <para>
            An instance of this class can be passed to
            <see cref="M:GrapeCity.Documents.Pdf.Page.Draw(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Layers.ViewState,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.Page.DrawAnnotations(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.RenderingCache)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.Page.DrawAnnotations(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Annotations.AnnotationBase},GrapeCity.Documents.Pdf.Layers.ViewState,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean)"/>
            methods to improve the rendering speed.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RenderingCache.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> class.
            </summary>
            <param name="memoryLimit">The maximum amount of memory to be used by the cache, in megabytes.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.RenderingCache.Dispose">
            <summary>
            Disposes the object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.RenderingCache.MemoryLimit">
            <summary>
            Gets the maximum amount of memory that can be used by this cache, in megabytes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder">
            <summary>
            Implements the <see cref="T:GrapeCity.Documents.Pdf.ISignatureBuilder"/> interface,
            can be used to build a PKCS#7 signature.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat,GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class.
            </summary>
            <param name="signingCertificate">The certificate to use.</param>
            <param name="format">The signature format.</param>
            <param name="hashAlgorithm">The hash algorithm to use.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[],GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat,GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder"/> class.
            </summary>
            <param name="certificateChain">The certificate chain to use.</param>
            <param name="format">The signature format.</param>
            <param name="hashAlgorithm">The hash algorithm to use.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.HashAlgorithm">
            <summary>
            Gets or sets the HASH algorithm used if <see cref="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureGenerator"/> is not specified.
            Note! If <see cref="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.Format"/> is <see cref="F:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat.adbe_pkcs7_sha1"/>
            then this property is ignored and always <b>SHA-1</b> used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.CertificateChain">
            <summary>
            Gets or sets the certificate chain. 
            The first certificate is used to sign the document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureGenerator">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.IPkcs7SignatureGenerator"/> object used to sign the 
            authenticated attribute set that is a part of PKCS#7 signature.
            If not set, the default built-in generator will be used.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.Format">
            <summary>
            Gets or sets the signature format.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.Crls">
            <summary>
            Gets or sets the collection of certificate revocation lists (CRLs) to use.
            Items in this collection may be of the following types:
            <list type="bullet">
            <item>
            <term>byte[]</term>
            <description>An encoded CRL list.</description>
            </item>
            <item>
            <term>string</term>
            <description>The URL of a CRL (e.g. http://crl.cacert.org/revoke.crl). </description>
            </item>
            <item>
            <term><see cref="T:System.Uri"/></term>
            <description>The <see cref="T:System.Uri"/> of a CRL.</description>
            </item>
            <item>
            <term><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/></term>
            <description>An X509Certificate2 object from which the URL of a CRL will be extracted.</description>
            </item>
            </list>
            An exception will be thrown if an object of an unsupported type is found in this collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.IncludeOcsp">
            <summary>
            Gets or sets a value indicating whether to include OCSP information into the signature.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.Prepare(GrapeCity.Documents.Pdf.GcPdfDocument,System.String@,System.String@,System.Int32@,System.Object@)">
            <summary>
            For internal use.
            See <see cref="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Prepare(GrapeCity.Documents.Pdf.GcPdfDocument,System.String@,System.String@,System.Int32@,System.Object@)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.Build(GrapeCity.Documents.Pdf.GcPdfDocument,System.IO.Stream,System.Object)">
            <summary>
            For internal use.
            See <see cref="M:GrapeCity.Documents.Pdf.ISignatureBuilder.Build(GrapeCity.Documents.Pdf.GcPdfDocument,System.IO.Stream,System.Object)"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat">
            <summary>
            Defines the supported signature formats.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat.adbe_pkcs7_detached">
            <summary>
            The original signed message digest over the document’s byte range shall be incorporated
            as the normal CMS SignedData field. No data shall be encapsulated in the CMS SignedData field.
            </summary>
            <remarks>
            The Filter value is <b>/Adobe.PPKLite</b>,
            the SubFilter value is <b>/adbe.pkcs7.detached</b>.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat.ETSI_CAdES_detached">
            <summary>
            This format should be used to create PAdES signatures.
            </summary>
            <remarks>
            The Filter value is <b>/Adobe.PPKLite</b>,
            the SubFilter value is <b>/ETSI.CAdES.detached</b>.
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Pkcs7SignatureBuilder.SignatureFormat.adbe_pkcs7_sha1">
            <summary>
            The SHA1 digest of the document’s byte range shall be encapsulated in the
            CMS SignedData field with ContentInfo of type Data.
            The digest of that SignedData shall be incorporated as the normal CMS digest.
            Note! This format has been deprecated with PDF 2.0.
            </summary>
            <remarks>
            The Filter value is <b>/Adobe.PPKMS</b>,
            the SubFilter value is <b>/adbe.pkcs7.sha1</b>.
            </remarks>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.SecurityUtils">
            <summary>
            The security utility class.
            </summary>
            <summary>
            Provides utilities related to PDF security and signing.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetExtensionValue(Org.BouncyCastle.X509.X509Certificate,System.String)">
            <param name="certificate">the certificate from which we need the ExtensionValue</param>
            <param name="oid">the Object Identifier value for the extension.</param>
            <returns>the extension value as an ASN1Primitive object</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetCRLURL(Org.BouncyCastle.X509.X509Certificate)">
            <summary>
            Returns the URL of the Certificate Revocation List for a Certificate.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetCRLURL(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Returns the URL of the Certificate Revocation List(CRL) for a certificate.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetOCSPURL(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Returns the OCSP URL from the certificate.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetOCSP(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
            <summary>
            Returns the OCSP for specified certificate.
            </summary>
            <param name="certificate">The certificate to check.</param>
            <param name="parentCertificate">The parent certificate.</param>
            <param name="url">The OCSP URL, can be null, in this case it will be obtained from <paramref name="certificate"/> if possible.</param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetCertificateChain(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509RevocationMode,System.Security.Cryptography.X509Certificates.X509VerificationFlags)">
            <summary>
            Builds the chain of certificates from a byte array.
            </summary>
            <param name="rawData">The byte array containing data in PFX or P12 format.</param>
            <param name="password">The password to use.</param>
            <param name="revocationMode">The revocation mode used to build the X509Chain.</param>
            <param name="verificationFlags">The verification flags used to build the X509Chain.</param>
            <returns>The chain of certificates. The first element is the signing certificate, the last element is the certificate of CA.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetCertificateChain(System.String,System.String,System.Security.Cryptography.X509Certificates.X509RevocationMode,System.Security.Cryptography.X509Certificates.X509VerificationFlags)">
            <summary>
            Builds the chain of certificates from a specified file.
            </summary>
            <param name="fileName">The name of a .pfx or a .p12 file.</param>
            <param name="password">The password to use.</param>
            <param name="revocationMode">The revocation mode used to build the X509Chain.</param>
            <param name="verificationFlags">The verification flags used to build the X509Chain.</param>
            <returns>The chain of certificates. The first element is the signing certificate, the last element is the certificate of CA.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityUtils.GetCRL(System.Uri)">
            <summary>
            Downloads the CRL from a specified URL.
            </summary>
            <param name="uri">The target URL.</param>
            <returns>The CRL or <see langword="null"/> if the CRL could not be obtained from the specified URL.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.SignatureParser">
            <summary>
            Parses the PDF signature binary value (Signature.Contents).
            Note! This code based on PdfPKCS7 of iText library.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.certs">
            <summary>
            All the X.509 certificates in no particular order.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.signCert">
            <summary>
            The X.509 certificate that is used to sign the digest.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.signCerts">
            <summary>
            All the X.509 certificates used for the main signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.crls">
            <summary>
            Certificate Revocation Lists
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.digest">
            <summary>
            The signed digest as calculated by this class (or extracted from an existing PDF).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.sig">
            <summary>
            Class from the Java SDK that provides the functionality of a digital signature algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.digestAlgorithmOid">
            <summary>
            The ID of the digest algorithm, e.g. "2.16.840.1.101.3.4.2.1".
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.digestEncryptionAlgorithmOid">
            <summary>
            The encryption algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.filterSubtype">
            <summary>
            SubFilter property of PDF Signature object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.isTsp">
            <summary>
            True if there's a PAdES LTV time stamp.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.isCades">
            <summary>
            True if it is a CAdES signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.version">
            <summary>
            Version of the PKCS#7 object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.digestalgos">
            <summary>
            The digest algorithms.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.signerversion">
            <summary>
            Version of the PKCS#7 "SignerInfo" object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.sigAttr">
            <summary>
            Signature attributes
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.sigAttrDer">
            <summary>
            Signature attributes (maybe not necessary, but we use it as fallback)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.digestAttr">
            <summary>
            The digest attributes
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.basicResp">
            <summary>
            BouncyCastle BasicOCSPResp
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.timeStampToken">
            <summary>
            BouncyCastle TimeStampToken.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.messageDigest">
            <summary>
            The object that will create the digest
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.encContDigest">
            <summary>
            Encrypted digest
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.SignatureParser.RSAdata">
            The RSA data 
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Use if you want to verify a signature using the sub-filter adbe.x509.rsa_sha1.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.#ctor(System.Byte[],System.String)">
            <summary>
            Used to verify PKCS#7 signatures.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.FindOcsp(Org.BouncyCastle.Asn1.Asn1Sequence)">
            Helper method that creates the BasicOCSPResp object.
            @param seq
            @throws IOException
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.CalcSignCertificateChain">
            Helper method that creates the collection of certificates
            used for the main signature based on the complete list
            of certificates and the sign certificate.
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.FindCRL(Org.BouncyCastle.Asn1.Asn1Sequence)">
            Helper method that tries to construct the CRLs.
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Update the digest with the specified bytes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SignatureParser.VerifySignatureValue">
            <summary>
            Verify the digest.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore">
            <summary>
            Represents a Document Security Store (DSS).
            Holds information that can be used to verify signatures offline.
            See PDF specification for details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.Clear">
            <summary>
            Clears the content of the current object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationCRL(GrapeCity.Documents.Pdf.Security.Signature,System.Byte[])">
            <summary>
            Adds a CRL list for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="crl">The DER-encoded CRL.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationCRL(GrapeCity.Documents.Pdf.Security.Signature,System.String)">
            <summary>
            Adds a CRL list for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="crlUri">The URI containing CRL.</param>
            <returns>The DER-encoded CRL that was added, or <see langword="null"/> if CRL could not be obtained from <paramref name="crlUri"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationCRL(GrapeCity.Documents.Pdf.Security.Signature,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Adds a CRL list for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="cert">The certificate used to get the CRL URL.</param>
            <returns>The DER-encoded CRL that was added, or <see langword="null"/> if CRL could not be obtained from <paramref name="cert"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationOCSP(GrapeCity.Documents.Pdf.Security.Signature,System.Byte[])">
            <summary>
            Adds an OCSP response for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="ocsp">The DER-encoded OCSP response.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationOCSP(GrapeCity.Documents.Pdf.Security.Signature,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
            <summary>
            Adds an OCSP response for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="certificate">The certificate for which OCSP is requested.</param>
            <param name="parentCertificate">The parent certificate.</param>
            <param name="url">The OCSP URL. If <see langword="null"/>, it will be obtained from <paramref name="certificate"/> if possible.</param>
            <returns>The DER-encoded OCSP that was added, or <see langword="null"/> if OCSP could not be obtained.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationCert(GrapeCity.Documents.Pdf.Security.Signature,System.Byte[])">
            <summary>
            Adds a certificate response for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="cert">The DER-encoded certificate.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerificationCert(GrapeCity.Documents.Pdf.Security.Signature,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Adds a certificate response for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="cert">The certificate.</param>
            <returns>The DER-encoded certificate.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerification(GrapeCity.Documents.Pdf.Security.Signature,GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams)">
            <summary>
            Adds a certificate response for a specified signature.
            </summary>
            <param name="signature">The <see cref="T:GrapeCity.Documents.Pdf.Security.Signature"/> object.</param>
            <param name="prms">The <see cref="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams"/> object which defines parameters used to build verification information.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams">
            <summary>
            Represents parameters for the <see cref="M:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.AddVerification(GrapeCity.Documents.Pdf.Security.Signature,GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams)"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams.CertificatesSet">
            <summary>
            Gets or sets a value that defines the set of certificates
            information about which should be added to the DSS.
            The default value is <see cref="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.CertificatesSet.WholeSigningChain"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams.InfoType">
            <summary>
            Gets or sets a value that defines the scope of information to include into the DSS.
            The default value is <see cref="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType.OCSP_OPTIONAL_CRL"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams.IncludeCerts">
            <summary>
            Gets or sets a value indicating whether to include certificates information
            into the DSS.
            The default is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationParams.Certificates">
            <summary>
            Gets or sets a list of additional certificates
            used to build the signing chain.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.CertificatesSet">
            <summary>
            Defines the set of certificates to process when building verification information.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.CertificatesSet.SigningCertificateOnly">
            <summary>
            Include only information about signing certificate.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.CertificatesSet.WholeSigningChain">
            <summary>
            Include information about all certificates in the signing chain.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType">
            <summary>
            Defines the type of verification information to include into the DSS.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType.OCSP">
            <summary>
            Include only OCSP response.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType.CRL">
            <summary>
            Include only CRL.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType.OCSP_AND_CRL">
            <summary>
            Include OCSP response and CRL.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DocumentSecurityStore.VerificationInfoType.OCSP_OPTIONAL_CRL">
            <summary>
            Include CRL only if OCSP response cannot be obtained.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.OID">
            <summary>
            Represents a cryptographic object identifier.
            Defines IDs of many popular cryptographic items such as HASH algorithms, encoding algorithms etc.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.OID.PKCS7">
            <summary>
            Represents the IDs related to PKCS#7.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.PKCS7_DATA">
            <summary>
            1.2.840.113549.1.7.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.PKCS7_SIGNED_DATA">
            <summary>
            1.2.840.113549.1.7.2
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.CONTENT_TYPE">
            <summary>
            1.2.840.113549.1.9.3
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.MESSAGE_DIGEST">
            <summary>
            1.2.840.113549.1.9.4
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.SIGNING_TIME">
            <summary>
            1.2.840.113549.1.9.5
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.ADBE_REVOCATION">
            <summary>
            1.2.840.113583.1.1.8
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.TSA">
            <summary>
            1.2.840.113583.1.1.9.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.OCSP">
            <summary>
            1.3.6.1.5.5.7.48.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.AA_SIGNING_CERTIFICATE_V1">
            <summary>
            1.2.840.113549.1.9.16.2.12
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.AA_SIGNING_CERTIFICATE_V2">
            <summary>
            1.2.840.113549.1.9.16.2.47
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.PKCS7.TIME_STAMP_TOKEN">
            <summary>
            1.2.840.113549.1.9.16.2.14
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.OID.EncryptionAlgorithms">
            <summary>
            Represents the IDs of encryption algorithms.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.EncryptionAlgorithms.RSA">
            <summary>
            1.2.840.113549.1.1.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.EncryptionAlgorithms.DSA">
            <summary>
            1.2.840.10040.4.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.EncryptionAlgorithms.ECDSA">
            <summary>
            1.2.840.10045.2.1
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms">
            <summary>
            Represents the IDs of hash algorithms.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.MD2">
            <summary>
            1.2.840.113549.2.2
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.MD5">
            <summary>
            1.2.840.113549.2.5
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.SHA1">
            <summary>
            1.3.14.3.2.26
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.SHA224">
            <summary>
            2.16.840.1.101.3.4.2.4
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.SHA256">
            <summary>
            2.16.840.1.101.3.4.2.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.SHA384">
            <summary>
            2.16.840.1.101.3.4.2.2
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.SHA512">
            <summary>
            2.16.840.1.101.3.4.2.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.RIPEMD128">
            <summary>
            1.3.36.3.2.2
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.RIPEMD160">
            <summary>
            1.3.36.3.2.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.RIPEMD256">
            <summary>
            1.3.36.3.2.3
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.HashAlgorithms.GOST3411">
            <summary>
            1.2.643.2.2.9
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.OID.X509Extensions">
            <summary>
            Represents the IDs related to X509 certificates.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.AUTHORITY_KEY">
            <summary>
            2.5.29.35
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.SUBJECT_KEY">
            <summary>
            2.5.29.14
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.KEY_USAGE">
            <summary>
            2.5.29.15
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.CERTIFICATE_POLICIES">
            <summary>
            2.5.29.32
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.POLICY_MAPPINGS">
            <summary>
            2.5.29.33
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.SUBJECT_ALTERNATIVE_NAME">
            <summary>
            2.5.29.17
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.ISSUER_ALTERNATIVE_NAME">
            <summary>
            2.5.29.18
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.SUBJECT_DIRECTORY_ATTRIBUTES">
            <summary>
            2.5.29.9
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.BASIC_CONSTRAINTS">
            <summary>
            2.5.29.19
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.NAME_CONSTRAINTS">
            <summary>
            2.5.29.30
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.POLICY_CONSTRAINTS">
            <summary>
            2.5.29.36
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.EXTENDED_KEY_USAGE">
            <summary>
            2.5.29.37
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.CRL_DISTRIBUTION_POINTS">
            <summary>
            2.5.29.31
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.INHIBIT_ANY_POLICY">
            <summary>
            2.5.29.54
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.FRESHEST_CRL">
            <summary>
            2.5.29.46
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.AUTHORITY_INFO_ACCESS">
            <summary>
            1.3.6.1.5.5.7.1.1
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.SUBJECT_INFO_ACCESS">
            <summary>
            1.3.6.1.5.5.7.1.11
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.KP_TIMESTAMPING">
            <summary>
            1.3.6.1.5.5.7.3.8
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.ID_PKIX_OCSP_NOCHECK">
            <summary>
            1.3.6.1.5.5.7.48.1.5
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.X509Extensions.SUPPORTED_CRITICAL_EXTENSIONS">
            <summary>
            According to https://tools.ietf.org/html/rfc5280 4.2. "Certificate Extensions":
            "A certificate-using system MUST reject the certificate if it encounters a critical extension it
            does not recognize or a critical extension that contains information that it cannot process."
            <para />
            This set consists of standard extensions which are defined in RFC specifications and are not mentioned
            as forbidden to be marked as critical.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.ID">
            <summary>
            Gets the dotted number of the identifier.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.OID.Name">
            <summary>
            Gets the friendly name of the identifier.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.OID"/> class.
            </summary>
            <param name="id">The dotted number of the identifier.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.OID"/> class.
            </summary>
            <param name="id">The dotted number of the identifier.</param>
            <param name="name">The friendly name of the identifier.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.Equals(GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Returns true if this instance equals to <paramref name="other"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.ToString">
            <summary>
            Returns the <see cref="F:GrapeCity.Documents.Pdf.Security.OID.ID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.AreEqual(GrapeCity.Documents.Pdf.Security.OID,GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Compares two <see cref="T:GrapeCity.Documents.Pdf.Security.OID"/> objects, returns true if they are equal or both are null.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.op_Equality(GrapeCity.Documents.Pdf.Security.OID,GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Equality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.OID.op_Inequality(GrapeCity.Documents.Pdf.Security.OID,GrapeCity.Documents.Pdf.Security.OID)">
            <summary>
            Inequality operator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.RC4">
            <summary>
            Implements RC4 algorithm.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.RC4"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.RC4"/> class.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.SetKey(System.Byte[])">
            <summary>
            Sets key used to encode/decode data.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.SetKey(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets key used to encode/decode data.
            </summary>
            <param name="key"></param>
            <param name="startIndex"></param>
            <param name="length"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.Process(System.Byte[])">
            <summary>
            Encodes/decodes data.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.RC4.Process(System.Byte[],System.Int32)">
            <summary>
            Encodes/decodes data.
            </summary>
            <param name="data"></param>
            <param name="length"></param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.DecryptionStatus">
            <summary>
            Defines the decryption status of a loaded document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DecryptionStatus.NotEncrypted">
            <summary>
            The loaded document is not encrypted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DecryptionStatus.Success">
            <summary>
            The document was successfully decrypted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.DecryptionStatus.Failed">
            <summary>
            Decryption failed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.Security">
            <summary>
            Provides security and encryption services and manages permissions for 
            <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Security.DecryptionStatus">
            <summary>
            Gets the decryption status of the loaded document.
            <para>This property has meaning only if a document has been loaded.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Security.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Security.DecryptHandler">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> used to decrypt PDF document during loading.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Security.EncryptHandler">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> used to encrypt PDF document during saving.
            Same <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> can not be used for <see cref="P:GrapeCity.Documents.Pdf.Security.Security.DecryptHandler"/> and
            <see cref="P:GrapeCity.Documents.Pdf.Security.Security.EncryptHandler"/>, use <see cref="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Clone"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.EncryptionStreamType">
            <summary>
            Defines possible types of streams in context of encryption.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionStreamType.Default">
            <summary>
            Default stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionStreamType.Metadata">
            <summary>
            XML metadata stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionStreamType.EmbeddedFile">
            <summary>
            Embedded file stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionStreamType.CrossReferenceStream">
            <summary>
            Cross-Reference Stream
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase">
            <summary>
            Base abstract class defining PDF Security Handler.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Init">
            <summary>
            Called from constructors, should contain initialization code.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Create(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.DecryptionOptions)">
            <summary>
            Creates instance of <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> from specified <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/>,
            can throw an exception if PDF dictionary has wrong or unknown format.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.AssignFrom(GrapeCity.Documents.Pdf.Security.SecurityHandlerBase)">
            <summary>
            Copies all property values from another object.
            </summary>
            <param name="source">The source object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase.Clone">
            <summary>
            Create copy of this <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.AccessPermissions">
            <summary>
            Defines access permissions granted by a signature to the signed document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessPermissions.NoChanges">
            <summary>
            No changes to the document are permitted; any change to the document invalidates the signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessPermissions.FormFilling">
            <summary>
            Permitted changes are filling in forms, instantiating page templates, and signing;
            other changes invalidate the signature.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessPermissions.FormFillingAndAnnotations">
            <summary>
            Permitted changes are the same as for <see cref="F:GrapeCity.Documents.Pdf.Security.AccessPermissions.FormFilling"/>, as well as annotation creation, deletion, and modification;
            other changes invalidate the signature.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.Signature">
            <summary>
            Represents a digital signature in a PDF.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.WriteBinarySignature(System.Int64,System.Object)">
            <summary>
            Called from <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Save(GrapeCity.Documents.Pdf.SignatureProperties,GrapeCity.Documents.Pdf.TimeStampProperties,System.IO.Stream,GrapeCity.Documents.Pdf.SaveMode)"/> method when document's
            content is generated, writes ByteRange and Contents properties of the signature.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.CreateReference(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfString,GrapeCity.Documents.Pdf.Spec.PdfNumber,GrapeCity.Documents.Pdf.Spec.PdfNumber,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfDict)">
            <summary>
            Create the Reference PDF dictionary, see PDF 1.7 page 730.
            </summary>
            <param name="digestMethod">MD5 or SHA1</param>
            <param name="digestValue"></param>
            <param name="digestLocation1"></param>
            <param name="digestLocation2"></param>
            <param name="transformMethod">DocMDP, UR, FieldMDP, Identity.</param>
            <param name="transformParams">Depends on <paramref name="transformMethod"/>,
            see <see cref="M:GrapeCity.Documents.Pdf.Security.Signature.CreateDocMDPTransformMethod(GrapeCity.Documents.Pdf.Security.AccessPermissions)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.Security.Signature.CreateFieldMDPTransformMethod(GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields)"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.CreateFieldMDPTransformMethod(GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields)">
            <summary>
            Creates the FieldMDP PDF dictionary, see PDF 1.7 page 736.
            </summary>
            <param name="slf">The <see cref="T:GrapeCity.Documents.Pdf.AcroForms.SignatureLockedFields"/> object used to build the <b>Action</b> and <b>Fields</b> entries.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.CreateDocMDPTransformMethod(GrapeCity.Documents.Pdf.Security.AccessPermissions)">
            <summary>
            Creates the DocMDP PDF dictionary, see PDF 1.7 page 731.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Cert">
            <summary>
            Gets an array of byte strings representing the X.509 certificate chain used when signing and verifying
            signatures that use public-key cryptography, or a byte string if the chain has only one entry.
            The signing certificate must appear first in the array;
            it is used to verify the signature value in Contents, and the other certificates are
            used to verify the authenticity of the signing certificate.
            Required when SubFilter is adbe.x509.rsa_sha1.
            If SubFilter is adbe.pkcs7.detached or adbe.pkcs7.sha1, this entry is not used,
            and the certificate chain must be put in the PKCS#7 envelope in Contents.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.ByteRange">
            <summary>
            Gets an array of <see cref="T:GrapeCity.Documents.Common.ByteRange"/> structures defining the content
            used to calculate <see cref="P:GrapeCity.Documents.Pdf.Security.Signature.Contents"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.R">
            <summary>
            Gets the version of the signature handler that was used to create the signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.V">
            <summary>
            Gets the version of the signature dictionary format.
            It corresponds to the usage of the signature dictionary in the context of the value of SubFilter.
            The value is 1 if the Reference dictionary is considered critical to the validation of the signature.
            Default value: 0.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Prop_AuthTime">
            <summary>
            Gets the number of seconds since the signer was last authenticated.
            It is intended to be used in claims of signature repudiation. It should be omitted if the value is unknown.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Prop_AuthType">
            <summary>
            Gets or sets the method used to authenticate the signer.
            It is intended to be used in claims of signature repudiation.
            Valid values include PIN, Password, and Fingerprint.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.CreateParser">
            <summary>
            Creates an <see cref="T:GrapeCity.Documents.Pdf.ISignatureParser"/> object that can be used to parse a binary signature.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.ISignatureParser"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.VerifySignatureValue">
            <summary>
            Verifies the signature by checking that embedded data digest corresponds to the calculated one.
            </summary>
            <returns>true if signature is correct and corresponds to the signed data.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.Signature.VerifySignature">
            <summary>
            Verifies the signature.
            </summary>
            <returns>True if the signature was verified successfully, false otherwise.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Type">
            <summary>
            Gets the signature type,
            if present, shall be "Sig" for a signature dictionary or 
            "DocTimeStamp" for a time-stamp signature dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Filter">
            <summary>
            Gets the name of the preferred signature handler to use when validating this signature.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.SubFilter">
            <summary>
            Gets a name that describes the encoding of the signature value and key information in the signature dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Contents">
            <summary>
            Gets the signature value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Name">
            <summary>
            Gets the name of the person or authority signing the document.
            This value should be used only when it is not possible to extract the name from the signature;
            for example, from the certificate of the signer.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.SigningTime">
            <summary>
            Gets the time of signing.
            Depending on the signature handler, this may be a normal unverified computer time or
            a time generated in a verifiable way from a secure time server.
            This value should be used only when the time of signing is not available in the signature;
            for example, a time stamp can be embedded in a PKCS#7 binary data object (see PDF specification for more details).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Location">
            <summary>
            Gets the CPU host name or physical location of the signing.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.Reason">
            <summary>
            Gets the reason for the signing, such as "I agree...".
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.Signature.ContactInfo">
            <summary>
            Gets the information provided by the signer to enable a recipient to contact the signer
            to verify the signature (for example, a phone number).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.AccessType">
            <summary>
            Defines possible access types for a PDF document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessType.InvalidPassword">
            <summary>
            Invalid password specified.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessType.User">
            <summary>
            User access.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.AccessType.Owner">
            <summary>
            Owner access.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.PasswordMatches">
            <summary>
            Defines the flags that describe a PDF's password protection status.
            <para>See <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.PasswordMatches"/> property for details.</para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PasswordMatches.None">
            <summary>
            The document is not encrypted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PasswordMatches.UserPasswordEmpty">
            <summary>
            The document is encrypted with an empty User password.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PasswordMatches.OwnerPasswordEmpty">
            <summary>
            The document is encrypted with an empty Owner password.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PasswordMatches.UserPasswordMatch">
            <summary>
            The password passed to the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.Byte[])"/> or
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.String)"/> method
            matches the document's User password.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PasswordMatches.OwnerPasswordMatch">
            <summary>
            The password passed to the <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.Byte[])"/> or
            <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.Load(System.IO.Stream,System.String)"/> method
            matches the document's Owner password.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler">
            <summary>
            Defines base class for Standard Security Handlers.
            These security handlers allow access permissions and up to two passwords to be specified for a document:
            an owner password and a user password.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_Buf">
            <summary>
            Used in internal calculations.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler._rc4Key">
            <summary>
            The encryption key generated with using Algorithm 3.2
            used in RC4 algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler._md5">
            <summary>
            The MD5 hash algorithm used by this security handler.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler._rc4">
            <summary>
            The RC4 encryption algorithm used by this security handler.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_AesKey">
            <summary>
            The encryption key generated with using Algorithm 3.2
            used with AES algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_Aes">
            <summary>
            The AES encryption algorithm used by this security handler.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_EncryptionKeyLength">
            <summary>
            Should be initialized in the <see cref="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.InitializeEncrypt(GrapeCity.Documents.Pdf.GcPdfDocument)"/> or
            <see cref="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.InitializeDecrypt(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.DecryptionOptions)"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_StringsAlgorithm">
            <summary>
            The algorithm should be used to encrypt/decrypt strings.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_StreamsAlgorithms">
            <summary>
            The algorithms should be used to encrypt/decrypt streams,
            value of <see cref="T:GrapeCity.Documents.Pdf.Security.EncryptionStreamType"/> is used as an index.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.m_AesIV">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.GetPaddedPassword(GrapeCity.Documents.Pdf.PdfPassword)">
            <summary>
            Pad or truncate the password string to exactly 32 bytes.
            If the password string is more than 32 bytes long, use only its first 32 bytes;
            if it is less than 32 bytes long, pad it by appending the required number of additional bytes from
            the beginning of the <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.s_PasswordPadding"/> string.
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.CalculateUserKey(System.Byte[],System.Byte[])">
            <summary>
            Calculate what the U value should consist of given a particular key and
            document configuration.Correponds to Algorithms 3.4 and 3.5 of the
            PDF Reference version 1.7
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.CalculateGeneralEncryptionKey(System.Byte[],System.Byte[])">
            <summary>
            Determine what the general encryption key is, given a configuration.
            This corresponds to Algorithm 3.2 of PDF Reference version 1.7.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.CalculateInitialOwnerPasswordKeyBytes(System.Byte[])">
            <summary>
            Establish the key to be used for the generation and validation
            of the user password via the O entry.Corresponds to steps 1-4 in
            Algorithm 3.3 of the PDF Reference version 1.7.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.IsUserPassword(System.Byte[],System.Byte[])">
            <summary>
            Checks whether password is a valid user password,
            see Algorithm 3.6 of PDF1.7.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.CalculateOwnerKey(System.Byte[],System.Byte[])">
            <summary>
            Calculate what the O value of the Encrypt dictionary should look like given a
            particular configuration.Not used, but useful for reference; this
            process is reversed to determine whether a given password is the
            owner password.Corresponds to Algorithm 3.3 of the PDF Reference
            version 1.7.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.IsOwnerPassword(System.Byte[],System.Byte[],System.Byte[]@)">
            <summary>
            Check to see whether a given password is the owner password. Corresponds
            to algorithm 3.6 of PDF Reference version 1.7.
            </summary>
            <param name="permanentID"></param>
            <param name="paddedPassword"></param>
            <param name="userPassword">Contains the user password which should be used to read document's content.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.SetUserPassword(GrapeCity.Documents.Pdf.PdfPassword)">
            <summary>
            Sets <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPassword"/> called from setter of UserPassword property.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.SetOwnerPassword(GrapeCity.Documents.Pdf.PdfPassword)">
            <summary>
            Sets <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPassword"/> called from setter of OwnerPassword property.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.DecryptData(System.Byte[],System.Int32,GrapeCity.Documents.Pdf.Security.EncryptionAlgorithm,System.Int32,System.Int32)">
            <summary>
            Decrypts data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.EncryptData(System.Byte[],System.Int32,GrapeCity.Documents.Pdf.Security.EncryptionAlgorithm,System.Int32,System.Int32)">
            <summary>
            Encrypts data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.InitEncrypt(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            The method should be overriden by the children classes instead of
            <see cref="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.InitEncrypt(GrapeCity.Documents.Pdf.GcPdfDocument)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.InitDecrypt(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.DecryptionOptions)">
            <summary>
            The method shoul dbe overriden by the children classes instead of
            <see cref="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.InitializeDecrypt(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.DecryptionOptions)"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.R">
            <summary>
            The <b>R</b> entry of encryption dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.V">
            <summary>
            The <b>V</b> entry of encryption dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.P">
            <summary>
            The <b>P</b> entry of encryption dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.PNotNull">
            <summary>
            The <b>P</b> entry of encryption dictionary, <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.All"/> if entry does not exist.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.O">
            <summary>
            The <b>O</b> entry of encryption dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.U">
            <summary>
            The <b>U</b> entry of encryption dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.AssignFrom(GrapeCity.Documents.Pdf.Security.SecurityHandlerBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Filter">
            <summary>
            For internal use.
            Gets the name of security handler, the value of the <b>Filter</b> entry of
            encryption dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Version">
            <summary>
            For internal use.
            Gets the code specifying the algorithm to be used in encrypting and decrypting the document.
            "V" entry of encryption dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.SubFilter">
            <summary>
            For internal use.
            The "SubFilter" entry of encryption dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.HasUserPassword">
            <summary>
            Gets a value indicating whether the PDF has a user password
            that is required to open the document.
            <para>
            This property is initialized when the document is loaded.
            </para>
            <para>
            Note that a document may be encrypted with an empty password,
            in which case <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.HasUserPassword"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.HasOwnerPassword"/>
            properties return <see langword="false"/>.
            </para>
            Note also that, according to the PDF specification, if an owner password is not specified,
            then the user password should be used.
            GcPdf follows this rule, so if a PDF that was created using GcPdf with only a user password
            is loaded into <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>, its <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.AccessType"/> will be <see cref="F:GrapeCity.Documents.Pdf.Security.AccessType.Owner"/>,
            <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.HasOwnerPassword"/> will be <see langword="true"/> and HasUserPassword will also be <see langword="true"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.HasOwnerPassword">
            <summary>
            Gets a value indicating whether the PDF has an owner password
            that is required to edit the document.
            <para>
            This property is initialized when the document is loaded.
            </para>
            <para>
            Note that a document may be encrypted with an empty password,
            in which case <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.HasUserPassword"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.HasOwnerPassword"/>
            properties return <see langword="false"/>.
            </para>
            Note also that, according to the PDF specification, if an owner password is not specified,
            then the user password should be used.
            GcPdf follows this rule, so if a PDF that was created using GcPdf with only a user password
            is loaded into <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>, its <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.AccessType"/> will be <see cref="F:GrapeCity.Documents.Pdf.Security.AccessType.Owner"/>,
            HasOwnerPassword will be <see langword="true"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.HasUserPassword"/> will also be <see langword="true"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.PasswordMatches">
            <summary>
            Gets a combination of flags that indicate how the password specified
            when loading the PDF matches the document's User and Owner passwords.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.AccessType">
            <summary>
            Gets the access type granted by this <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler"/>, or null.
            This property is initialized when a document is loaded.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Revision">
            <summary>
            Gets the revision of this <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPassword">
            <summary>
            Gets or sets the password required to open a PDF document as a string.
            <para>
            The two properties <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPassword"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPasswordBytes"/> allow
            to define the password as a string or as an array of bytes.
            </para>
            According to the PDF specification, a string password should be converted to an array of bytes
            using the system code page (if the standard security handler with revision 4 or less is used).
            In some environments the system code page is unavailable, so GcPdf cannot perform this conversion.
            If the password string only contains ASCII chars, this does not present a problem.
            But if the password string contains non-ASCII Unicode characters, it is up to the developer
            to perform the conversion and set the password using <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPasswordBytes"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPasswordBytes">
            <summary>
            Gets or sets the password required to open a PDF document as a byte array.
            <para>
            The two properties <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPassword"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.UserPasswordBytes"/> allow
            to define the password as a string or as an array of bytes.
            </para>
            According to the PDF specification, a string password should be converted to an array of bytes
            using the system code page (if the standard security handler with revision 4 or less is used).
            In some environments the system code page is unavailable, so GcPdf cannot perform this conversion.
            If the password string only contains ASCII chars, this does not present a problem.
            But if the password string contains non-ASCII Unicode characters, it is up to the developer
            to perform the conversion and set the password using this property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPassword">
            <summary>
            Gets or sets the password required to change permissions of a PDF document as a string.
            <para>
            The two properties <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPassword"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPasswordBytes"/> allow
            to define the password as a string or as an array of bytes.
            </para>
            According to the PDF specification, a string password should be converted to an array of bytes
            using the system code page (if the standard security handler with revision 4 or less is used).
            In some environments the system code page is unavailable, so GcPdf cannot perform this conversion.
            If the password string only contains ASCII chars, this does not present a problem.
            But if the password string contains non-ASCII Unicode characters, it is up to the developer
            to perform the conversion and set the password using this property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPasswordBytes">
            <summary>
            Gets or sets the password required to change permissions of a PDF document as a byte array.
            <para>
            The two properties <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPassword"/> and <see cref="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.OwnerPasswordBytes"/> allow
            to define the password as a string or as an array of bytes.
            </para>
            According to the PDF specification, a string password should be converted to an array of bytes
            using the system code page (if the standard security handler with revision 4 or less is used).
            In some environments the system code page is unavailable, so GcPdf cannot perform this conversion.
            If the password string only contains ASCII chars, this does not present a problem.
            But if the password string contains non-ASCII Unicode characters, it is up to the developer
            to perform the conversion and set the password using this property.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions">
            <summary>
            For internal use.
            Defines possible access permissions.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.All">
            <summary>
            Full permissions.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.Revision3Permissions">
            <summary>
            Permissions require Revision 3 or greater of <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.PrintingMask">
            <summary>
            Combination of <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.Print"/> and <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.QualityPrint"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.EditingMask">
            <summary>
            Combination of <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.CreateModifyFormFields"/>, <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.CreateModifyAnnotationsFillFieldValues"/>,
            <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.FillFieldValues"/> and <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.AssembleDocument"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.CopyContentMask">
            <summary>
            Combination of <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.ExtractContent"/> and <see cref="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.ExtractContentDisabilities"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.Print">
            <summary>
            (Revision 2) Print the document.
            (Revision 3 or greater) Print the document (possibly not at the highest quality level, depending on whether bit 12 is also set).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.CreateModifyFormFields">
            <summary>
            Modify the contents of the document by operations other than those controlled by bits 6, 9, and 11.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.ExtractContent">
            <summary>
            (Revision 2) Copy or otherwise extract text and graphics from the document, including extracting text and graphics (in support of accessibility to users with disabilities or for other purposes).
            (Revision 3 or greater) Copy or otherwise extract text and graphics from the document by operations other than that controlled by bit 10.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.CreateModifyAnnotationsFillFieldValues">
            <summary>
            Add or modify text annotations, fill in interactive form fields, and, if bit 4 is also set, create or modify interactive form fields (including signature fields).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.FillFieldValues">
            <summary>
            (Revision 3 or greater) Fill in existing interactive form fields (including signature fields), even if bit 6 is clear.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.ExtractContentDisabilities">
            <summary>
            (Revision 3 or greater) Extract text and graphics (in support of accessibility to users with disabilities or for other purposes).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.AssembleDocument">
            <summary>
            (Revision 3 or greater) Assemble the document (insert, rotate, or delete pages and create bookmarks or thumbnail images), even if bit 4 is clear.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.StandardSecurityHandler.Permissions.QualityPrint">
            <summary>
            (Revision 3 or greater) Print the document to a representation from which a faithful digital copy of the PDF content could be generated. When this bit is clear (and bit 3 is set), printing is limited to a low-level representation of the appearance, possibly of degraded quality.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2">
            <summary>
            Defines Standard Security Handler Revision 2.
            This handler uses RC4 encryption with key 40 bit length.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2.AllowPrint">
            <summary>
            Gets or sets whether the user can print the PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2.AllowEditContent">
            <summary>
            Gets or sets whether the user can edit the contents of the PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2.AllowCopyContent">
            <summary>
            Gets or sets whether the user can copy contents from the PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev2.AllowEditAnnotations">
            <summary>
            Gets or sets whether the user can edit annotations in the PDF document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.PrintingPermissions">
            <summary>
            Enumerates possible permissions that control the printing of a document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PrintingPermissions.Enabled">
            <summary>
            Printing is enabled with maximum quality.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PrintingPermissions.Disabled">
            <summary>
            Printing is disabled.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.PrintingPermissions.LowResolution">
            <summary>
            Printing is limited to a low-level representation of the appearance, possibly of degraded quality.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.EditingPermissions">
            <summary>
            Flags specifying possible permissions that control the editing of a document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.Enabled">
            <summary>
            Editing is enabled.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.Disabled">
            <summary>
            Editing is disabled.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.CreateModifyFormFields">
            <summary>
            Allows creating or modifying interactive form fields.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.CreateModifyAnnotationsFillFieldValues">
            <summary>
            Allows adding or modifying text annotations and filling in interactive form fields.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.FillFieldValues">
            <summary>
            Allows filling in existing interactive form fields (including signature fields).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EditingPermissions.AssembleDocument">
            <summary>
            Allows assembling the document (insert, rotate, or delete pages and create bookmarks or thumbnail images).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.CopyContentPermissions">
            <summary>
            Enumerates possible permissions that control the ability to copy a document's content.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.CopyContentPermissions.Enabled">
            <summary>
            Content copying is enabled.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.CopyContentPermissions.Disabled">
            <summary>
            Content copying is disabled.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3">
            <summary>
            Represents a Standard Security Handler Revision 3.
            <para>
            This handler uses RC4 encryption with key from 40 to 128 bit length and allows
            to define additional permission flags.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.SetEncryptionKeyLength(System.Int32)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.PrintingPermissions">
            <summary>
            Gets or sets a value controlling how a document can be printed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.EditingPermissions">
            <summary>
            Gets or sets a value controlling how a document can be edited.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.CopyContentPermissions">
            <summary>
            Gets or sets a value controlling how a document's content can be copied or extracted.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.CopyContent">
            <summary>
            Gets or sets a value indicating whether a document's content can be copied or extracted.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.CopyContentAccessibility">
            <summary>
            Gets or sets a value used to determine whether content could be extracted for
            the purposes of accessibility.
            <para>
            Note however that this restriction has been deprecated in PDF 2.0,
            which states that PDF readers shall ignore this bit.
            The default value of this property is true, and it should not be changed.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3.EncryptionKeyLength">
            <summary>
            Gets or sets the length of the encryption key, in bits.
            The value must be a multiple of 8, in the range from 40 to 128.
            <para>
            IMPORTANT NOTE: <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4"/> can use RC4 or AES encryption,
            and according to specification, with RC4 any key length in the range from 40 to 128 can be used.
            But tests show that current/recent versions of <b>Adobe Acrobat Reader DC</b> and <b>Adobe Acrobat Pro DC</b>
            cannot handle files encrypted with RC4 if the key length is not equal to 128.
            Older versions of Acrobat Reader handle such files without issues, so it looks like a bug in
            the newer versions of Acrobat Reader.
            So it is recommended that <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev3"/> is used
            in cases when RC4 encryption with key length other than 128 is required.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.EncryptionAlgorithm">
            <summary>
            Defines possible encryption algorithms.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionAlgorithm.RC4">
            <summary>
            The RC4 algorithm.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Security.EncryptionAlgorithm.AES">
            <summary>
            The AES algorithm.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4">
            <summary>
            Represents Standard Security Handler Revision 4.
            <para>
            This handler can use RC4 encryption with key 40-128 bit or AES encryption with 128 bit key and allows
            to define additional permission flags.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.GetStdCF">
            <summary>
            Returns the <b>StdCF</b> dictionary or null if it does not exists.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.GetOrCreateStdCF">
            <summary>
            Returns existing or creates empty <b>StdCF</b> dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.EncryptMetadata">
            <summary>
            Gets or sets a value indicating whether the document-level metadata stream
            is to be encrypted.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.EncryptionAlgorithm">
            <summary>
            Gets or sets the encryption algorithm to use.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.EncryptStrings">
            <summary>
            Gets or sets a value indicating whether strings should be encrypted.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.EncryptStreams">
            <summary>
            Gets or sets a value indicating whether streams should be encrypted.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.EncryptEmbeddedFiles">
            <summary>
            Gets or sets a value indicating whether embedded file streams should be encrypted.
            <para>
            NOTE: It looks like Acrobat Reader processes EFF key in 
            the encryption dictionary incorrectly so this property was changed from public to internal and
            GcPdf does not write EFF entry at all.
            See DOC-1351, DOC-1352 for details.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev4.AesIV">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5">
            <summary>
            Represents Standard Security Handler Revision 5.
            <para>
            This handler always use AES encryption with key length of 256 bit,
            it is described in Adobe Supplement to the ISO 32000.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.EncryptionAlgorithm">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5"/> always use AES encryption.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.EncryptionKeyLength">
            <summary>
            <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5"/> always use 256 key length.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.AssignFrom(GrapeCity.Documents.Pdf.Security.SecurityHandlerBase)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.PermsBytes">
            <summary>
            For internal use.
            The 4 bytes used to calculate Perms entry. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.UserValidationSalt">
            <summary>
            For internal use.
            The User Validation Salt is used when encoding document. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.UserKeySalt">
            <summary>
            For internal use.
            The User Key Salt is used when encoding document. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.OwnerValidationSalt">
            <summary>
            For internal use.
            The Owner Validation Salt is used when encoding document. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.OwnerKeySalt">
            <summary>
            For internal use.
            The Owner Key Salt is used when encoding document. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev5.FileEncryptionKey">
            <summary>
            For internal use.
            The File Encryption Key is used when encoding document. If not specified then will be randomly generated.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev6">
            <summary>
            Represents Standard Security Handler Revision 6.
            <para>
            This handler always use AES encryption with key length of 256 bit,
            it is described in PDF 2.0 specification.
            </para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev6.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev6"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Security.StandardSecurityHandlerRev6.GetHash(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Byte[])">
            <summary>
            Implementation details see in PDF2.0 page 80,
            chapter 7.6.4.3.4 Algorithm 2.B: Computing a hash (revision 6 and later)
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Security.UnknownSecurityHandler">
            <summary>
            Represents a security handler of a type that is not currently supported by GcPdf.
            <para>
            An instance of this type will be created if a loaded PDF uses a security handler
            of an unsupported type.
            </para>
            <para>
            Instances of this type cannot be directly created in user code.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo">
            <summary>
            For internal use only.
            Holds information about an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>.
            The instance of this class can be serialized/deserialized with <see cref="T:System.Xml.Serialization.XmlSerializer"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo.Null">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo"/> representing the null value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo.ObjID">
            <summary>
            The PDF object ID if object is indirect.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo.#ctor(System.String,System.String,GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo.ShouldSerializeObjID">
            <summary>
            Returns a value indicating whether the <see cref="F:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo.ObjID"/> property should be serialized.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo.Create(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Creates a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo"/> class
            representing the <paramref name="ipo"/>,
            returns <see cref="F:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo.Null"/> is <paramref name="ipo"/> is null.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Serialization.PdfObjectInfo.IsSame(GrapeCity.Documents.Common.ValueInfo)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.AudioFormat">
            <summary>
            Defines audio formats supported by <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AudioFormat.Auto">
            <summary>
            Auto detect audio format.s
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AudioFormat.Wav">
            <summary>
            The WAV format.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.AudioFormat.Aiff">
            <summary>
            The AIFF format.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SoundEncodingFormat">
            <summary>
            Defines possible encoding formats for sample data in a <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SoundEncodingFormat.Raw">
            <summary>
            Unspecified or unsigned values in the range 0 to 2^BitsPerSample-1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SoundEncodingFormat.Signed">
            <summary>
            Twos-complement values.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SoundEncodingFormat.muLaw">
            <summary>
            u-law-encoded samples.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.SoundEncodingFormat.ALaw">
            <summary>
            A-law-encoded samples.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.SoundObject">
            <summary>
            Represents a sound object, which is a stream containing sample values
            that define a sound to be played through the computer's speakers.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SoundObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SoundObject.SamplingRate">
            <summary>
            Gets or sets the sampling rate, in samples per second.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SoundObject.SoundChannels">
            <summary>
            Gets or sets the number of sound channels.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SoundObject.BitsPerSample">
            <summary>
            Gets or sets the number of bits per sample value per channel.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.SoundObject.EncodingFormat">
            <summary>
            Gets or sets the encoding format for the sample data, see <see cref="T:GrapeCity.Documents.Pdf.SoundEncodingFormat"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SoundObject.GetAudioDataStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> object containing the audio data.
            <para>IMPORTANT: that the stream should be disposed after usage.</para>
            </summary>
            <returns>The <see cref="T:System.IO.Stream"/> containing audio data, should be disposed after usage.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SoundObject.SetAudioDataStream(System.IO.Stream)">
            <summary>
            Sets the audio data stream.
            <para>IMPORTANT: the stream will be read when the document is saved, 
            so it should be available at that time.</para>
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> containing audio data.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SoundObject.FromFile(System.String,GrapeCity.Documents.Pdf.AudioFormat)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/> from a specified file.
            <para>Note that only a limited set of audio formats is supported, see <see cref="T:GrapeCity.Documents.Pdf.AudioFormat"/> for details.</para>
            </summary>
            <param name="fileName">The file with the audio.</param>
            <param name="audioFormat">The audio format.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.SoundObject.FromStream(System.IO.Stream,GrapeCity.Documents.Pdf.AudioFormat)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/> from a specified stream.
            <para>Note that only a limited set of audio formats is supported, see <see cref="T:GrapeCity.Documents.Pdf.AudioFormat"/> for details.</para>
            </summary>
            <param name="stream">The stream with audio data.</param>
            <param name="audioFormat">The audio format.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.SoundObject"/>.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceItem">
            <summary>
            For internal use.
            Base class representing an item of the document cross-reference index.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceItem.Offset">
            <summary>
            The offset of the referenced PDF object in the linked stream for the <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem"/>
            and object number of next free object for free item.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceItem.Flags">
            <summary>
            The item flags.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceItem.ObjID">
            <summary>
            The ID of the PDF object referenced by this entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.CrossReferenceItem.CrossReferenceIndexID">
            <summary>
            Gets or sets the ID of the cross-reference index was produced this entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.CrossReferenceItem.IsFree">
            <summary>
            Gets a value indicating whether this entry is free.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.CrossReferenceItem.PdfObjectInitialized">
            <summary>
            Gets or sets a value indicating whether the <see cref="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.PdfObject"/>
            is initialized and was read from the PDF stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem">
            <summary>
            Base abstract class for items of the cross-reference index associated with some indirect PDF object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.Owner">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex"/> owning this item,
            can be null if the linked PDF object was just created but not loaded or saved.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.PdfObject">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> referenced by this item.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.ParsedObject">
            <summary>
            The parsed <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> object
            which was created from PDF object identified by this <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.ReadPdfObject">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> referenced by this item,
            method called once, the value is cached in the <see cref="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.PdfObject"/> property.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.GetPdfObject">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> referenced by this item.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.Parser">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Parser.PdfParser"/> used by the owning <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectItem.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this item, 
            can be null if linked PDF object was just created not loaded or saved.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceNormalItem">
            <summary>
            Represents the item of the document cross-reference index, references an indirect object
            in the main PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceNormalItem.ReadPdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndirectObjectItem">
            <summary>
            The item added with <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.RegisterPdfObject(GrapeCity.Documents.Pdf.Spec.IPdfObject)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndirectObjectItem.ReadPdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectStreamItem">
            <summary>
            Represents the item of the document cross-reference index references
            an indirect object in the PDF Object Stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectStreamItem.ObjectStream">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.ObjectStream"/>, PDF Object Stream containing
            the PDF object referenced by this entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceObjectStreamItem.ReadPdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex">
            <summary>
            For internal use.
            The document cross-reference index, it is created when document is loaded and updated when
            document is saved.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex.Doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this cross-reference index.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex._items">
            <summary>
            The array of cross-reference items.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex._maxObjID">
            <summary>
            The maximum object ID added to the <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex.MaxObjID">
            <summary>
            Gets the maximum object ID added to the <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex.Clear">
            <summary>
            Clears the cross-reference index.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex.AddNormalItem(System.Int32,System.Int32,System.Int64)">
            <summary>
            Called during writing a document to the output stream.
            Adds the "normal" cross-reference item with the specified offset in the main PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex.Fix(System.Int32)">
            <summary>
            See DOC-1555 for details.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex.AddFreeItem(System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>
            Called during parsing a PDF stream, adds "free" cross-reference item.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex.AddNormalItem(System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>
            Called during parsing a PDF stream, adds "normal" cross-reference item
            pointing to the PDF object with specified offset in the main PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex.AddObjectStreamItem(System.Int32,GrapeCity.Documents.Pdf.Spec.ObjectStream,System.Int32)">
            <summary>
            Called during parsing a PDF stream, adds a cross-reference item
            pointing to the PDF object in the PDF object stream,
            see PDF specification about PDF object streams.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex.AddIndirectPdfObject(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Adds the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase"/> to the <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndex"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator">
            <summary>
            Generates the document cross-reference index when document saving or when
            document is generated with StartDoc() / EndDoc() methods.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.Doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> using this <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator._items">
            <summary>
            The items of the <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator._maxObjID">
            <summary>
            The maximum object ID.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.WrittenObjectCounter">
            <summary>
            Increments each time when an offset is specified for an object,
            i.e. when an object is written to the output stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.FirstWrittenObjectID">
            <summary>
            Contains an ID of a first object was written when the <see cref="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.FirstWrittenObjectID"/> was
            &lt;= 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.LastWrittenObjectID">
            <summary>
            Contains an ID of a last written object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.ReuseOldObjID">
            <summary>
            Indicates whether to reuse old ObjID when generating a new.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.SkipValidIDs(System.Int32)">
            <summary>
            Returns the index of a first null item or with <see cref="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.Item.Offset"/> &lt;= 0.
            </summary>
            <param name="startIndex">The index from which search is started.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.SkipInvalidIDs(System.Int32)">
            <summary>
            Returns the index of first not null item with <see cref="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.Item.Offset"/> &gt;= 0.
            </summary>
            <param name="startIndex">The index from which search is started.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.Clear">
            <summary>
            Called when saving of document is finished.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.Init">
            <summary>
            Initializes the <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator"/>, called before saving the document
            or when document generation is started with <see cref="M:GrapeCity.Documents.Pdf.GcPdfDocument.StartDoc(System.IO.Stream)"/>
            method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.AddObjRefPosition(GrapeCity.Documents.Pdf.Spec.PdfObjID,System.Int64)">
            <summary>
            Linearization mode only.
            Adds the reference offset points to the object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.GetItem(System.Int32)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.Item"/> with specified object ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.UpdateRefOffsets(System.Int32,System.Int64)">
            <summary>
            Linearization mode only.
            Updates references offsets on specified value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.GetWrittenObjectIDs">
            <summary>
            Get IDs of the objects which were actually written to the output stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.GetObjID">
            <summary>
            Generates new object ID.
            NOTE! This method should be called by each PDF object only ONCE.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.GenerateObjID(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            For internal use only.
            Generates the object ID for specified <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>,
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.GetObjOffset(System.Int32)">
            <summary>
            Returns the offset of an object in the output PDF stream,
            returns -1 if object was not written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.GetObjOffset(GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Returns the offset of an object in the output PDF stream,
            returns -1 if object was not written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.GetObj(System.Int32)">
            <summary>
            Returns an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> object associated with specified ID,
            returns null if there are NO object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.SetObjOffset(System.Int32,System.Int64)">
            <summary>
            Sets the offset of an object in the output PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.AfterSave">
            <summary>
            Called when document is saved.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.Item">
            <summary>
            The item of the <see cref="T:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator"/>, holds the offset of an object
            in the output stream, an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> and optional
            info used when document is saved in linearized form.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.Item.Offset">
            <summary>
            The offset of an object in the output stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.Item.Object">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> associated with the item.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.CrossReferenceIndexGenerator.Item.RefOffsets">
            <summary>
            The linearization mode only.
            The list of offsets of the references to the object in the output stream,
            i.e. where are all "10 0 R".
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.ObjectStream">
            <summary>
            Represents a PDF Object stream.
            See PDF1.7, 3.4.6 Object Streams.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.ObjectStream.PdfObject">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/> used to create instance of this <see cref="T:GrapeCity.Documents.Pdf.Spec.ObjectStream"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.ObjectStream.Entries">
            <summary>
            The entries for compressed objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.ObjectStream.Reader">
            <summary>
            The reader used to parse content.
            NOTE! Stream used by the Reader should be disposed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.ObjectStream.Entry">
            <summary>
            Defines entry of "compressed object" within "Object Stream".
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.ObjectStream.Entry.ObjID">
            <summary>
            The ID of compressed object, generation always 0.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.ObjectStream.Entry.Offset">
            <summary>
            Offset from the beginning of stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfArray">
            <summary>
            Represents an array interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArrayObject"/>,
            allows working with objects of both types in the same way.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfArray.Array">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IList`1"/> interface.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfArray.Changed">
            <summary>
            Gets the value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> was changed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfArray.IsCollection">
            <summary>
            For internal use.
            Gets a value indicating whether items can be added to or removed from
            the <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfArray.Array"/>. If <see langword="false"/>, adding or removing items can break
            the PDF.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfArray">
            <summary>
            Represents a PDF Array object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfArray.IdentityMatrix">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> representing the Identity matrix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(GrapeCity.Documents.Common.Offsets)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(System.Numerics.Matrix3x2)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(GrapeCity.Documents.Pdf.Spec.IPdfObject[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(System.Collections.Generic.IReadOnlyList{System.Drawing.PointF})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.#ctor(System.Collections.Generic.IReadOnlyList{GrapeCity.Documents.Common.Quadrilateral})">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfArray.WasLoaded">
            <summary>
            See <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.WasLoaded"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.CreateStringsArray(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> objects,
            returns null if <paramref name="strings"/> is null.
            </summary>
            <param name="strings">The list of strings.</param>
            <param name="skipEmpty">Indicates whether to skip empty or null strings.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.CreateNamesArray(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> objects,
            returns null if <paramref name="strings"/> is null.
            </summary>
            <param name="strings">The list of strings.</param>
            <param name="skipEmpty">Indicates whether to skip empty or null strings.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArray.ToString">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfArray.Changed">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> was changed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfArrayObject">
            <summary>
            Represents a PDF Array indirect object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfArrayObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfArray)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArrayObject"/> class.
            </summary>
            <param name="value">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.Value"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfArrayObject.Changed">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArrayObject"/> was changed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfArrayObject.Array">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt">
            <summary>
            Contains extension methods for the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> interface,
            allows working with <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArrayObject"/> in the same way.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGet``2(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,``1@,System.Boolean,GrapeCity.Documents.Pdf.Spec.TryPdfToNativeDelegate{``0,``1})">
            <summary>
            Same as <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGet``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,``0@,System.Boolean@,System.Boolean)"/>,
            but allows converting PDF value to a some native value using
            specified callback method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryAsArray``2(GrapeCity.Documents.Pdf.Spec.IPdfArray,``1[]@,System.Boolean,GrapeCity.Documents.Pdf.Spec.TryPdfToNativeDelegate{``0,``1})">
            <summary>
            Tries to convert all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to <typeparamref name="TNative"/>,
            and copies the converted values to a new array of <typeparamref name="TNative"/>.
            Returns true if all elements can be converted to a <typeparamref name="TNative"/>.
            </summary>
            <param name="array">The current array.</param>
            <param name="values">OUT: The array of <typeparamref name="T"/>.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <param name="pdfToNative">The method converting PDF value to native value.</param>
            <returns>Returns true if no errors occur.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetArray``2(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,``1[]@,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.Spec.TryPdfToNativeDelegate{``0,``1})">
            <summary>
            Tries to get the array of <typeparamref name="TNative"/> objects at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The array of <typeparamref name="T"/>.</param>
            <param name="singleToArray">Indicates whether to convert a single <typeparamref name="T"/> value to an array.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <param name="pdfToNative">The method converting PDF value to native value.</param>
            <returns>Returns true if no errors occur.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.IsContentEqual(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Spec.IPdfObject},System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Spec.IPdfObject})">
            <summary>
            For internal use.
            Compares content of two PDF arrays, returns true if they are equal.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.Clear(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Clears the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.
            </summary>
            <param name="array">The current PDF array.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.Count(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Gets the count of items in the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.
            </summary>
            <param name="array">The current PDF array.</param>
            <returns>The count of items.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.Insert(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Insert an item into <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.
            </summary>
            <param name="array">The current PDF array.</param>
            <param name="index">The index of item.</param>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.RemoveAt(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32)">
            <summary>
            Removes an item with specified index.
            </summary>
            <param name="array">The current PDF array.</param>
            <param name="index">The index of an item to remove.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.RemoveRange(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Int32)">
            <summary>
            Removes a range of items.
            </summary>
            <param name="array">The current PDF array.</param>
            <param name="startIndex">The index of start item.</param>
            <param name="count">The count of items to remove.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.SetCount(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32)">
            <summary>
            Sets the count of items in the array to a specified value.
            If the current count of items is less than <paramref name="count"/>,
            pads the array with <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfNull.Instance"/> objects.
            If the current count is greater than <paramref name="count"/>,
            removes items from the end of the array.
            </summary>
            <param name="array">The current PDF array.</param>
            <param name="count">The required item count.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.SetSilent(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Sets a value associated with a specified index.
            This method does not affect the value of <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfArray.Changed"/> property.
            </summary>
            <param name="array">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.</param>
            <param name="index">The index of the value to set.</param>
            <param name="item">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.SetOrAddSilent(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Sets the value at the specified index, adds null elements if index is too big,
            the method does not affect the <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfArray.Changed"/>.
            Returns true if object was actually changed.
            </summary>
            <param name="array">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.</param>
            <param name="index">The value index.</param>
            <param name="item">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.Set(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Sets the value at the specified index.
            </summary>
            <param name="array">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.</param>
            <param name="index">The value index.</param>
            <param name="item">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.Add(GrapeCity.Documents.Pdf.Spec.IPdfArray,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Adds an item to the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.
            </summary>
            <param name="array">The current PDF array.</param>
            <param name="item">The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> to add.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.SetOrAdd(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Sets the value at the specified index, adds null elements if index is too big.
            </summary>
            <param name="array">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.</param>
            <param name="index">The value index.</param>
            <param name="item">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.IsChanged(GrapeCity.Documents.Pdf.Spec.IPdfArray,GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Checks whether the content of the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> was changed.
            </summary>
            <param name="array">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.</param>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning the <paramref name="array"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.ResetChanged(GrapeCity.Documents.Pdf.Spec.IPdfArray,GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Resets <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfArray.Changed"/> to false, also do it for nested direct objects.
            </summary>
            <param name="array">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.</param>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning the array.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.IsArrayEmpty(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Returns true if the array is empty:
            it has no items or all items are empty arrays or empty dictionaries.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetItem(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32)">
            <summary>
            Gets an item at specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The item index.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> with specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGet``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,``0@,System.Boolean@,System.Boolean)">
            <summary>
            Tries to get the value at the specified index.
            Returns true if value exists and can be converted to a <typeparamref name="T"/>,
            resolves a PDF reference if needed.
            Note! The method does not resolve reference if <typeparamref name="T"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>,
            otherwise the method resolves the reference and returns *actual* object.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The value.</param>
            <param name="isNull">OUT: Indicates whether the value is PDF null.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <returns>Returns true if no errors occur.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryAsArray``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,``0[]@,System.Boolean,System.Boolean)">
            <summary>
            Tries to convert all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to <typeparamref name="T"/>,
            and copies the converted values to a new array of <typeparamref name="T"/>.
            Returns true if all elements can be converted to a <typeparamref name="T"/> or
            they are PDF Null and <paramref name="allowNulls"/> is true.
            </summary>
            <param name="array">The current array.</param>
            <param name="values">OUT: The array of <typeparamref name="T"/>.</param>
            <param name="allowNulls">Indicates whether the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNull"/> should be handled as valid value and converted to <see langword="null"/>.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <returns>Returns true if no errors occur.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetArray``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,``0[]@,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Tries to get the array of <typeparamref name="T"/> objects at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The array of <typeparamref name="T"/>.</param>
            <param name="singleToArray">Indicates whether to convert a single <typeparamref name="T"/> value to an array.</param>
            <param name="allowNulls">Indicates whether to handle <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNull"/> as <see langword="null"/>.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <returns>Returns true if no errors occur.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetArray``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the array of <typeparamref name="T"/> objects at the specified index.
            Returns null if the array does not exist or cannot be converted to an array of <typeparamref name="T"/>.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="singleToArray">Indicates whether to convert a single <typeparamref name="T"/> value to an array.</param>
            <param name="allowNulls">Indicates whether to handle <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNull"/> as <see langword="null"/>.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetArray``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,``0[]@,System.Boolean)">
            <summary>
            Tries to get the array at the specified index,
            if the value does not exist or cannot be converted to an array of <typeparamref name="T"/>
            returns false.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The value.</param>
            <param name="singleToArray">Indicates whether to convert a single <typeparamref name="T"/> value to an array.</param>
            <returns>true if value exists, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.Get``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Boolean)">
            <summary>
            Gets the value at the specified index,
            returns a null if the value cannot be converted to a <typeparamref name="T"/>.
            Note! This method returns <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> if <typeparamref name="T"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>,
            otherwise the method resolves the reference and returns *actual* object.
            Use <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetItem(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32)"/> method if you want to return "raw" value
            without any post-processing.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if value at the specified index can't be converted to the <typeparamref name="T"/>.</param>
            <returns>The value with the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGet``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,``0@,System.Boolean)">
            <summary>
            Tries to get the value at the specified index.
            Note! This method returns <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> if <typeparamref name="T"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>,
            otherwise the method resolves the reference and returns *actual* object.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The value at specified index.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if value at the specified index can't be converted to the <typeparamref name="T"/>.</param>
            <returns>true if successful; false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.AsArray``1(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Converts all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to <typeparamref name="T"/>,
            and copies the converted values to a new array of <typeparamref name="T"/>.
            <para>Returns null if some elements can't be converted to a <typeparamref name="T"/>.</para>
            </summary>
            <param name="array">The current array.</param>
            <returns>An array of <typeparamref name="T"/> containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryAsRect(GrapeCity.Documents.Pdf.Spec.IPdfArray,GrapeCity.Documents.Pdf.Spec.IPdfNumber@,GrapeCity.Documents.Pdf.Spec.IPdfNumber@,GrapeCity.Documents.Pdf.Spec.IPdfNumber@,GrapeCity.Documents.Pdf.Spec.IPdfNumber@)">
            <summary>
            Tries to convert the array to rectangle,
            the array should have 4 elements and all are numbers.
            </summary>
            <param name="array">The current array.</param>
            <param name="left">OUT: The X of left-bottom corner.</param>
            <param name="bottom">OUT: The Y of left-bottom corner.</param>
            <param name="right">OUT: The X of right-top corner.</param>
            <param name="top">OUT: The Y of right-top corner.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.AsRefArray(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Boolean)">
            <summary>
            Converts all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>,
            and copies the converted values to a new array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.
            <para>Returns null if some elements can't be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.</para>
            </summary>
            <param name="array">The current array.</param>
            <param name="allowNull">Indicates whether the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNull"/> should be processed as valid value and converted to <see langword="null"/>.</param>
            <returns>An array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetName(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.String@)">
            <summary>
            Tries to get the PDF name value with the specified index as a string.
            </summary>
            <param name="array">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The string value.</param>
            <returns>true if value exists and can be converted to a PDF name; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetName(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.String)">
            <summary>
            Gets the PDF name at the specified index as a string.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted to a string.</para>
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.AsNameArray(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Converts all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>,
            and copies the converted values to a new array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>.
            <para>Returns null if some elements can't be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>.</para>
            </summary>
            <param name="array">The current array.</param>
            <returns>An array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetNameArray(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.Spec.PdfName[]@,System.Boolean)">
            <summary>
            Tries to get the PDF Name array at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The PDF Name array.</param>
            <param name="singleToArray">Indicates whether to convert a single PDF Name value to an array.</param>
            <returns>true if value at specified index can be converted to an integer array; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetNameArray(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Boolean)">
            <summary>
            Gets the PDF Name array at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="singleToArray">Indicates whether to convert a single PDF Name value to an array.</param>
            <returns>The array at the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.AsNameArrayStr(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Converts all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>,
            and copies the converted values to a new array of <see cref="T:System.String"/>.
            <para>Returns null if some elements can't be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>.</para>
            </summary>
            <param name="array">The current array.</param>
            <returns>An array of <see cref="T:System.String"/> containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetNameArrayStr(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.String[]@,System.Boolean)">
            <summary>
            Tries to get the PDF Name array at the specified index, the PDF Name array represented as string.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The string array.</param>
            <param name="singleToArray">Indicates whether to convert a single PDF Name value to an array.</param>
            <returns>true if value at specified index can be converted to an integer array; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetNameArrayStr(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Boolean)">
            <summary>
            Gets the PDF Name array at the specified index, the PDF Name array represented as string.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="singleToArray">Indicates whether to convert a single PDF Name value to an array.</param>
            <returns>The array at the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.AsDictArray(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Converts all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>,
            and copies the converted values to a new array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.
            <para>Returns null if some elements can't be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.</para>
            </summary>
            <param name="array">The current array.</param>
            <returns>An array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.AsStringArray(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Converts all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to string values,
            and copies the converted values to a new array of strings.
            <para>Returns null if some elements can't be converted to a string.</para>
            </summary>
            <param name="array">The current array.</param>
            <returns>An array of strings containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetString(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.String@)">
            <summary>
            Tries to get the <see cref="T:System.String"/> value with the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The string value.</param>
            <returns>true if value exists and can be converted to a string; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetString(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.String)">
            <summary>
            Gets the string at the specified index.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted to a string.</para>
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the string to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetPdfStringBytes(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32)">
            <summary>
            Gets the bytes of the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/> at the specified index.
            If the value does not exist or cannot be converted to an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/>,
            returns <see langword="null"/>.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the string to return.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.SetPdfStringBytes(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Byte[])">
            <summary>
            Sets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/> at the specified index.
            If the value is <see langword="null"/>, sets the item to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/>.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the item to set.</param>
            <param name="value">The value to set.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.AddString(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.String)">
            <summary>
            Adds a string to the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.
            </summary>
            <param name="array">The current array.</param>
            <param name="value">The string.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.AsIntArray(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Converts all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to integer values,
            and copies the converted values to a new array of integers.
            <para>Returns null if some elements can't be converted to an integer.</para>
            </summary>
            <param name="array">The current array.</param>
            <returns>An array of integers containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetInt(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Tries to get the <see cref="T:System.Int32"/> value at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The integer value.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if value at the specified index can't be converted to int.</param>
            <returns>true if value exists and can be converted to an int; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetInt(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Int32)">
            <summary>
            Gets the int value at the specified index.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted to an int.</para>
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetInt(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Gets the nullable int value at the specified index.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted to an int.</para>
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetIntArray(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Int32[]@,System.Boolean)">
            <summary>
            Tries to get the Integer array at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The integer array.</param>
            <param name="singleToArray">Indicates whether to convert a single Integer value to an array.</param>
            <returns>true if value at specified index can be converted to an integer array; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetIntArray(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Boolean)">
            <summary>
            Gets the Integer array at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="singleToArray">Indicates whether to convert a single Integer value to an array.</param>
            <returns>The array at the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetFloat(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Single@,System.Boolean)">
            <summary>
            Tries to get the <see cref="T:System.Single"/> value at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The float value.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if value at the specified index can't be converted to int.</param>
            <returns>true if value exists and can be converted to a float; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetFloat(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Single)">
            <summary>
            Gets the float value at the specified index.
            <para>Returns <paramref name="defValue"/> if the value cannot be converted to a float.</para>
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetFloat(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Nullable{System.Single}@,System.Boolean)">
            <summary>
            Tries to get the nullable <see cref="T:System.Single"/> value at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The float value.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if value at the specified index can't be converted to int.</param>
            <returns>true if value exists and can be converted to a float; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetFloat(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Nullable{System.Single})">
            <summary>
            Gets the float value at the specified index.
            <para>If the value cannot be converted to a float,
            returns <paramref name="defValue"/> and adds a warning to
            <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>.</para>
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the item to return.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.AsFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Converts all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to float values,
            and copies the converted values to a new array of floats.
            <para>Returns null if some elements can't be converted to an float.</para>
            </summary>
            <param name="array">The current array.</param>
            <returns>An array of floats containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Single[]@,System.Boolean)">
            <summary>
            Tries to get the Float array at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The float array.</param>
            <param name="singleToArray">Indicates whether to convert a single Float value to an array.</param>
            <returns>true if value at specified index can be converted to a float array; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Boolean)">
            <summary>
            Gets the Float array at the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="singleToArray">Indicates whether to convert a single Float value to an array.</param>
            <returns>The array at the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.AsBoolArray(GrapeCity.Documents.Pdf.Spec.IPdfArray)">
            <summary>
            Converts all elements of this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> to bool values,
            and copies the converted values to a new array of bool.
            <para>Returns null if some elements can't be converted to a bool.</para>
            </summary>
            <param name="array">The current array.</param>
            <returns>An array of bool containing all values from this array.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetBool(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Boolean@)">
            <summary>
            Tries to get the <see cref="T:System.Boolean"/> value with the specified index.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The index of the value to get.</param>
            <param name="value">OUT: The integer value.</param>
            <returns>true if value exists and can be converted to an bool; otherwise false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.TryGetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,``0@)">
            <summary>
            Tries to get the enum value at the specified index.
            If the value does not exist or cannot be converted to an enum,
            returns false.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The value index.</param>
            <param name="value">OUT. When this method returns, contains the enum value.</param>
            <returns>true if value exists; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Nullable{``0})">
            <summary>
            Gets the nullable enum value at the specified index.
            If the value does not exist or cannot be converted to an enum,
            returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The value index.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,``0)">
            <summary>
            Gets the enum value at the specified index.
            If the value does not exist or cannot be converted to an enum,
            returns <paramref name="defValue"/>.
            </summary>
            <param name="array">The current array.</param>
            <param name="index">The value index.</param>
            <param name="defValue">The default value.</param>
            <returns>The value at the specified index, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.Util.EnumMap{``0},``0)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.Util.EnumMap{``0},System.Nullable{``0})">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.SetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Nullable{``0})">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.SetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,``0,GrapeCity.Documents.Pdf.Util.EnumMap{``0})">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfArrayExt.SetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,System.Nullable{``0},GrapeCity.Documents.Pdf.Util.EnumMap{``0})">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfBool">
            <summary>
            Represents an interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBoolObject"/>,
            allows working with objects of both types in the same way.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfBool.Bool">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/> value.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfBool">
            <summary>
            Represents a PDF Bool object.
            This class overrides and implements:
            <list type="bullet">
            <item><see cref="M:GrapeCity.Documents.Pdf.Spec.PdfBool.Equals(System.Object)"/></item>
            <item><see cref="M:GrapeCity.Documents.Pdf.Spec.PdfBool.GetHashCode"/></item>
            <item><see cref="T:System.IEquatable`1"/></item>
            <item>The equality operator.</item>
            <item>The inequality operator.</item>
            </list>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfBool.True">
            <summary>
            The <b>true</b> instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/> class.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfBool.False">
            <summary>
            The <b>false</b> instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfBool.Equals(GrapeCity.Documents.Pdf.Spec.PdfBool)">
            <summary>
            Indicates whether the current <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/> is equal to another <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/>
            object of the same type.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfBool.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfBool.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfBool.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfBool.op_Implicit(GrapeCity.Documents.Pdf.Spec.PdfBool)~System.Boolean">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/> to a bool.
            </summary>
            <param name="v">The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/> to convert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfBool.op_Explicit(System.Boolean)~GrapeCity.Documents.Pdf.Spec.PdfBool">
            <summary>
            Converts the bool to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/>.
            </summary>
            <param name="v">The bool value to convert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfBool.op_Equality(GrapeCity.Documents.Pdf.Spec.PdfBool,GrapeCity.Documents.Pdf.Spec.PdfBool)">
            <summary>
            The equality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfBool.op_Inequality(GrapeCity.Documents.Pdf.Spec.PdfBool,GrapeCity.Documents.Pdf.Spec.PdfBool)">
            <summary>
            The inequality operator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfBoolObject">
            <summary>
            Represents a PDF Bool indirect object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfBoolObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfBool)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBoolObject"/> class.
            </summary>
            <param name="value">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfBoolObject.Bool"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfBoolObject.Bool">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfBoolExt">
            <summary>
            Contains extension methods for the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfBool"/> interface,
            allows working with <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBoolObject"/> in the same way.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfBoolExt.AsBool(GrapeCity.Documents.Pdf.Spec.IPdfBool)">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfBool"/> to bool.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfConsts">
            <summary>
            The PDF constants.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.OpenBraceByte">
            <summary>
            '{' code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CloseBraceByte">
            <summary>
            '}' code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.SpaceByte">
            <summary>
            Space (32) code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.RByte">
            <summary>
            'R' code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.OpenSquareBracketByte">
            <summary>
            '[' code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CloseSquareBracketByte">
            <summary>
            ']' code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.OpenBracketByte">
            <summary>
            '(' code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CloseBracketByte">
            <summary>
            ')' code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.NamePrefixByte">
            <summary>
            '/' code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CMapStr1">
            <summary>
            /CIDInit /ProcSet findresource begin
            12 dict begin
            begincmap
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CMapStr2">
            <summary>
             dict dup begin
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CMapStr3">
            <summary>
            /CIDSystemInfo &lt;&lt;
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CMapStr4">
            <summary>
            >> def
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CMapStr5">
            <summary>
            endcmap
            CMapName currentdict /CMap defineresource pop
            end
            end
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.begincodespacerange">
            <summary>
            begincodespacerange
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endcodespacerange">
            <summary>
            endcodespacerange
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.beginbfrange">
            <summary>
            beginbfrange
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endbfrange">
            <summary>
            endbfrange
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.beginbfchar">
            <summary>
            beginbfchar
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endbfchar">
            <summary>
            endbfchar
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.begincidchar">
            <summary>
            begincidchar
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endcidchar">
            <summary>
            endcidchar
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.beginnotdefchar">
            <summary>
            beginnotdefchar
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endnotdefchar">
            <summary>
            endnotdefchar
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.def">
            <summary>
            def
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.end_def">
            <summary>
            end def
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.Type1FontBinaryPartStart">
            <summary>
            currentfile eexec\r
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.trailer">
            <summary>
            trailer
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.BeginDict">
            <summary>
            &lt;&lt;
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.EndDict">
            <summary>
            &gt;&gt;
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.PdfFalse">
            <summary>
            false
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.PdfTrue">
            <summary>
            true
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.PdfNull">
            <summary>
            null
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CRLF">
            <summary>
            CRLF (13 and 10)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endstream">
            <summary>
            endstream
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endstream1">
            <summary>
            \r\nendstream
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endstream2">
            <summary>
            \rendstream
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endstream3">
            <summary>
            \nendstream
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endstream4">
            <summary>
            \n\nendstream
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.xref">
            <summary>
            xref
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.endobj">
            <summary>
            endobj
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.obj">
            <summary>
            obj
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.stream">
            <summary>
            stream
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.EOF">
            <summary>
            %%EOF
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.EOF2">
            <summary>
            %%E
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.startxref">
            <summary>
            startxref
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.startref">
            <summary>
            startref
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.PDF">
            <summary>
            %PDF-
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.cm">
            <summary>
            cm
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.q">
            <summary>
            q
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.Q">
            <summary>
            Q
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.m">
            <summary>
            m
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.c">
            <summary>
            c
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.l">
            <summary>
            l
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.S">
            <summary>
            S
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.j">
            <summary>
            j
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.J">
            <summary>
            J
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.M">
            <summary>
            M
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.w">
            <summary>
            w
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.d">
            <summary>
            d
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.s">
            <summary>
            s
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.f">
            <summary>
            f
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.W">
            <summary>
            W
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.n">
            <summary>
            n
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.h">
            <summary>
            h
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.fStar">
            <summary>
            f*
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.rg">
            <summary>
            rg
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.RG">
            <summary>
            RG
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.g">
            <summary>
            g
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.G">
            <summary>
            G
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.k">
            <summary>
            k
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.K">
            <summary>
            K
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.gs">
            <summary>
            gs
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.re">
            <summary>
            re
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.Do">
            <summary>
            Do
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.WStar">
            <summary>
            W*
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CommentPrefix">
            <summary>
            % ---
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.BT">
            <summary>
            BT
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.ET">
            <summary>
            ET
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.Tm">
            <summary>
            Tm
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.Tj">
            <summary>
            Tj
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.TJ">
            <summary>
            TJ
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.Tf">
            <summary>
            Tf
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.CS">
            <summary>
            CS
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.cs">
            <summary>
            cs
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.SCN">
            <summary>
            SCN
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.scn">
            <summary>
            scn
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.BMC">
            <summary>
            BMC
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.BDC">
            <summary>
            BDC
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.EMC">
            <summary>
            EMC
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.Tz">
            <summary>
            Tz
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.Tr">
            <summary>
            Tr
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.BI">
            <summary>
            BI
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.EI">
            <summary>
            EI
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfConsts.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfDict">
            <summary>
            Represents an interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/>,
            allows working with objects of both types in the same way.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfDict.Dict">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IDictionary`2"/> interface.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfDict.Changed">
            <summary>
            Gets or sets the value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> was changed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfDict">
            <summary>
            Represents a PDF Dictionary object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDict.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDict.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDict.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDict.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfDict.WasLoaded">
            <summary>
            See <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.WasLoaded"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDict.CloneForMerge(System.Collections.Generic.IDictionary{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject},GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            Clones the dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDict.CloneForMerge(System.Collections.Generic.IDictionary{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject},GrapeCity.Documents.Pdf.MergeDocumentsData,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Boolean})">
            <summary>
            Clones the dictionary.
            The copied entries filtered by the <paramref name="filter"/> method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDict.ToString">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfDict.Changed">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> was changed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject">
            <summary>
            Represents a PDF Dictionary indirect object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDictObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDictObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfDict)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/> class.
            </summary>
            <param name="value">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.Value"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDictObject.CloneForMerge(GrapeCity.Documents.Pdf.Spec.PdfDictObject,GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            Clones the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfDictObject.CloneForMerge(GrapeCity.Documents.Pdf.Spec.PdfDictObject,GrapeCity.Documents.Pdf.MergeDocumentsData,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Boolean})">
            <summary>
            Clones the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/> object.
            The copied entries filtered by the <paramref name="filter"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfDictObject.Changed">
            <summary>
            Gets a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/> was changed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfDictObject.Dict">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfDictExt">
            <summary>
            Contains extension methods for the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> interface,
            allows working with <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/> in the same way.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetArray``2(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``1[]@,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.Spec.TryPdfToNativeDelegate{``0,``1})">
            <summary>
            Tries to get the array of <typeparamref name="TNative"/> objects at the specified index.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the array.</param>
            <param name="value">OUT: The array of <typeparamref name="T"/>.</param>
            <param name="singleToArray">Indicates whether to convert a single <typeparamref name="T"/> value to an array.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <param name="pdfToNative">The method converting PDF value to native value.</param>
            <returns>Returns true if no errors occur.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.IsContentEqual(System.Collections.Generic.IDictionary{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject},System.Collections.Generic.IDictionary{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject})">
            <summary>
            For internal use.
            Compares content of two PDF dictionaries, returns true if they are equal.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.DictToString(GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> to a string.
            </summary>
            <param name="dict">The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.CopyToExcluding(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfDict@,System.Collections.Generic.HashSet{GrapeCity.Documents.Pdf.Spec.PdfName})">
            <summary>
            Copies from the current dictionary to <paramref name="dest"/> all properties
            except those specified in <paramref name="propsToExclude"/>.
            <para><paramref name="dest"/> can be <c>null</c>, in that case it will be initialized
            if there are any properties to copy.</para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="dest">The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> object (can be <c>null</c>).</param>
            <param name="propsToExclude">The names of properties to exclude.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.Clear(GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Clears the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.Count(GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Gets the count of items in the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.ContainsKey(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Determines whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> contains the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key to check.</param>
            <returns><see langword="true"/> if this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> contains an element with the specified key, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.Remove(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Removes the value associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key to remove.</param>
            <returns><see langword="true"/> if the element was successfully removed, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.RemoveSilent(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Removes the value associated with the specified key without affecting the <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfDict.Changed"/> value.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key to remove.</param>
            <returns><see langword="true"/> if the element was successfully removed, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetSilent(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Sets the value associated with the specified key without affecting the <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfDict.Changed"/> value.
            If <paramref name="value"/> is <see langword="null"/>, the entry specified by the key will be removed.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.Set(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Sets the value associated with the specified key.
            If <paramref name="value"/> is <see langword="null"/>, the entry specified by the key will be removed.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetCheckChanged(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Sets the value associated with the specified key.
            Does not change the value and does not set the <b>IPdfDict.Changed</b> if value is same
            as current value.
            Note! Values are compare simple by reference.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.IsChanged(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Checks whether the content of the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> was changed.
            </summary>
            <param name="dict">The current dict.</param>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning the <paramref name="dict"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.ResetChanged(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Resets <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfDict.Changed"/> to false, optionally do it for nested objects.
            </summary>
            <param name="dict">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.</param>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning the dictionary.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.CloneForMerge(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.MergeDocumentsData,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Boolean})">
            <summary>
            Clones the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> object.
            The copied entries filtered by the <paramref name="filter"/> method.
            Note! The <paramref name="dict"/> should be <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/> or <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.IsDictEmpty(GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Returns true if the dictionary is empty:
            it has no items or all items are empty arrays or empty dictionaries.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.RemoveStreamEntries(GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Removes all entries related to the stream: Length, Filter, DecodeParms.
            The method does not change the <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfDict.Changed"/> flag.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetStreamData(GrapeCity.Documents.Pdf.Spec.IPdfDict)">
            <summary>
            Returns the decoded stream data if <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> is a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetValue(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject@)">
            <summary>
            Tries to get a value with specified key.
            The method does not perform any processing of the value
            and returns it as is.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value.</param>
            <param name="value">OUT: The value.</param>
            <returns>true if value exists, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGet``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``0@,System.Boolean@,System.Boolean)">
            <summary>
            Tries to get the value associated with the specified key,
            Returns true if value exists and can be converted to a <typeparamref name="T"/>,
            resolves a PDF reference if needed.
            Note! The method does not resolve reference if <typeparamref name="T"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>,
            otherwise the method resolves the reference and returns *actual* object.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT: The value.</param>
            <param name="isNull">OUT: Indicates whether the value is PDF null.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <returns>Returns true if no errors occur.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetArray``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``0[]@,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Tries to gets the array of <typeparamref name="T"/> objects associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the array.</param>
            <param name="value">OUT: The array of <typeparamref name="T"/>.</param>
            <param name="singleToArray">Indicates whether to convert a single <typeparamref name="T"/> value to an array.</param>
            <param name="allowNulls">Indicates whether to handle <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNull"/> as <see langword="null"/>.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <returns>Returns true if no errors occur.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetAtPath``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,``0@,System.Boolean@,System.Boolean,System.Object[])">
            <summary>
            Gets the value at the specified path.
            The path can contain <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfName"/> objects which are interpreted as dictionary keys,
            or integers which are interpreted as <see cref = "T:GrapeCity.Documents.Pdf.Spec.IPdfArray" /> indices.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="value">OUT: The value.</param>
            <param name="isNull">OUT: Indicates whether the value is PDF null.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <param name="path">The path to the value.</param>
            <returns>The value associated with the specified path, or null if the value could not be found.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.Get``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the value associated with the specified key,
            if the value does not exist or cannot be converted to a <typeparamref name="T"/>
            returns <see langword="null"/>.
            Note! This method returns <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> if <typeparamref name="T"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>,
            otherwise the method resolves the reference and returns *actual* object.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <returns>The value associated with the specified key, or null</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.Get``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``0)">
            <summary>
            Gets the value associated with the specified key,
            if the value does not exist or cannot be converted to a <typeparamref name="T"/>
            returns the <paramref name="defValue"/>.
            Note! This method returns <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> if <typeparamref name="T"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>,
            otherwise the method resolves the reference and returns *actual* object.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or null</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGet``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``0@,System.Boolean)">
            <summary>
            Tries to get the value associated with the specified key,
            if the value does not exist or cannot be converted to a <typeparamref name="T"/>
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT: The value.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/>
            if value at the specified index can't be converted to the <typeparamref name="T"/>.</param>
            <returns>true if value exists, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetAtPath``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,System.Object[])">
            <summary>
            Gets the value at the specified path.
            The path can contain <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfName"/> objects which are interpreted as dictionary keys,
            or integers which are interpreted as <see cref = "T:GrapeCity.Documents.Pdf.Spec.IPdfArray" /> indices.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="path">The path to the value.</param>
            <returns>The value associated with the specified path, or null if the value could not be found.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetArray``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``0[]@,System.Boolean)">
            <summary>
            Tries to get the array associated with the specified key,
            if the value does not exist or cannot be converted to an array of <typeparamref name="T"/>
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT: The value.</param>
            <param name="singleToArray">Indicates whether to convert a single <typeparamref name="T"/> value to an array.</param>
            <returns>true if value exists, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetArray``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the array of <typeparamref name="T"/> objects associated with the specified key.
            Returns null if the array does not exist or cannot be converted to an array of <typeparamref name="T"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the array.</param>
            <param name="singleToArray">Indicates whether to convert a single <typeparamref name="T"/> value to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetPdfDateTime(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{GrapeCity.Documents.Pdf.PdfDateTime}@)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value associated with the specified key.
            If the value does not exist or cannot be converted to the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>,
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT. When this method returns, contains the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value.</param>
            <returns>true if value exists; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetPdfDateTime(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{GrapeCity.Documents.Pdf.PdfDateTime})">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value associated with the specified key.
            If the value does not exist or cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/>,
            returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetPdfDateTime(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{GrapeCity.Documents.Pdf.PdfDateTime},System.Nullable{GrapeCity.Documents.Pdf.PdfDateTime})">
            <summary>
            Sets the <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetName(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String@)">
            <summary>
            Tries to get the PDF Name value associated with the specified key.
            If the value does not exist or cannot be converted to a PDF Name,
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT. When this method returns, contains the PDF Name value.</param>
            <returns>true if value exists; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetName(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Gets the PDF Name value associated with the specified key.
            If the value does not exist or cannot be converted to a PDF Name,
            returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.Set(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfName,GrapeCity.Documents.Pdf.Spec.IPdfName)">
            <summary>
            Sets the PDF Name value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetName(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String,System.String)">
            <summary>
            Sets the PDF Name value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            Note! The method converts a <see cref="T:System.String"/> to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetNameNotEmpty(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Sets the PDF Name value associated with the specified key.
            If the value is null or empty,
            removes the key from the dictionary.
            Note! The method converts a <see cref="T:System.String"/> to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetNameArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String[],System.Boolean)">
            <summary>
            Sets or removes the PDF name array associated with a specified <paramref name="key"/>.
            <para>
            If the specified <paramref name="value"/> is <see langword="null"/>,
            the value is removed from the current dictionary.
            Otherwise the value is set.
            </para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="singleToArray">If <see langword="true"/> and <paramref name="value"/> contains exactly one element,
            the array will be stored as a simple PDF name object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetNameArrayStr(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String[]@,System.Boolean)">
            <summary>
            Tries to get the PDF Name array associated with the specified key,
            the PDF names converted to strings.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT: The array of strings.</param>
            <param name="singleToArray">Indicates whether to convert a single PDF Name value to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetNameArrayStr(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the PDF Name array associated with the specified key.
            Returns null if the array does not exist or cannot be converted to a PDF Name array.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="singleToArray">Indicates whether to convert a single PDF Name value to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetNameArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfName[]@,System.Boolean)">
            <summary>
            Tries to get the PDF Name array associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT: The array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>.</param>
            <param name="singleToArray">Indicates whether to convert a single PDF Name value to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetNameArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> array associated with the specified key.
            Returns null if the array does not exist or cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> array.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="singleToArray">Indicates whether to convert a single <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetString(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String@)">
            <summary>
            Tries to get the String value associated with the specified key.
            If the value does not exist or cannot be converted to a String,
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT. When this method returns, contains the String value.</param>
            <returns>true if value exists; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetString(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Gets the String value associated with the specified key.
            If the value does not exist or cannot be converted to a String,
            returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetString(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String,System.String)">
            <summary>
            Sets the String value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            Note! The method converts a <see cref="T:System.String"/> to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetStringNotEmpty(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Sets the String value associated with the specified key.
            If the value is null or empty removes the key from the dictionary.
            Note! The method converts a <see cref="T:System.String"/> to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetRichTextNotEmpty(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Sets the String value representing the Rich Text associated with the specified key.
            If the value is null or empty removes the key from the dictionary.
            Note! The method converts a <see cref="T:System.String"/> to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            Note! The method encloses the <paramref name="value"/> with PdfConsts.c_RichStringPrefix and
            PdfConsts.c_RichStringSuffix
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetStringArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String[]@,System.Boolean)">
            <summary>
            Tries to get the string array associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT: The array of string.</param>
            <param name="singleToArray">Indicates whether to convert a single string value to an array.</param>
            <returns>true if successful; false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetStringArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the String array associated with the specified key.
            Returns null if the array does not exist or cannot be converted to a String array.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="singleToArray">Indicates whether to convert a single String value to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetStringArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Sets or removes the PDF string array associated with a specified <paramref name="key"/>.
            <para>
            If the specified <paramref name="value"/> is <see langword="null"/>,
            the value is removed from the current dictionary.
            Otherwise the value is set.
            </para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="singleToArray">If <see langword="true"/> and <paramref name="value"/> contains exactly one element,
            the array will be stored as a simple PDF string object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetBool(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean@)">
            <summary>
            Tries to get the Boolean value associated with the specified key.
            If the value does not exist or cannot be converted to a Boolean,
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT. When this method returns, contains the Boolean value
            associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.</param>
            <returns>true if value exists; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetBool(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the Boolean value associated with the specified key.
            If the value does not exist or cannot be converted to a Boolean,
            returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetBool(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Boolean})">
            <summary>
            Gets the nullable Boolean value associated with the specified key.
            If the value does not exist or cannot be converted to a Boolean,
            returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetBool(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Sets the Boolean value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetBoolArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean[]@,System.Boolean)">
            <summary>
            Tries to get the bool array associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT: The array of bool.</param>
            <param name="singleToArray">Indicates whether to convert a single bool value to an array.</param>
            <returns>true if successful; false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetBoolArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the Boolean array associated with the specified key.
            Returns null if the array does not exist or cannot be converted to a Boolean array.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="singleToArray">Indicates whether to convert a single Boolean value to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetDouble(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Double@)">
            <summary>
            Tries to get the Double value associated with the specified key.
            If the value does not exist or cannot be converted to a Double,
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT. When this method returns, contains the Double value.</param>
            <returns>true if value exists; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetDouble(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Double})">
            <summary>
            Gets the nullable Double value associated with the specified key.
            If the value does not exist or cannot be converted to a Double,
            returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetDouble(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Sets the Double value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetFloat(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Single@)">
            <summary>
            Tries to get the Float value associated with the specified key.
            If the value does not exist or cannot be converted to a Float,
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT. When this method returns, contains the Float value.</param>
            <returns>true if value exists; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetFloat(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Single})">
            <summary>
            Gets the nullable Float value associated with the specified key.
            If the value does not exist or cannot be converted to a Float,
            returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetFloat(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Single)">
            <summary>
            Gets the Float value associated with the specified key.
            If the value does not exist or cannot be converted to a Float,
            returns <paramref name="defValue"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetFloat(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Sets the float value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Single[]@,System.Boolean)">
            <summary>
            Tries to get the float array associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT: The array of float.</param>
            <param name="singleToArray">Indicates whether to convert a single float value to an array.</param>
            <returns>true if successful; false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the float array associated with the specified key.
            Returns null if the array does not exist or cannot be converted to a float array.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="singleToArray">Indicates whether to convert a single float value to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetFloatArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Single[])">
            <summary>
            Sets the float array associated with the specified key.
            If the value is null, removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetInt(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Int32@)">
            <summary>
            Tries to get the Integer value associated with the specified key.
            If the value does not exist or cannot be converted to an Integer,
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT. When this method returns, contains the Integer value.</param>
            <returns>true if value exists; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetInt(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Int32})">
            <summary>
            Gets the Integer value associated with the specified key.
            If the value does not exist or cannot be converted to an Integer,
            returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetInt(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Int32)">
            <summary>
            Gets the nullable Integer value associated with the specified key.
            If the value does not exist or cannot be converted to an Integer,
            returns <paramref name="defValue"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetInt(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Sets the Integer value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetIntArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Int32[]@,System.Boolean)">
            <summary>
            Tries to get the Integer array associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT: The array of int.</param>
            <param name="singleToArray">Indicates whether to convert a single Integer value to an array.</param>
            <returns>true if successful; false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetIntArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the Integer array associated with the specified key.
            Returns null if the array does not exist or cannot be converted to an Integer array.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="singleToArray">Indicates whether to convert a single Integer value to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetIntArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Int32[])">
            <summary>
            Sets the int array associated with the specified key.
            If the value is null, removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetPdfStringBytes(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Gets the bytes of the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/> associated with the specified key.
            If the value does not exist or cannot be converted to an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/>,
            returns <see langword="null"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <returns>The value associated with the specified key, or <see langword="null"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetPdfStringBytes(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Byte[])">
            <summary>
            Sets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/> associated with the specified key to the specified value.
            If the value is <see langword="null"/>, removes the key from the dictionary.
            Returns the created <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the string.</param>
            <param name="value">The value to set.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> that was created and set.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetStringOrName(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String@,System.Boolean)">
            <summary>
            Tries to get the string associated with the specified key.
            The string can be specified in the PDF as a PDF string or a PDF name.
            <para>
            Optionally adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.</para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <param name="addWarning">Specifies whether to add a warning if the value could not be converted.</param>
            <returns>True if the key was found and the value could be converted to a Boolean, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetStringOrName(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Gets the string associated with the specified key.
            The string can be specified in the PDF as a PDF string or a PDF name.
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a string.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to a string.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetHighlightingMode(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Annotations.HighlightingMode)">
            <summary>
            Gets the annotation highlighting mode.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetHighlightingMode(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Annotations.HighlightingMode,GrapeCity.Documents.Pdf.Annotations.HighlightingMode)">
            <summary>
            Sets the annotation highlighting mode.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``0@)">
            <summary>
            Tries to get the enum value associated with the specified key.
            If the value does not exist or cannot be converted to an enum,
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT. When this method returns, contains the enum value.</param>
            <returns>true if value exists; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{``0})">
            <summary>
            Gets the nullable enum value associated with the specified key.
            If the value does not exist or cannot be converted to an enum,
            returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``0)">
            <summary>
            Gets the enum value associated with the specified key.
            If the value does not exist or cannot be converted to an enum,
            returns <paramref name="defValue"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Util.EnumMap{``0},``0)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Util.EnumMap{``0},System.Nullable{``0})">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{``0},System.Nullable{``0})">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``0,GrapeCity.Documents.Pdf.Util.EnumMap{``0},``0)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{``0},GrapeCity.Documents.Pdf.Util.EnumMap{``0},System.Nullable{``0})">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``0,GrapeCity.Documents.Pdf.Util.EnumMap{``0})">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetPdfEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.PdfEnum{``0}@)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value associated with the specified key.
            If the value does not exist or cannot be converted to an enum,
            returns false.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">OUT. When this method returns, contains the enum value.</param>
            <returns>true if value exists; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetPdfEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{``0})">
            <summary>
            Gets the nullable <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value associated with the specified key.
            If the value does not exist returns <paramref name="defValue"/> (which can be null).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetPdfEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,``0)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value associated with the specified key.
            If the value does not exist returns <paramref name="defValue"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key, or <paramref name="defValue"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetPdfEnum``1(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{GrapeCity.Documents.Pdf.PdfEnum{``0}},System.Nullable{``0})">
            <summary>
            Sets the nullable <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            Note! The method converts a <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetRefArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfRef[]@,System.Boolean)">
            <summary>
            Tries to gets the array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> objects associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the array.</param>
            <param name="value">OUT: The array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.</param>
            <param name="singleToArray">Indicates whether to convert a single <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> value to an array.</param>
            <returns>true if successful, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetRefArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> objects associated with the specified key,
            Returns null if the array does not exist or cannot be converted to an array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the array.</param>
            <param name="singleToArray">Indicates whether to convert a single <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> value to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetDictArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfDict[]@,System.Boolean)">
            <summary>
            Tries to gets the array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> objects associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the array.</param>
            <param name="value">OUT: The array of <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.</param>
            <param name="singleToArray">Indicates whether to convert a single <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> value to an array.</param>
            <returns>true if successful, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetDictArray(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> array associated with the specified key.
            Returns null if the array does not exist or cannot be converted to an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> array.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="singleToArray">Indicates whether to convert a single <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> to an array.</param>
            <returns>The array associated with the specified key, or null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetPoints(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.PointF[]@)">
            <summary>
            Tries to get the array of <see cref="T:System.Drawing.PointF"/> associated with the specified key
            (in a PDF an array of <see cref="T:System.Drawing.PointF"/> should be represented as an array of floats
            with even count of elements).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to array of <see cref="T:System.Drawing.PointF"/>.</para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to an array of <see cref="T:System.Drawing.PointF"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetPoints(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.PointF[])">
            <summary>
            Gets the array of <see cref="T:System.Drawing.PointF"/> associated with the specified key
            (in a PDF an array of <see cref="T:System.Drawing.PointF"/> should be represented as an array of floats
            with even count of elements).
            <para>Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to an array of <see cref="T:System.Drawing.PointF"/>.</para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetPoints(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Collections.Generic.IReadOnlyList{System.Drawing.PointF})">
            <summary>
            Sets an array of <see cref="T:System.Drawing.PointF"/> associated with the specified key.
            If the value is null removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetQuadrilaterals(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Common.Quadrilateral[]@)">
            <summary>
            Tries to get the array of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to an array of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetQuadrilateral(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Gets the array of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetQuadrilaterals(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Collections.Generic.IReadOnlyList{GrapeCity.Documents.Common.Quadrilateral})">
            <summary>
            Sets an array of <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> associated with the specified key.
            If the value is null removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetPaths(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.PointF[][]@)">
            <summary>
            Tries to get the array of array of <see cref="T:System.Drawing.PointF"/> associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to an array of array of <see cref="T:System.Drawing.PointF"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetPaths(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Get the array of array of <see cref="T:System.Drawing.PointF"/> associated with the specified key.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetPaths(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Collections.Generic.IReadOnlyList{System.Collections.Generic.IReadOnlyList{System.Drawing.PointF}})">
            <summary>
            Sets IReadOnlyList{IReadOnlyList{PointF}} value associated with the specified key.
            If the value is null removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetRect(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.RectangleF@)">
            <summary>
            Tries to get the <see cref="T:System.Drawing.RectangleF"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.RectangleF"/> should be represented as an array of 4 floats).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:System.Drawing.RectangleF"/>.</para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:System.Drawing.RectangleF"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetRect(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.RectangleF)">
            <summary>
            Gets the <see cref="T:System.Drawing.RectangleF"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.RectangleF"/> should be represented as an array of 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Drawing.RectangleF"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Drawing.RectangleF"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetRect(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Drawing.RectangleF})">
            <summary>
            Gets the <see cref="T:System.Drawing.RectangleF"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.RectangleF"/> should be represented as an array of 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Drawing.RectangleF"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Drawing.RectangleF"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetRect(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Drawing.RectangleF},System.Nullable{System.Drawing.RectangleF})">
            <summary>
            Sets the <see cref="T:System.Drawing.RectangleF"/> value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetOffsets(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Common.Offsets@)">
            <summary>
            Tries to get the <see cref="T:GrapeCity.Documents.Common.Offsets"/> associated with the specified key
            (in a PDF an <see cref="T:GrapeCity.Documents.Common.Offsets"/> should be represented as an array of 4 floats).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:GrapeCity.Documents.Common.Offsets"/>.</para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to an <see cref="T:GrapeCity.Documents.Common.Offsets"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetOffsets(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Common.Offsets)">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Common.Offsets"/> associated with the specified key
            (in a PDF a <see cref="T:GrapeCity.Documents.Common.Offsets"/> should be represented as an array of 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to an <see cref="T:GrapeCity.Documents.Common.Offsets"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to an <see cref="T:GrapeCity.Documents.Common.Offsets"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetOffsets(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{GrapeCity.Documents.Common.Offsets})">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Common.Offsets"/> associated with the specified key
            (in a PDF an <see cref="T:GrapeCity.Documents.Common.Offsets"/> should be represented as an array of 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to an <see cref="T:GrapeCity.Documents.Common.Offsets"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to an <see cref="T:GrapeCity.Documents.Common.Offsets"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetOffsets(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{GrapeCity.Documents.Common.Offsets},System.Nullable{GrapeCity.Documents.Common.Offsets})">
            <summary>
            Sets the <see cref="T:GrapeCity.Documents.Common.Offsets"/> value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetMatrix(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Numerics.Matrix3x2@)">
            <summary>
            Tries to get the <see cref="T:System.Numerics.Matrix3x2"/> associated with the specified key
            (in a PDF a <see cref="T:System.Numerics.Matrix3x2"/> should be represented as an array of 6 floats).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:System.Numerics.Matrix3x2"/>.</para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:System.Numerics.Matrix3x2"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetMatrix(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Numerics.Matrix3x2)">
            <summary>
            Gets the <see cref="T:System.Numerics.Matrix3x2"/> associated with the specified key
            (in a PDF a <see cref="T:System.Numerics.Matrix3x2"/> should be represented as an array of 6 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Numerics.Matrix3x2"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Numerics.Matrix3x2"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetMatrix(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Numerics.Matrix3x2})">
            <summary>
            Gets the <see cref="T:System.Numerics.Matrix3x2"/> associated with the specified key
            (in a PDF a <see cref="T:System.Numerics.Matrix3x2"/> should be represented as an array of 6 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Numerics.Matrix3x2"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Numerics.Matrix3x2"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetMatrix(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Numerics.Matrix3x2},System.Nullable{System.Numerics.Matrix3x2})">
            <summary>
            Sets the <see cref="T:System.Numerics.Matrix3x2"/> value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetDeviceRGBColor(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.Color@)">
            <summary>
            Tries to get the RGB <see cref="T:System.Drawing.Color"/> associated with the specified key
            (in a PDF an RGB <see cref="T:System.Drawing.Color"/> should be represented as an array of 3 floats).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:System.Drawing.Color"/>.</para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:System.Drawing.Color"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetDeviceRGBColor(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.Color)">
            <summary>
            Gets the RGB <see cref="T:System.Drawing.Color"/> associated with the specified key
            (in a PDF an RGB <see cref="T:System.Drawing.Color"/> should be represented as an array of 3 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Drawing.Color"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetDeviceRGBColor(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color})">
            <summary>
            Sets the RGB <see cref="T:System.Drawing.Color"/> value associated with the specified key
            (in a PDF an RGB <see cref="T:System.Drawing.Color"/> should be represented as an array of 3 floats).
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to set.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.TryGetColor(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.Color@)">
            <summary>
            Tries to get the <see cref="T:System.Drawing.Color"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.Color"/> should be represented as an array of 1, 3 or 4 floats).
            <para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value exists but cannot be converted to <see cref="T:System.Drawing.Color"/>.</para>
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="value">OUT: the value associated with the specified key.</param>
            <returns>True if the key was found and the value could be converted to a <see cref="T:System.Drawing.Color"/>, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetColor(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.Color)">
            <summary>
            Gets the <see cref="T:System.Drawing.Color"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.Color"/> should be represented as an array of 1, 3 or 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Drawing.Color"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.GetColor(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Drawing.Color})">
            <summary>
            Gets the <see cref="T:System.Drawing.Color"/> associated with the specified key
            (in a PDF a <see cref="T:System.Drawing.Color"/> should be represented as an array of 1, 3 or 4 floats).
            <para>Gets <paramref name="defValue"/> if the value does not exist or cannot be converted to a <see cref="T:System.Drawing.Color"/>.</para>
            Adds a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if the value cannot be converted to a <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key of the value to get.</param>
            <param name="defValue">The default value.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfDictExt.SetColor(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color})">
            <summary>
            Sets the Color value associated with the specified key.
            If the value is null or is equal to <paramref name= "defValue"/>,
            removes the key from the dictionary.
            </summary>
            <param name="dict">The current dictionary.</param>
            <param name="key">The key identifying the value.</param>
            <param name="value">The value to set.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfIdent">
            <summary>
            Represents a custom identifier in a PDF stream.
            For example to identify an operator in the PDF content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfIdent.Value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfIdent.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfIdent.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfIdent.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfIdent.Equals(GrapeCity.Documents.Pdf.Spec.PdfIdent)">
            <summary>
            Indicates whether the current <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfIdent"/> is equal to
            another <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfIdent"/>.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfName">
            <summary>
            Represents an interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNameObject"/>,
            allows working with both types of objects in the same way.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfName.Name">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfName">
            <summary>
            Represents a PDF Name object.
            Technically a PDF name is an immutable array of bytes.
            This class overrides and implements:
            <list type="bullet">
            <item><see cref="M:GrapeCity.Documents.Pdf.Spec.PdfName.Equals(System.Object)"/></item>
            <item><see cref="M:GrapeCity.Documents.Pdf.Spec.PdfName.GetHashCode"/></item>
            <item><see cref="T:System.IEquatable`1"/></item>
            <item>Equality operator.</item>
            <item>Inequality operator.</item>
            </list>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.s_EmptyPdfNameArray">
            <summary>
            Gets the empty array of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.mi_Content">
            <summary>
            The content of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> class.
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> class.
            </summary>
            <param name="value">The byte array.</param>
            <param name="offset">The offset in the <paramref name="value"/>.</param>
            <param name="length">The length of the name.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.CN(System.String)">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName.StdPdfName"/> and adds it to the cache, throws exception
            if name already exists.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.IsNullOrEmpty(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns true if <paramref name="value"/> is null or empty (zero length).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.GetOrCreate(System.Byte[],System.Int32)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> or returns existing predefined Standard Name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.GetOrCreate(System.Byte[])">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> or returns existing predefined Standard Name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.GetOrCreate(System.String)">
            <summary>
            Creates a new <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> or returns existing predefined Standard Name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.IsValidChar(System.Byte)">
            <summary>
            Checks whether the specified byte is valid and can be written to the PDF stream without '#' prefix.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.EncodeChar(System.Byte,System.Byte[],System.Int32@)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.EncodeChar(System.Byte,System.Text.StringBuilder)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.EncodeAsXmlValue(System.String)">
            <summary>
            For internal use.
            Encodes a string as a PDF name uses the format of Adobe Reader when exporting form data to XML, XFDF.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.EncodeAsPdfName(System.String)">
            <summary>
            For internal use.
            Encodes a string as a PDF name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.op_Equality(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            The equality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.op_Inequality(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            The inequality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.Equals(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> equals to <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.Contains(System.Byte)">
            <summary>
            Determines whether a byte is in the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
            <param name="item">The byte to locate in the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.</param>
            <returns>true if byte is found in the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.CopyTo(System.Byte[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> to a compatible one-dimensional array,
            starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the bytes copied from <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfName.Item(System.Int32)">
            <summary>
            Gets or sets the byte at the specified index.
            </summary>
            <param name="index">The zero-based index of the byte to get or set.</param>
            <returns>The byte at the specified index.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfName.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfName.StdPdfName">
            <summary>
            Represents the standard PDF name from PDF specification, all these names
            are cached in the internal dictionary, so they can be compared via references.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.StdPdfName.Hash">
            <summary>
            The hash code calculated in constructor.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.StdPdfName.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName.StdPdfName"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.StdPdfName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.StdPdfName.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfName.StdPdfName.Equals(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfName.Std">
            <summary>
            Contains the predefined <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.EmptyName">
            <summary>
            The empty <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> with zero length.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Sy">
            <summary>
            "Sy"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Caret">
            <summary>
            "Caret"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Crypt">
            <summary>
            "Crypt"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Automatic">
            <summary>
            "Automatic"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GS0">
            <summary>
            "GS0"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GS">
            <summary>
            "GS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ImageI">
            <summary>
            "ImageI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ImageC">
            <summary>
            "ImageC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ImageB">
            <summary>
            "ImageB"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PDF">
            <summary>
            "PDF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Luminosity">
            <summary>
            "Luminosity"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NChannel">
            <summary>
            "NChannel"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FreeTextCallout">
            <summary>
            "FreeTextCallout"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Insert">
            <summary>
            "Insert"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Paragraph">
            <summary>
            "Paragraph"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Help">
            <summary>
            "Help"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NewParagraph">
            <summary>
            "NewParagraph"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Key">
            <summary>
            "Key"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Comment">
            <summary>
            "Comment"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Note">
            <summary>
            "Note"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Ear">
            <summary>
            "Ear"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Mic">
            <summary>
            "Mic"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Speaker">
            <summary>
            "Speaker"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Graph">
            <summary>
            "Graph"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Tag">
            <summary>
            "Tag"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PushPin">
            <summary>
            "PushPin"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Paperclip">
            <summary>
            "Paperclip"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Slash">
            <summary>
            "Slash"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RClosedArrow">
            <summary>
            "RClosedArrow"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ROpenArrow">
            <summary>
            "ROpenArrow"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Butt">
            <summary>
            "Butt"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ClosedArrow">
            <summary>
            "ClosedArrow"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OpenArrow">
            <summary>
            "OpenArrow"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Diamond">
            <summary>
            "Diamond"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std._1">
            <summary>
            "1"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PI">
            <summary>
            "PI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PV">
            <summary>
            "PV"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PC">
            <summary>
            "PC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PO">
            <summary>
            "PO"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Simplex">
            <summary>
            "Simplex"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DuplexFlipShortEdge">
            <summary>
            "DuplexFlipShortEdge"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DuplexFlipLongEdge">
            <summary>
            "DuplexFlipLongEdge"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GTS_PDFA1">
            <summary>
            "GTS_PDFA1"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CMap">
            <summary>
            "CMap"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AdobeIdentityUCS">
            <summary>
            "Adobe-Identity-UCS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IdentityH">
            <summary>
            "Identity-H"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IdentityV">
            <summary>
            "Identity-V"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Signed">
            <summary>
            "Signed"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ALaw">
            <summary>
            "ALaw"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.muLaw">
            <summary>
            "muLaw"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MD5">
            <summary>
            "MD5"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SHA1">
            <summary>
            "SHA1"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Layout">
            <summary>
            "Layout"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std._1_2">
            <summary>
            "1.2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std._1_5">
            <summary>
            "1.5"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FieldMDP">
            <summary>
            "FieldMDP"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SigRef">
            <summary>
            "SigRef"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Sig">
            <summary>
            "Sig"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Prop_AuthTime">
            <summary>
            "Prop_AuthTime"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Prop_AuthType">
            <summary>
            "Prop_AuthType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.XML">
            <summary>
            "XML"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.EmbeddedFiles">
            <summary>
            "EmbeddedFiles"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OutputIntent">
            <summary>
            "OutputIntent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.UserUnit">
            <summary>
            "UserUnit"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Cert">
            <summary>
            "Cert"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Certs">
            <summary>
            "Certs"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OCSP">
            <summary>
            "OCSP"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OCSPs">
            <summary>
            "OCSPs"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CRL">
            <summary>
            "CRL"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CRLs">
            <summary>
            "CRLs"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.VRI">
            <summary>
            "VRI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PrintPageRange">
            <summary>
            "PrintPageRange"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DSS">
            <summary>
            "DSS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Tx">
            <summary>
            "Tx"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.All">
            <summary>
            "All"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SigFieldLock">
            <summary>
            "SigFieldLock"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Include">
            <summary>
            "Include"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Exclude">
            <summary>
            "Exclude"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TM">
            <summary>
            "TM"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Win">
            <summary>
            "Win"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.W2">
            <summary>
            "W2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DW2">
            <summary>
            "DW2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OpenType">
            <summary>
            "OpenType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CIDFontType0">
            <summary>
            "CIDFontType0"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CIDFontType2">
            <summary>
            "CIDFontType2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CIDFontType0C">
            <summary>
            "CIDFontType0C"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Type1C">
            <summary>
            "Type1C"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Length1">
            <summary>
            "Length1"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Length2">
            <summary>
            "Length2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Length3">
            <summary>
            "Length3"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MacRomanEncoding">
            <summary>
            "MacRomanEncoding"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.WinAnsiEncoding">
            <summary>
            "WinAnsiEncoding"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StandardEncoding">
            <summary>
            "StandardEncoding"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IDTree">
            <summary>
            "IDTree"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ClassMap">
            <summary>
            "ClassMap"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ActualText">
            <summary>
            "ActualText"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Alt">
            <summary>
            "Alt"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StructElem">
            <summary>
            "StructElem"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Suspects">
            <summary>
            "Suspects"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.UserProperties">
            <summary>
            "UserProperties"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Obj">
            <summary>
            "Obj"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OBJR">
            <summary>
            "OBJR"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StmOwn">
            <summary>
            "StmOwn"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Stm">
            <summary>
            "Stm"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MCR">
            <summary>
            "MCR"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Pg">
            <summary>
            "Pg"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FDF">
            <summary>
            "FDF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IX">
            <summary>
            "IX"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FB">
            <summary>
            "FB"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SW">
            <summary>
            "SW"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Filespec">
            <summary>
            "Filespec"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RF">
            <summary>
            "RF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AFRelationship">
            <summary>
            "AFRelationship"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Unix">
            <summary>
            "Unix"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Mac">
            <summary>
            "Mac"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DOS">
            <summary>
            "DOS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Desc">
            <summary>
            "Desc"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Redact">
            <summary>
            "Redact"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PolyLine">
            <summary>
            "PolyLine"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Polygon">
            <summary>
            "Polygon"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StrikeOut">
            <summary>
            "StrikeOut"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Squiggly">
            <summary>
            "Squiggly"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Underline">
            <summary>
            "Underline"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Highlight">
            <summary>
            "Highlight"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Ink">
            <summary>
            "Ink"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Watermark">
            <summary>
            "Watermark"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Stamp">
            <summary>
            "Stamp"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Square">
            <summary>
            "Square"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Link">
            <summary>
            "Link"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Line">
            <summary>
            "Line"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FreeText">
            <summary>
            "FreeText"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FileAttachment">
            <summary>
            "FileAttachment"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Circle">
            <summary>
            "Circle"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Widget">
            <summary>
            "Widget"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Annot">
            <summary>
            "Annot"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Di">
            <summary>
            "Di"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Dm">
            <summary>
            "Dm"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Artifact">
            <summary>
            "Artifact"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MCID">
            <summary>
            "MCID"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.JBIG2Globals">
            <summary>
            "JBIG2Globals"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BlackIs1">
            <summary>
            "BlackIs1"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FitBV">
            <summary>
            "FitBV"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FitBH">
            <summary>
            "FitBH"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FitB">
            <summary>
            "FitB"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FitR">
            <summary>
            "FitR"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FitV">
            <summary>
            "FitV"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FitH">
            <summary>
            "FitH"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Fit">
            <summary>
            "Fit"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.XYZ">
            <summary>
            "XYZ"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Hide">
            <summary>
            "Hide"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Named">
            <summary>
            "Named"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ImportData">
            <summary>
            "ImportData"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ResetForm">
            <summary>
            "ResetForm"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SubmitForm">
            <summary>
            "SubmitForm"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.JavaScript">
            <summary>
            "JavaScript"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Launch">
            <summary>
            "Launch"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GoTo">
            <summary>
            "GoTo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GoToR">
            <summary>
            "GoToR"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.C0">
            <summary>
            "C0"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.C1">
            <summary>
            "C1"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CMYK">
            <summary>
            "CMYK"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RGB">
            <summary>
            "RGB"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IM">
            <summary>
            "IM"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AF">
            <summary>
            "AF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ListMode">
            <summary>
            "ListMode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Max">
            <summary>
            "Max"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Min">
            <summary>
            "Min"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ICCBased">
            <summary>
            "ICCBased"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Lab">
            <summary>
            "Lab"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CalRGB">
            <summary>
            "CalRGB"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CalGray">
            <summary>
            "CalGray"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DotGain">
            <summary>
            "DotGain"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PrintingOrder">
            <summary>
            "PrintingOrder"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Solidities">
            <summary>
            "Solidities"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MixingHints">
            <summary>
            "MixingHints"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DeviceN">
            <summary>
            "DeviceN"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Separation">
            <summary>
            "Separation"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Indexed">
            <summary>
            "Indexed"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DeviceCMYK">
            <summary>
            "DeviceCMYK"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DeviceRGB">
            <summary>
            "DeviceRGB"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DeviceGray">
            <summary>
            "DeviceGray"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Transparency">
            <summary>
            "Transparency"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.None">
            <summary>
            "None"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Default">
            <summary>
            "Default"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Type1">
            <summary>
            "Type1"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TrueType">
            <summary>
            "TrueType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Type0">
            <summary>
            "Type0"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Type3">
            <summary>
            "Type3"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MMType1">
            <summary>
            "MMType1"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Text">
            <summary>
            "Text"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Catalog">
            <summary>
            "Catalog"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.EmbeddedFile">
            <summary>
            "EmbeddedFile"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Identity">
            <summary>
            "Identity"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DocOpen">
            <summary>
            "DocOpen"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.V2">
            <summary>
            "V2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AESV2">
            <summary>
            "AESV2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AESV3">
            <summary>
            "AESV3"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Standard">
            <summary>
            "Standard"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Raw">
            <summary>
            "Raw"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FlateDecode">
            <summary>
            "FlateDecode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Fl">
            <summary>
            "Fl"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RunLengthDecode">
            <summary>
            "RunLengthDecode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RL">
            <summary>
            "RL"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ASCII85Decode">
            <summary>
            "ASCII85Decode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.A85">
            <summary>
            "A85"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ASCIIHexDecode">
            <summary>
            "ASCIIHexDecode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AHx">
            <summary>
            "AHx"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LZWDecode">
            <summary>
            "LZWDecode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LZW">
            <summary>
            "LZW"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.JBIG2Decode">
            <summary>
            "JBIG2Decode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.JPXDecode">
            <summary>
            "JPXDecode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CCITTFaxDecode">
            <summary>
            "CCITTFaxDecode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DCT">
            <summary>
            "DCT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DCTDecode">
            <summary>
            "DCTDecode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CCF">
            <summary>
            "CCF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.XRef">
            <summary>
            "XRef"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Type">
            <summary>
            "Type"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Subtype">
            <summary>
            "Subtype"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Width">
            <summary>
            "Width"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Height">
            <summary>
            "Height"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BPC">
            <summary>
            "BPC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BitsPerComponent">
            <summary>
            "BitsPerComponent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Background">
            <summary>
            "Background"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ColorSpace">
            <summary>
            "ColorSpace"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Filter">
            <summary>
            "Filter"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Length">
            <summary>
            "Length"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Size">
            <summary>
            "Size"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Info">
            <summary>
            "Info"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Root">
            <summary>
            "Root"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ID">
            <summary>
            "ID"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Pages">
            <summary>
            "Pages"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Count">
            <summary>
            "Count"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Kids">
            <summary>
            "Kids"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Parent">
            <summary>
            "Parent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Resources">
            <summary>
            "Resources"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MediaBox">
            <summary>
            "MediaBox"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Contents">
            <summary>
            "Contents"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Rotate">
            <summary>
            "Rotate"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CreationDate">
            <summary>
            "CreationDate"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ModDate">
            <summary>
            "ModDate"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Creator">
            <summary>
            "Creator"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Producer">
            <summary>
            "Producer"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ProcSet">
            <summary>
            "ProcSet"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.XObject">
            <summary>
            "XObject"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CreatorDate">
            <summary>
            "CreatorDate"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PageMode">
            <summary>
            "PageMode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Names">
            <summary>
            "Names"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PageLayout">
            <summary>
            "PageLayout"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PageLabels">
            <summary>
            "PageLabels"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Nums">
            <summary>
            "Nums"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.P">
            <summary>
            "P"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.St">
            <summary>
            "St"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.S">
            <summary>
            "S"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Metadata">
            <summary>
            "Metadata"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ExtGState">
            <summary>
            "ExtGState"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Font">
            <summary>
            "Font"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CropBox">
            <summary>
            "CropBox"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AIS">
            <summary>
            "AIS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BM">
            <summary>
            "BM"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ca">
            <summary>
            "ca"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CA">
            <summary>
            "CA"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SMask">
            <summary>
            "SMask"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BaseFont">
            <summary>
            "BaseFont"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Encoding">
            <summary>
            "Encoding"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Differences">
            <summary>
            "Differences"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Matrix">
            <summary>
            "Matrix"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BBox">
            <summary>
            "BBox"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FormType">
            <summary>
            "FormType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Interpolate">
            <summary>
            "Interpolate"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ViewerPreferences">
            <summary>
            "ViewerPreferences"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Dur">
            <summary>
            "Dur"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Trans">
            <summary>
            "Trans"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.D">
            <summary>
            "D"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RI">
            <summary>
            "RI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Annots">
            <summary>
            "Annots"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Author">
            <summary>
            "Author"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FirstChar">
            <summary>
            "FirstChar"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Name">
            <summary>
            "Name"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LastChar">
            <summary>
            "LastChar"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Widths">
            <summary>
            "Widths"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FontDescriptor">
            <summary>
            "FontDescriptor"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MissingWidth">
            <summary>
            "MissingWidth"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MaxWidth">
            <summary>
            "MaxWidth"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ItalicAngle">
            <summary>
            "ItalicAngle"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AvgWidth">
            <summary>
            "AvgWidth"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Flags">
            <summary>
            "Flags"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FontBBox">
            <summary>
            "FontBBox"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CapHeight">
            <summary>
            "CapHeight"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FontName">
            <summary>
            "FontName"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Descent">
            <summary>
            "Descent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Ascent">
            <summary>
            "Ascent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StemV">
            <summary>
            "StemV"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StemH">
            <summary>
            "StemH"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.A">
            <summary>
            "A"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.URI">
            <summary>
            "URI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.C">
            <summary>
            "C"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Rect">
            <summary>
            "Rect"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.F">
            <summary>
            "F"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.H">
            <summary>
            "H"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Border">
            <summary>
            "Border"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AP">
            <summary>
            "AP"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.N">
            <summary>
            "N"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NM">
            <summary>
            "NM"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Title">
            <summary>
            "Title"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Subject">
            <summary>
            "Subject"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BaseEncoding">
            <summary>
            "BaseEncoding"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Group">
            <summary>
            "Group"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CS">
            <summary>
            "CS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Outlines">
            <summary>
            "Outlines"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FAAABJ">
            <summary>
            "FAAABJ"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FAAAAH">
            <summary>
            "FAAAAH"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FAAABE">
            <summary>
            "FAAABE"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Pattern">
            <summary>
            "Pattern"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PatternType">
            <summary>
            "PatternType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Shading">
            <summary>
            "Shading"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ShadingType">
            <summary>
            "ShadingType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Extend">
            <summary>
            "Extend"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Coords">
            <summary>
            "Coords"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Function">
            <summary>
            "Function"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FunctionType">
            <summary>
            "FunctionType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Domain">
            <summary>
            "Domain"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Range">
            <summary>
            "Range"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BitsPerSample">
            <summary>
            "BitsPerSample"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DescendantFonts">
            <summary>
            "DescendantFonts"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ToUnicode">
            <summary>
            "ToUnicode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CIDToGIDMap">
            <summary>
            "CIDToGIDMap"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DW">
            <summary>
            "DW"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.W">
            <summary>
            "W"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CIDSystemInfo">
            <summary>
            "CIDSystemInfo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Ordering">
            <summary>
            "Ordering"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Registry">
            <summary>
            "Registry"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Supplement">
            <summary>
            "Supplement"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Encrypt">
            <summary>
            "Encrypt"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.V">
            <summary>
            "V"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.R">
            <summary>
            "R"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.O">
            <summary>
            "O"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.U">
            <summary>
            "U"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Keywords">
            <summary>
            "Keywords"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DP">
            <summary>
            "DP"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DecodeParms">
            <summary>
            "DecodeParms"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.K">
            <summary>
            "K"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Columns">
            <summary>
            "Columns"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Decode">
            <summary>
            "Decode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Prev">
            <summary>
            "Prev"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.I">
            <summary>
            "I"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Properties">
            <summary>
            "Properties"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OPM">
            <summary>
            "OPM"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OP">
            <summary>
            "OP"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.op">
            <summary>
            "op"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SA">
            <summary>
            "SA"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.G">
            <summary>
            "G"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BC">
            <summary>
            "BC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FontStretch">
            <summary>
            "FontStretch"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FontWeight">
            <summary>
            "FontWeight"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FontFamily">
            <summary>
            "FontFamily"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.XHeight">
            <summary>
            "XHeight"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CIDSet">
            <summary>
            "CIDSet"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Intent">
            <summary>
            "Intent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BlackPoint">
            <summary>
            "BlackPoint"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.WhitePoint">
            <summary>
            "WhitePoint"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StructParents">
            <summary>
            "StructParents"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.M">
            <summary>
            "M"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Popup">
            <summary>
            "Popup"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.QuadPoints">
            <summary>
            "QuadPoints"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Subj">
            <summary>
            "Subj"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.T">
            <summary>
            "T"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MWFOForm">
            <summary>
            "MWFOForm"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Form">
            <summary>
            "Form"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Open">
            <summary>
            "Open"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Rows">
            <summary>
            "Rows"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Linearized">
            <summary>
            "Linearized"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.L">
            <summary>
            "L"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.E">
            <summary>
            "E"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CF">
            <summary>
            "CF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StdCF">
            <summary>
            "StdCF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AuthEvent">
            <summary>
            "AuthEvent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CFM">
            <summary>
            "CFM"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.EncryptMetadata">
            <summary>
            "EncryptMetadata"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StmF">
            <summary>
            "StmF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StrF">
            <summary>
            "StrF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Direction">
            <summary>
            "Direction"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Trapped">
            <summary>
            "Trapped"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ArtBox">
            <summary>
            "ArtBox"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BleedBox">
            <summary>
            "BleedBox"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TrimBox">
            <summary>
            "TrimBox"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CharSet">
            <summary>
            "CharSet"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ImageMask">
            <summary>
            "ImageMask"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AcroForm">
            <summary>
            "AcroForm"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.HT">
            <summary>
            "HT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FontFile">
            <summary>
            "FontFile"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FontFile2">
            <summary>
            "FontFile2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FontFile3">
            <summary>
            "FontFile3"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MK">
            <summary>
            "MK"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AC">
            <summary>
            "AC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BG">
            <summary>
            "BG"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BG2">
            <summary>
            "BG2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BS">
            <summary>
            "BS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AA">
            <summary>
            "AA"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Ff">
            <summary>
            "Ff"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FT">
            <summary>
            "FT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DA">
            <summary>
            "DA"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.HeBo">
            <summary>
            "HeBo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StructTreeRoot">
            <summary>
            "StructTreeRoot"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MarkInfo">
            <summary>
            "MarkInfo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Marked">
            <summary>
            "Marked"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OCProperties">
            <summary>
            "OCProperties"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Order">
            <summary>
            "Order"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RBGroups">
            <summary>
            "RBGroups"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ON">
            <summary>
            "ON"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AS">
            <summary>
            "AS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Category">
            <summary>
            "Category"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Event">
            <summary>
            "Event"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OCG">
            <summary>
            "OCG"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OCMD">
            <summary>
            "OCMD"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Configs">
            <summary>
            "Configs"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OCGs">
            <summary>
            "OCGs"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Tabs">
            <summary>
            "Tabs"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Usage">
            <summary>
            "Usage"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PageElement">
            <summary>
            "PageElement"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.View">
            <summary>
            "View"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ViewState">
            <summary>
            "ViewState"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Fields">
            <summary>
            "Fields"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DR">
            <summary>
            "DR"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Algerian">
            <summary>
            "Algerian"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Arial">
            <summary>
            "Arial"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Calibri">
            <summary>
            "Calibri"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Cour">
            <summary>
            "Cour"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Helv">
            <summary>
            "Helv"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.YuGothicUI">
            <summary>
            "YuGothicUI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ZaDb">
            <summary>
            "ZaDb"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PDFDocEncoding">
            <summary>
            "PDFDocEncoding"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CO">
            <summary>
            "CO"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Q">
            <summary>
            "Q"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TU">
            <summary>
            "TU"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MaxLen">
            <summary>
            "MaxLen"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.JS">
            <summary>
            "JS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DV">
            <summary>
            "DV"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Opt">
            <summary>
            "Opt"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Ja">
            <summary>
            "Ja"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Off">
            <summary>
            "Off"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Leading">
            <summary>
            "Leading"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LastModified">
            <summary>
            "LastModified"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PieceInfo">
            <summary>
            "PieceInfo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ADBE_CompoundType">
            <summary>
            "ADBE_CompoundType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DocSettings">
            <summary>
            "DocSettings"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Private">
            <summary>
            "Private"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.First">
            <summary>
            "First"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Last">
            <summary>
            "Last"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Next">
            <summary>
            "Next"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SE">
            <summary>
            "SE"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Predictor">
            <summary>
            "Predictor"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Colors">
            <summary>
            "Colors"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PaintType">
            <summary>
            "PaintType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TilingType">
            <summary>
            "TilingType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.XStep">
            <summary>
            "XStep"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.YStep">
            <summary>
            "YStep"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Index">
            <summary>
            "Index"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GSConverterData">
            <summary>
            "GSConverterData"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GRAPHISOFT">
            <summary>
            "GRAPHISOFT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ACDocSource">
            <summary>
            "ACDocSource"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ProjectID">
            <summary>
            "ProjectID"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ProjectName">
            <summary>
            "ProjectName"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Version">
            <summary>
            "Version"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BSISequences">
            <summary>
            "BSISequences"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BSISpaces">
            <summary>
            "BSISpaces"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ACPageSource">
            <summary>
            "ACPageSource"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BFloor">
            <summary>
            "BFloor"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FloorNumber">
            <summary>
            "FloorNumber"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ModelType">
            <summary>
            "ModelType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NoMUI">
            <summary>
            "NoMUI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ODBID">
            <summary>
            "ODBID"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Offset">
            <summary>
            "Offset"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Rotation">
            <summary>
            "Rotation"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Scale">
            <summary>
            "Scale"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SourceName">
            <summary>
            "SourceName"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TargetName">
            <summary>
            "TargetName"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.VP">
            <summary>
            "VP"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FillOpacity">
            <summary>
            "FillOpacity"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Vertices">
            <summary>
            "Vertices"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DS">
            <summary>
            "DS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AlignOnSegment">
            <summary>
            "AlignOnSegment"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MeasurementTypes">
            <summary>
            "MeasurementTypes"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SlopeType">
            <summary>
            "SlopeType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PitchRun">
            <summary>
            "PitchRun"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IT">
            <summary>
            "IT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Depth">
            <summary>
            "Depth"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IC">
            <summary>
            "IC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RC">
            <summary>
            "RC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Label">
            <summary>
            "Label"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Measure">
            <summary>
            "Measure"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DepthUnit">
            <summary>
            "DepthUnit"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FD">
            <summary>
            "FD"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SS">
            <summary>
            "SS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OC">
            <summary>
            "OC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BBGS">
            <summary>
            "BBGS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RiseDrop">
            <summary>
            "RiseDrop"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Segments">
            <summary>
            "Segments"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LES">
            <summary>
            "LES"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ArialItalicMT">
            <summary>
            "ArialItalicMT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ArialMT">
            <summary>
            "ArialMT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RD">
            <summary>
            "RD"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Alpha">
            <summary>
            "Alpha"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Image">
            <summary>
            "Image"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RT">
            <summary>
            "RT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IRT">
            <summary>
            "IRT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TrebuchetMSBold">
            <summary>
            "TrebuchetMSBold"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GroupNesting">
            <summary>
            "GroupNesting"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BBGS_TEXT">
            <summary>
            "BBGS_TEXT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ArialBoldMT">
            <summary>
            "ArialBoldMT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.HelvBld">
            <summary>
            "HelvBld"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.XRefStm">
            <summary>
            "XRefStm"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LetterspaceFlags">
            <summary>
            "LetterspaceFlags"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MarkedPDF">
            <summary>
            "MarkedPDF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Lang">
            <summary>
            "Lang"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Company">
            <summary>
            "Company"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SourceModified">
            <summary>
            "SourceModified"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SM">
            <summary>
            "SM"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OutputIntents">
            <summary>
            "OutputIntents"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OutputConditionIdentifier">
            <summary>
            "OutputConditionIdentifier"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DestOutputProfile">
            <summary>
            "DestOutputProfile"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RegistryName">
            <summary>
            "RegistryName"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GTS_PDFXConformance">
            <summary>
            "GTS_PDFXConformance"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GTS_PDFXVersion">
            <summary>
            "GTS_PDFXVersion"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.HideToolbar">
            <summary>
            "HideToolbar"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OpenAction">
            <summary>
            "OpenAction"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Colorants">
            <summary>
            "Colorants"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Alternate">
            <summary>
            "Alternate"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Thumb">
            <summary>
            "Thumb"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DIS">
            <summary>
            "DIS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ExData">
            <summary>
            "ExData"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RO">
            <summary>
            "RO"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Dests">
            <summary>
            "Dests"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Dest">
            <summary>
            "Dest"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AntiAlias">
            <summary>
            "AntiAlias"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Bounds">
            <summary>
            "Bounds"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Encode">
            <summary>
            "Encode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Functions">
            <summary>
            "Functions"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Extends">
            <summary>
            "Extends"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PrintScaling">
            <summary>
            "PrintScaling"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ITXT">
            <summary>
            "ITXT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NXForm">
            <summary>
            "NXForm"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StructParent">
            <summary>
            "StructParent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.On">
            <summary>
            "On"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DisplayDocTitle">
            <summary>
            "DisplayDocTitle"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OneVisionPageColorsInfo">
            <summary>
            "OneVisionPageColorsInfo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PageProcessColors">
            <summary>
            "PageProcessColors"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OPOFF">
            <summary>
            "OPOFF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OPON">
            <summary>
            "OPON"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OneVisionCreationDate">
            <summary>
            "OneVisionCreationDate"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OneVisionProducer">
            <summary>
            "OneVisionProducer"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OneVisionCreator">
            <summary>
            "OneVisionCreator"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Matte">
            <summary>
            "Matte"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AFC">
            <summary>
            "AFC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Copyright">
            <summary>
            "Copyright"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Comments">
            <summary>
            "Comments"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Verdana">
            <summary>
            "Verdana"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Bahnschrift">
            <summary>
            "Bahnschrift"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BellMT">
            <summary>
            "BellMT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CoBO">
            <summary>
            "CoBO"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CoOb">
            <summary>
            "CoOb"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.HeBO">
            <summary>
            "HeBO"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TiRo">
            <summary>
            "TiRo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Yes">
            <summary>
            "Yes"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IF">
            <summary>
            "IF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FS">
            <summary>
            "FS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.UF">
            <summary>
            "UF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MyChoice">
            <summary>
            "MyChoice"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SigFlags">
            <summary>
            "SigFlags"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DSz">
            <summary>
            "DSz"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Lock">
            <summary>
            "Lock"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DevRGBCS">
            <summary>
            "DevRGBCS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Gamma">
            <summary>
            "Gamma"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SubFilter">
            <summary>
            "SubFilter"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ByteRange">
            <summary>
            "ByteRange"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Location">
            <summary>
            "Location"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Reference">
            <summary>
            "Reference"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TransformMethod">
            <summary>
            "TransformMethod"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TransformParams">
            <summary>
            "TransformParams"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Action">
            <summary>
            "Action"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DigestMethod">
            <summary>
            "DigestMethod"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DigestValue">
            <summary>
            "DigestValue"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DigestLocation">
            <summary>
            "DigestLocation"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RV">
            <summary>
            "RV"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Extensions">
            <summary>
            "Extensions"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ADBE">
            <summary>
            "ADBE"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BaseVersion">
            <summary>
            "BaseVersion"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ExtensionLevel">
            <summary>
            "ExtensionLevel"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Manager">
            <summary>
            "Manager"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Tahoma">
            <summary>
            "Tahoma"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OE">
            <summary>
            "OE"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Perms">
            <summary>
            "Perms"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.UE">
            <summary>
            "UE"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Mask">
            <summary>
            "Mask"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Verypdf">
            <summary>
            "Verypdf"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Threads">
            <summary>
            "Threads"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.B">
            <summary>
            "B"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OFF">
            <summary>
            "OFF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ADBE_FillSign">
            <summary>
            "ADBE_FillSign"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Icon">
            <summary>
            "Icon"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LE">
            <summary>
            "LE"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CL">
            <summary>
            "CL"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.squiggly">
            <summary>
            "squiggly"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BE">
            <summary>
            "BE"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.InkList">
            <summary>
            "InkList"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.EF">
            <summary>
            "EF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DL">
            <summary>
            "DL"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Params">
            <summary>
            "Params"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CheckSum">
            <summary>
            "CheckSum"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LL">
            <summary>
            "LL"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LLE">
            <summary>
            "LLE"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LLO">
            <summary>
            "LLO"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Cap">
            <summary>
            "Cap"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CP">
            <summary>
            "CP"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Compress">
            <summary>
            "Compress"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SpecO">
            <summary>
            "SpecO"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LengthO">
            <summary>
            "LengthO"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NewWindow">
            <summary>
            "NewWindow"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Export">
            <summary>
            "Export"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ExportState">
            <summary>
            "ExportState"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Print">
            <summary>
            "Print"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PrintState">
            <summary>
            "PrintState"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TK">
            <summary>
            "TK"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CenterWindow">
            <summary>
            "CenterWindow"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FitWindow">
            <summary>
            "FitWindow"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FL">
            <summary>
            "FL"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TR">
            <summary>
            "TR"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TR2">
            <summary>
            "TR2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TI">
            <summary>
            "TI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Bl">
            <summary>
            "Bl"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Fo">
            <summary>
            "Fo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TP">
            <summary>
            "TP"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FRM">
            <summary>
            "FRM"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.X">
            <summary>
            "X"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Limits">
            <summary>
            "Limits"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NeedAppearances">
            <summary>
            "NeedAppearances"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CMapName">
            <summary>
            "CMapName"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CMapType">
            <summary>
            "CMapType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.WMode">
            <summary>
            "WMode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LC">
            <summary>
            "LC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SpiderInfo">
            <summary>
            "SpiderInfo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PZ">
            <summary>
            "PZ"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Reason">
            <summary>
            "Reason"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ContactInfo">
            <summary>
            "ContactInfo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RadPdfCustomData">
            <summary>
            "RadPdfCustomData"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PageDirection">
            <summary>
            "PageDirection"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.HRes">
            <summary>
            "HRes"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.VRes">
            <summary>
            "VRes"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TRN">
            <summary>
            "TRN"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.J">
            <summary>
            "J"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MRC">
            <summary>
            "MRC"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PSL">
            <summary>
            "PSL"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Layer">
            <summary>
            "Layer"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GcProps">
            <summary>
            "GcProps"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.type">
            <summary>
            "type"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.placeholder">
            <summary>
            "placeholder"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.pattern">
            <summary>
            "pattern"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.validationmessage">
            <summary>
            "validationmessage"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.validateoninput">
            <summary>
            "validateoninput"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.autocomplete">
            <summary>
            "autocomplete"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.defaultvalue">
            <summary>
            "defaultvalue"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OneVisionSourceFileName">
            <summary>
            "OneVisionSourceFileName"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OneVisionQueueName">
            <summary>
            "OneVisionQueueName"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OneVisionDongleID">
            <summary>
            "OneVisionDongleID"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Prop_Build">
            <summary>
            "Prop_Build"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.App">
            <summary>
            "App"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OS">
            <summary>
            "OS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.REx">
            <summary>
            "REx"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TrustedMode">
            <summary>
            "TrustedMode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Date">
            <summary>
            "Date"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PubSec">
            <summary>
            "PubSec"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NonEFontNoWarn">
            <summary>
            "NonEFontNoWarn"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IPAPGothic">
            <summary>
            "IPAPGothic"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IPAexGothic">
            <summary>
            "IPAexGothic"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Impact">
            <summary>
            "Impact"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ImprintMTShadow">
            <summary>
            "ImprintMTShadow"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.InformalRoman">
            <summary>
            "InformalRoman"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OutputCondition">
            <summary>
            "OutputCondition"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.HideMenubar">
            <summary>
            "HideMenubar"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.HideWindowUI">
            <summary>
            "HideWindowUI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DefaultGray">
            <summary>
            "DefaultGray"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DefaultRGB">
            <summary>
            "DefaultRGB"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.WinCharSet">
            <summary>
            "WinCharSet"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Style">
            <summary>
            "Style"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Panose">
            <summary>
            "Panose"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Fg">
            <summary>
            "Fg"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BitsPerCoordinate">
            <summary>
            "BitsPerCoordinate"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BitsPerFlag">
            <summary>
            "BitsPerFlag"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CreatorInfo">
            <summary>
            "CreatorInfo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SubType">
            <summary>
            "SubType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.pgfprgb">
            <summary>
            "pgfprgb"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GS_HOMAN">
            <summary>
            "GS_HOMAN"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SimSun">
            <summary>
            "SimSun"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Illustrator">
            <summary>
            "Illustrator"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Process">
            <summary>
            "Process"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Components">
            <summary>
            "Components"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ImageName">
            <summary>
            "ImageName"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ProcSets">
            <summary>
            "ProcSets"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LJ">
            <summary>
            "LJ"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LW">
            <summary>
            "LW"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ML">
            <summary>
            "ML"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IsMap">
            <summary>
            "IsMap"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AdobePhotoshop">
            <summary>
            "AdobePhotoshop"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Blend">
            <summary>
            "Blend"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ColorTransform">
            <summary>
            "ColorTransform"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.HSamples">
            <summary>
            "HSamples"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.QFactor">
            <summary>
            "QFactor"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.VSamples">
            <summary>
            "VSamples"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TimesNewRomanPSMT">
            <summary>
            "TimesNewRomanPSMT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OverlayText">
            <summary>
            "OverlayText"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Repeat">
            <summary>
            "Repeat"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NuanRGB">
            <summary>
            "NuanRGB"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Header">
            <summary>
            "Header"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Footer">
            <summary>
            "Footer"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CSP">
            <summary>
            "CSP"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PaperPortPageTitleStream">
            <summary>
            "PaperPortPageTitleStream"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MxWidth">
            <summary>
            "MxWidth"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Document">
            <summary>
            "Document"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Msg">
            <summary>
            "Msg"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Signature">
            <summary>
            "Signature"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Data">
            <summary>
            "Data"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TiBo">
            <summary>
            "TiBo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DataPrep">
            <summary>
            "DataPrep"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PMD">
            <summary>
            "PMD"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Color">
            <summary>
            "Color"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Visible">
            <summary>
            "Visible"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Editable">
            <summary>
            "Editable"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Dimmed">
            <summary>
            "Dimmed"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Preview">
            <summary>
            "Preview"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Printed">
            <summary>
            "Printed"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FontMatrix">
            <summary>
            "FontMatrix"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CharProcs">
            <summary>
            "CharProcs"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DocChecksum">
            <summary>
            "DocChecksum"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NonFullScreenPageMode">
            <summary>
            "NonFullScreenPageMode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.a">
            <summary>
            "a"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.e">
            <summary>
            "e"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.f">
            <summary>
            "f"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Y">
            <summary>
            "Y"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Z">
            <summary>
            "Z"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.b">
            <summary>
            "b"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.c">
            <summary>
            "c"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.d">
            <summary>
            "d"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.g">
            <summary>
            "g"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.h">
            <summary>
            "h"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.i">
            <summary>
            "i"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.j">
            <summary>
            "j"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.k">
            <summary>
            "k"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.l">
            <summary>
            "l"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.m">
            <summary>
            "m"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.n">
            <summary>
            "n"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.o">
            <summary>
            "o"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.p">
            <summary>
            "p"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.q">
            <summary>
            "q"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.r">
            <summary>
            "r"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.s">
            <summary>
            "s"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.t">
            <summary>
            "t"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.u">
            <summary>
            "u"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.v">
            <summary>
            "v"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.w">
            <summary>
            "w"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.y">
            <summary>
            "y"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.x">
            <summary>
            "x"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.z">
            <summary>
            "z"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CreatorTool">
            <summary>
            "CreatorTool"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ViewArea">
            <summary>
            "ViewArea"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ViewClip">
            <summary>
            "ViewClip"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PrintArea">
            <summary>
            "PrintArea"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PrintClip">
            <summary>
            "PrintClip"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Duplex">
            <summary>
            "Duplex"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PickTrayByPDFSize">
            <summary>
            "PickTrayByPDFSize"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NxGS">
            <summary>
            "NxGS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.RoleMap">
            <summary>
            "RoleMap"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ParentTree">
            <summary>
            "ParentTree"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ParentTreeNextKey">
            <summary>
            "ParentTreeNextKey"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DLI">
            <summary>
            "DLI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Platform">
            <summary>
            "Platform"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DLI_Copyright">
            <summary>
            "DLI_Copyright"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Optio_Server">
            <summary>
            "Optio_Server"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BEI">
            <summary>
            "BEI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PDFVersion">
            <summary>
            "PDFVersion"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DocMDP">
            <summary>
            "DocMDP"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Page">
            <summary>
            "Page"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.JT">
            <summary>
            "JT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Infix">
            <summary>
            "Infix"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Changes">
            <summary>
            "Changes"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GridDivisions">
            <summary>
            "GridDivisions"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GridSpacing">
            <summary>
            "GridSpacing"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IceniSetup">
            <summary>
            "IceniSetup"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MaxGID">
            <summary>
            "MaxGID"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NamedStyles">
            <summary>
            "NamedStyles"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Para">
            <summary>
            "Para"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ShowGrid">
            <summary>
            "ShowGrid"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ShowGuides">
            <summary>
            "ShowGuides"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SnapToGrid">
            <summary>
            "SnapToGrid"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.UserRestrictions">
            <summary>
            "UserRestrictions"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FIDArray">
            <summary>
            "FIDArray"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GIDArray">
            <summary>
            "GIDArray"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Margins">
            <summary>
            "Margins"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ICNAppName">
            <summary>
            "ICNAppName"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ICNAppPlatform">
            <summary>
            "ICNAppPlatform"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ICNAppVersion">
            <summary>
            "ICNAppVersion"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.EndIndent">
            <summary>
            "EndIndent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StartIndent">
            <summary>
            "StartIndent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TextAlign">
            <summary>
            "TextAlign"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TextIndent">
            <summary>
            "TextIndent"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.LeadingMode">
            <summary>
            "LeadingMode"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SpaceAfter">
            <summary>
            "SpaceAfter"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Weight">
            <summary>
            "Weight"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Accessibility">
            <summary>
            "Accessibility"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.XFA">
            <summary>
            "XFA"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.SPDF">
            <summary>
            "SPDF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MSGothic">
            <summary>
            "MSGothic"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MSMincho">
            <summary>
            "MSMincho"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MSPMincho">
            <summary>
            "MSPMincho"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MSReferenceSansSerif">
            <summary>
            "MSReferenceSansSerif"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MSReferenceSpecialty">
            <summary>
            "MSReferenceSpecialty"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MSUIGothic">
            <summary>
            "MSUIGothic"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Wingdings">
            <summary>
            "Wingdings"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ProductType">
            <summary>
            "ProductType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Brand">
            <summary>
            "Brand"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.IsRegister">
            <summary>
            "IsRegister"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NoCaculate">
            <summary>
            "NoCaculate"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PMingLiU">
            <summary>
            "PMingLiU"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.EncodedByteAlign">
            <summary>
            "EncodedByteAlign"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.EndOfLine">
            <summary>
            "EndOfLine"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MetadataDate">
            <summary>
            "MetadataDate"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ContentTypeId">
            <summary>
            "ContentTypeId"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Quality">
            <summary>
            "Quality"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FN">
            <summary>
            "FN"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Search">
            <summary>
            "Search"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OPI">
            <summary>
            "OPI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FAAAAI">
            <summary>
            "FAAAAI"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PCSp">
            <summary>
            "PCSp"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CSp">
            <summary>
            "CSp"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CSpg">
            <summary>
            "CSpg"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.GSa">
            <summary>
            "GSa"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.AIType">
            <summary>
            "AIType"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ZaDi">
            <summary>
            "ZaDi"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Zoom">
            <summary>
            "Zoom"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.max">
            <summary>
            "max"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.min">
            <summary>
            "min"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Locked">
            <summary>
            "Locked"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.space">
            <summary>
            "space"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ampersand">
            <summary>
            "ampersand"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.parenleft">
            <summary>
            "parenleft"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.parenright">
            <summary>
            "parenright"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.comma">
            <summary>
            "comma"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.hyphen">
            <summary>
            "hyphen"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.period">
            <summary>
            "period"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.slash">
            <summary>
            "slash"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.zero">
            <summary>
            "zero"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.one">
            <summary>
            "one"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.two">
            <summary>
            "two"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.three">
            <summary>
            "three"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.four">
            <summary>
            "four"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.five">
            <summary>
            "five"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.six">
            <summary>
            "six"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.seven">
            <summary>
            "seven"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.eight">
            <summary>
            "eight"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.nine">
            <summary>
            "nine"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.colon">
            <summary>
            "colon"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.at">
            <summary>
            "at"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StampId">
            <summary>
            "StampId"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Base">
            <summary>
            "Base"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.State">
            <summary>
            "State"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.StateModel">
            <summary>
            "StateModel"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.HeOb">
            <summary>
            "HeOb"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DGAPChanges">
            <summary>
            "DGAPChanges"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ADBE_FillSignInfo">
            <summary>
            "ADBE_FillSignInfo"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Century">
            <summary>
            "Century"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Sound">
            <summary>
            "Sound"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Left">
            <summary>
            "Left"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Pagenumber">
            <summary>
            "Pagenumber"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Top">
            <summary>
            "Top"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.InDesign">
            <summary>
            "InDesign"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.DocumentID">
            <summary>
            "DocumentID"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NumberofPages">
            <summary>
            "NumberofPages"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.OriginalDocumentID">
            <summary>
            "OriginalDocumentID"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PageUIDList">
            <summary>
            "PageUIDList"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.PageWidthList">
            <summary>
            "PageWidthList"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Ebrima">
            <summary>
            "Ebrima"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Haettenschweiler">
            <summary>
            "Haettenschweiler"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Lato">
            <summary>
            "Lato"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.TwCenMT">
            <summary>
            "TwCenMT"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.ArialNarrow">
            <summary>
            "ArialNarrow"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.CourierStd">
            <summary>
            "CourierStd"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.Raavi">
            <summary>
            "Raavi"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.removed">
            <summary>
            "removed"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FixedPrint">
            <summary>
            "FixedPrint"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.UCR">
            <summary>
            "UCR"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.UCR2">
            <summary>
            "UCR2"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.FullPage">
            <summary>
            "FullPage"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.MSPGothic">
            <summary>
            "MSPGothic"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.rgid">
            <summary>
            "rgid"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.square">
            <summary>
            "square"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.triangle">
            <summary>
            "triangle"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.striangle">
            <summary>
            "striangle"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.BaseState">
            <summary>
            "BaseState"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.EFF">
            <summary>
            "EFF"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfName.Std.NumCopies">
            <summary>
            "NumCopies"
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNameObject">
            <summary>
            The PDF Name indirect object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNameObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNameObject"/> class.
            </summary>
            <param name="value">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.Value"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfNameObject.Name">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfNameExt">
            <summary>
            Contains extension methods for the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfName"/> interface,
            allows working with <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNameObject"/> in the same way.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfNameExt.AsString(GrapeCity.Documents.Pdf.Spec.IPdfName)">
            <summary>
            Converts this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfName"/> to the string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfNameExt.IsNullOrEmpty(GrapeCity.Documents.Pdf.Spec.IPdfName)">
            <summary>
            Indicates whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfName"/> is <see langword="null"/> or has zero length.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNameTree`1">
            <summary>
            Represents the PDF name tree object.
            </summary>
            <typeparam name="TItem">The item type.</typeparam>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfNameTree`1.ItemByString">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IDictionary`2"/> interface
            what can be used to work with the object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfNull">
            <summary>
            Represents an interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNullObject"/>,
            allows working with objects of both types in the same way.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfNull.Null">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNull">
            <summary>
            Represents a PDF NULL object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNull.Instance">
            <summary>
            The instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/> class. This field is read-only.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNull.Equals(GrapeCity.Documents.Pdf.Spec.PdfNull)">
            <summary>
            Indicates whether the current <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/> is equal to another <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNull.ToString">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNullObject">
            <summary>
            Represents a PDF NULL indirect object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNullObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfNull)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNullObject"/> class.
            </summary>
            <param name="value">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.Value"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfNullObject.Null">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfNumber">
            <summary>
            Represents an interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumberObject"/>,
            allows working with objects of both types in the same way.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfNumber.Number">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNumber">
            <summary>
            Represents a PDF Number object.
            This class overrides and implements:
            <list type="bullet">
            <item><see cref="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.Equals(System.Object)"/></item>
            <item><see cref="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.GetHashCode"/></item>
            <item><see cref="T:System.IEquatable`1"/></item>
            <item>Equality operator.</item>
            <item>Inequality operator.</item>
            </list>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V0">
            <summary>
            The 0 (zero) value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V0_5">
            <summary>
            The 0.5 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V1">
            <summary>
            The 1 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V2">
            <summary>
            The 2 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V3">
            <summary>
            The 3 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V4">
            <summary>
            The 4 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V5">
            <summary>
            The 5 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V6">
            <summary>
            The 6 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V8">
            <summary>
            The 8 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V16">
            <summary>
            The 16 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V32">
            <summary>
            The 32 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V90">
            <summary>
            The 90 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V180">
            <summary>
            The 180 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V270">
            <summary>
            The 270 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.V315">
            <summary>
            The 315 value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.mi_Value">
            <summary>
            The number value.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfNumber.mi_DecimalPlaces">
            <summary>
            The count of digits after decimal point.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="decimalPlaces">The count of digits after decimal point.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.TryParse(System.String,System.Int32,GrapeCity.Documents.Pdf.Spec.PdfNumber@)">
            <summary>
            Tries to parse specified string and converts it to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/>,
            the <paramref name="pointPos"/> specifies the position of '.' from the start of the string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.Create(System.Nullable{System.Single})">
            <summary>
            Creates the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> object from nullable float value,
            returns <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfNull.Instance"/> if <paramref name="value"/> is null.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.ToString(System.Double,System.Int32)">
            <summary>
            Converts a double value to a string.
            Note that a separate method <see cref="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.ToString(System.Single,System.Int32)"/> exists for converting
            float values, separate methods are needed to avoid rounding errors that may occur when
            converting doubles to floats and vice versa.
            <param name="value">The value to convert.</param>
            <param name="decimalPlaces">The count of digits after decimal point.</param>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.ToString(System.Single,System.Int32)">
            <summary>
            Converts a float value to a string.
            Note that a separate method <see cref="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.ToString(System.Double,System.Int32)"/> exists for converting
            double values, separate methods are needed to avoid rounding errors that may occur when
            converting doubles to floats and vice versa.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="decimalPlaces">The count of digits after decimal point.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.Equals(GrapeCity.Documents.Pdf.Spec.PdfNumber)">
            <summary>
            Indicates whether the current <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> is equal to
            another <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/>.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfNumber.AsInt">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> to int.
            Note! The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> can contain a value does not fit into integer bounds,
            in this case result will be <see cref="F:System.Int32.MinValue"/> or <see cref="F:System.Int32.MaxValue"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfNumber.AsFloat">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> to float.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfNumber.AsDouble">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> to double.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.op_Implicit(GrapeCity.Documents.Pdf.Spec.PdfNumber)~System.Double">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> to a double.
            </summary>
            <param name="pn">The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> to convert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.op_Explicit(System.Double)~GrapeCity.Documents.Pdf.Spec.PdfNumber">
            <summary>
            Converts the double to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/>.
            </summary>
            <param name="d">The double value to convert.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.op_Equality(GrapeCity.Documents.Pdf.Spec.PdfNumber,GrapeCity.Documents.Pdf.Spec.PdfNumber)">
            <summary>
            The equality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumber.op_Inequality(GrapeCity.Documents.Pdf.Spec.PdfNumber,GrapeCity.Documents.Pdf.Spec.PdfNumber)">
            <summary>
            The inequality operator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNumberObject">
            <summary>
            The PDF Number indirect object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNumberObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfNumber)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumberObject"/> class.
            </summary>
            <param name="value">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.Value"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfNumberObject.Number">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfNumberExt">
            <summary>
            Contains extension methods for the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNumber"/> interface,
            allows working with <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumberObject"/> in the same way.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfNumberExt.AsInt(GrapeCity.Documents.Pdf.Spec.IPdfNumber)">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNumber"/> to an integer.
            Note that this method simply casts the double value to integer.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfNumberExt.AsUInt(GrapeCity.Documents.Pdf.Spec.IPdfNumber)">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNumber"/> to unsigned integer.
            Note that this method simply casts the double value to unsigned integer.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfNumberExt.AsLong(GrapeCity.Documents.Pdf.Spec.IPdfNumber)">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNumber"/> to a long integer.
            Note that this method simply casts the double value to long integer.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfNumberExt.AsFloat(GrapeCity.Documents.Pdf.Spec.IPdfNumber)">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNumber"/> to a float value.
            Note that this method simply casts the double value to float.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfNumberExt.AsDouble(GrapeCity.Documents.Pdf.Spec.IPdfNumber)">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNumber"/> to a double value.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNumberTree`1">
            <summary>
            Represents the PDF number tree object.
            </summary>
            <typeparam name="TItem">The item type.</typeparam>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfObject">
            <summary>
            For internal use.
            The common interface for PDF objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.CloneForMerge(GrapeCity.Documents.Pdf.MergeDocumentsData)">
            <summary>
            Creates a clone of this object to use in another document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.WasLoaded">
            <summary>
            Indicates whether the object was loaded from a PDF stream,
            used when the document is saved with incremental update.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.Indirect">
            <summary>
            Indicates whether the object is an indirect PDF object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.ObjID">
            <summary>
            The ID of the PDF object. It is meaningful only if <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.Indirect"/> is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.ObjIDGenerated">
            <summary>
            Indicates whether the <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.ObjID"/> was generated.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.Empty">
            <summary>
            Indicates whether the object is empty and its content can be skipped when 
            saving <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.DocID">
            <summary>
            See comments for <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.mi_DocID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.IsContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Returns a value indicating whether the object's content was changed and
            should be written to the output stream in case of incremental updates.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.ResetContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Marks content of the object as unchanged, after calling this method the
            <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.IsContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)"/> should return <see langword="false"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.Write(GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase)">
            <summary>
            Writes the PDF object to the <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase"/>.
            NOTE 1. When this method is called <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.ObjID"/>
                    contains correct value if <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.Indirect"/> is true.
            NOTE 2. Nested indirect <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> objects
                    should NOT be written in this method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            Writes the PDF object as indirect PDF object to the <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase"/>.
            This method can be used to write the object as several indirect PDF objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase">
            <summary>
            Base abstract class representing a PDF indirect object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase.m_Flags">
            <summary>
            The flags.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase.mi_ObjID">
            <summary>
            The ID of the indirect object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase.ToString">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase.ObjID">
            <summary>
            Gets or sets the ID of the indirect object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase.Value">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> that defines the value of this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase"/>.
            That should be a direct object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase.IsContentEqual(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Checks whether the content of this object is same as the 
            content of the <paramref name="other"/> object.
            </summary>
            <param name="other">The object to compare with this object.</param>
            <returns><see langword="true"/> if the two objects have the same content, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1">
            <summary>
            The abstract class representing a PDF indirect object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.mi_Value">
            <summary>
            The object value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1"/> class.
            </summary>
            <param name="value">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.Value"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.Value">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.TryPdfToNativeDelegate`2">
            <summary>
            The delegate used to convert an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> to a
            some native value.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt">
            <summary>
            Contains extension methods for the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> interface.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.GetReferencedObject(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            If the <paramref name="ipo"/> is an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> returns the
            object referenced by ths <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> otherwise returns
            <paramref name="ipo"/> itself.
            Note! The method returns NULL if <paramref name="ipo"/> is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>
            and this reference can't be resolved.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.DefWriteIndirectObject(GrapeCity.Documents.Pdf.Spec.IPdfObject,GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            The default implementation <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/>.
            <code>
            if (w.Doc.WriteComments)
                w.WriteComment(ipiso.GetType().Name);
            w.BeginObj(ipiso.ObjID);
            ipiso.Write(w);
            w.EndObj();
            </code>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> from an object.
            Depending on the type of the object, the following types of PDF objects are crated:
            <list type="bullet">
            <item>string -> <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/></item>
            <item>bool -> <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfBool"/></item>
            <item>RectangleF -> <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/></item>
            <item>Any number (byte, int, float etc) -> <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNumber"/></item>
            <item>IList -> <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/></item>
            <item>IDictionary{PdfName, object} -> <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/></item>
            </list>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.PdfStringFromString(System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> from a string,
            returns <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/> if the string is <see langword="null"/>, otherwise returns a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> representing the string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.PdfNameFromString(System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> from a string,
            returns <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNull"/> if string is null, otherwise returns <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.TryTo``1(GrapeCity.Documents.Pdf.Spec.IPdfObject,``0@,System.Boolean@,System.Boolean)">
            <summary>
            Tries to convert an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> to <typeparamref name="T"/>.
            </summary>
            <param name="ipob">The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> to convert.</param>
            <param name="value">OUT: The value.</param>
            <param name="isNull">OUT: Indicates whether the value is PDF null.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <returns>true if no error occurs.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.TryTo``2(GrapeCity.Documents.Pdf.Spec.IPdfObject,``1@,System.Boolean,GrapeCity.Documents.Pdf.Spec.TryPdfToNativeDelegate{``0,``1})">
            <summary>
            Same as <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.TryTo``1(GrapeCity.Documents.Pdf.Spec.IPdfObject,``0@,System.Boolean@,System.Boolean)"/>,
            but allows converting PDF value to a some native value using
            specified callback method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.TryGetAtPath``1(GrapeCity.Documents.Pdf.Spec.IPdfObject,``0@,System.Boolean@,System.Boolean,System.Int32,System.Object[])">
            <summary>
            Tries to get a value at specified path,
            <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.TryTo``1(GrapeCity.Documents.Pdf.Spec.IPdfObject,``0@,System.Boolean@,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.TryGetAtPath``2(GrapeCity.Documents.Pdf.Spec.IPdfObject,``1@,System.Boolean,GrapeCity.Documents.Pdf.Spec.TryPdfToNativeDelegate{``0,``1},System.Int32,System.Object[])">
            <summary>
            Same as <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.TryGetAtPath``1(GrapeCity.Documents.Pdf.Spec.IPdfObject,``0@,System.Boolean@,System.Boolean,System.Int32,System.Object[])"/>,
            but allows converting PDF value to a some native value using
            specified callback method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.TryToArray``1(GrapeCity.Documents.Pdf.Spec.IPdfObject,``0[]@,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Tries to convert an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> to an array of <typeparamref name="T"/>,
            </summary>
            <typeparam name="T">The array item type.</typeparam>
            <param name="ipob">The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> to convert.</param>
            <param name="value">OUT: The array of <typeparamref name="T"/>.</param>
            <param name="singleToArray">Indicates whether to convert single value to an array.</param>
            <param name="allowNulls">Indicates whether to handle <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNull"/> as <see langword="null"/>.</param>
            <param name="addWarning">Indicates whether to add a warning to <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.ParserLog"/> if errors occur.</param>
            <returns>true if no error occurs.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.TryToArray``2(GrapeCity.Documents.Pdf.Spec.IPdfObject,``1[]@,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.Spec.TryPdfToNativeDelegate{``0,``1})">
            <summary>
            Same as <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.TryToArray``1(GrapeCity.Documents.Pdf.Spec.IPdfObject,``0[]@,System.Boolean,System.Boolean,System.Boolean)"/>,
            but allows converting PDF value to a some native value using
            specified callback method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.GetActual``1(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Checks whether the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> is a <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> and returns
            actual referenced PDF object, otherwise returns <paramref name="po"/> itself.
            </summary>
            <param name="po">The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> to check.</param>
            <returns>The referenced <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> if <paramref name="po"/> is an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.CreateIndirectObject(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Creates an indirect object from direct PDF object.
            </summary>
            <param name="po">The direct PDF object.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfIndirectObjectBase"/> appropriate to the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfObjectExt.IsContentEqual(GrapeCity.Documents.Pdf.Spec.IPdfObject,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Checks whether the content of two <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>s is the same.
            If both objects are <see langword="null"/>, they are considered to have the same content.
            </summary>
            <param name="v1">The first object to compare.</param>
            <param name="v2">The second object to compare.</param>
            <returns><see langword="true"/> if the objects have the same content, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfObjID">
            <summary>
            Defines full ID of PDF object including ID and generation.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfObjID.Empty">
            <summary>
            The empty <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObjID"/> structure.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfObjID.ID">
            <summary>
            The object's id.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfObjID.Gen">
            <summary>
            The object's generation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObjID.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObjID"/> structure.
            </summary>
            <param name="objID">The value of <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfObjID.ID"/>.</param>
            <param name="gen">The value of <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfObjID.Gen"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObjID.IsEmpty">
            <summary>
            Returns a value indicating whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObjID"/> struct contains empty object ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObjID.Equals(GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Determines whether two <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObjID"/> instances are equal.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObjID.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObjID.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObjID.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObjID.op_Equality(GrapeCity.Documents.Pdf.Spec.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            The equality operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfObjID.op_Inequality(GrapeCity.Documents.Pdf.Spec.PdfObjID,GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            The inequality operator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfRef">
            <summary>
            Represents an interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRefObject"/>,
            allows working with objects of both types in the same way.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfRef.Ref">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfRef">
            <summary>
            Represents a PDF Ref object.
            This class overrides and implements:
            <list type="bullet">
            <item><see cref="M:GrapeCity.Documents.Pdf.Spec.PdfRef.Equals(System.Object)"/></item>
            <item><see cref="M:GrapeCity.Documents.Pdf.Spec.PdfRef.GetHashCode"/></item>
            <item><see cref="T:System.IEquatable`1"/></item>
            </list>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfRef.mi_Doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning the object referenced by this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfRef.mi_ObjID">
            <summary>
            The ID of referenced object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> class.
            </summary>
            <param name="doc">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfRef.Doc"/>.</param>
            <param name="objID">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfRef.ObjID"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> class.
            </summary>
            <param name="doc">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfRef.Doc"/>.</param>
            <param name="id">The object ID.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRef.Equals(GrapeCity.Documents.Pdf.Spec.PdfRef)">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> is equal to <paramref name="value"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfRef.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning the object referenced by this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfRef.ObjID">
            <summary>
            Gets the ID of the referenced object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfRefObject">
            <summary>
            The PDF Ref indirect object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfRefObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfRef)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRefObject"/> class.
            </summary>
            <param name="value">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.Value"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfRefObject.Ref">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfRefExt">
            <summary>
            Contains extension methods for the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/> interface,
            allows working with <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRef"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfRefObject"/> in the same way.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfRefExt.Resolve(GrapeCity.Documents.Pdf.Spec.IPdfRef)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> referenced by this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>,
            or <see langword="null"/> if the referenced object cannot be fetched.
            </summary>
            <param name="ipr">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.</param>
            <returns>The referenced indirect object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfRefExt.TryResolve``1(GrapeCity.Documents.Pdf.Spec.IPdfRef,``0@,System.Boolean@,System.Boolean)">
            <summary>
            Tries to resolve the reference and return the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>
            of the specified type referenced by this <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.
            </summary>
            <typeparam name="T">The type of the indirect PDF object.</typeparam>
            <param name="pr">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.</param>
            <param name="value">OUT: The referenced PDF indirect object.</param>
            <param name="isNull">OUT: Indicates whether the referenced value is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfNull"/>.</param>
            <param name="addWarning">Indicates whether to add a warning if the reference cannot be resolved to an object of the specified type.</param>
            <returns><see langword="true"/> if successful, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfRefExt.TryResolve``1(GrapeCity.Documents.Pdf.Spec.IPdfRef,``0@,System.Boolean)">
            <summary>
            Tries to return actual <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> referenced by the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.
            </summary>
            <typeparam name="T">The type of indirect PDF object.</typeparam>
            <param name="pr">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.</param>
            <param name="value">OUT: The referenced PDF indirect object.</param>
            <param name="addWarning">Indicates whether to add a warning if referenced can't be resolved to an object of specified type.</param>
            <returns>true if successful, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfRefExt.Resolve``1(GrapeCity.Documents.Pdf.Spec.IPdfRef,System.Boolean)">
            <summary>
            Return actual <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> referenced by the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.
            </summary>
            <typeparam name="T">The type of indirect PDF object.</typeparam>
            <param name="pr">The current <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.</param>
            <param name="addWarning">Indicates whether to add a warning if referenced can't be resolved to an object of specified type.</param>
            <returns>The referenced PDF indirect object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfRefExt.TryGetParsedObject(GrapeCity.Documents.Pdf.Spec.IPdfRef,GrapeCity.Documents.Pdf.Spec.IPdfObject@)">
            <summary>
            Tries to get parsed object associated with the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfRef"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfRefExt.TryGetReferencedObject(GrapeCity.Documents.Pdf.Spec.IPdfRef,GrapeCity.Documents.Pdf.Spec.IPdfObject@)">
            <summary>
            Tries to get the object referenced by the <paramref name="ipr"/>, the following rules are used:
            -) Returns the parsed object if referenced PDF object was parsed
            -) Returns the referenced PDF object
            -) Returns null if can't get the referenced object at all (damaged PDF for example)
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo">
            <summary>
            Contains information about a decoded PDF Stream.
            When a PDF stream is decoded all filters (defined by the "Filters" array) are applied,
            except for image filters (DCTDecode, JBIG2Decode etc) which are processed in a custom way,
            see <see cref="T:GrapeCity.Documents.Pdf.ImageDecoder.ImageDecoder"/>.
            The <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.ImageFilterName"/> and <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.ImageFilterDecodeParams"/>
            contain information about the image filter.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.ImageFilterName">
            <summary>
            The name of the image filter that should be used to decode the stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.ImageFilterDecodeParams">
            <summary>
            The "DecodeParms" PDF dictionary containing additional parameters for the image filter.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.Length">
            <summary>
            The length of the PDF stream as specified by the "Length" entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.mi_HasCryptFilter">
            <summary>
            Indicates whether the stream has the <b>Crypt</b> filter specified.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.mi_CryptFilterDecodeParams">
            <summary>
            The parameters for the <b>Crypt</b> filter (usually <see langword="null"/>).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.#ctor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfDict,System.Boolean,GrapeCity.Documents.Pdf.Spec.IPdfDict,System.IO.Stream,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.DetachStream">
            <summary>
            Detaches the <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.Stream"/> from the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo"/>
            so it will not be disposed when the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo"/> disposed.
            </summary>
            <returns>The <see cref="T:System.IO.Stream"/> owned by this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo"/>.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo.Stream">
            <summary>
            Gets the underlying <see cref="T:System.IO.Stream"/> object.
            It will be disposed when this object is disposed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfString">
            <summary>
            Represents an interface implemented by <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringObject"/>,
            allows working with objects of both types in the same way.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.IPdfString.String">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStringFlags">
            <summary>
            Flags defining the state of a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStringFlags.None">
            <summary>
            No flags are specified.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStringFlags.HexFormat">
            <summary>
            The string should be serialized in HEX format.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStringFlags.Encrypted">
            <summary>
            The string is encrypted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStringFlags.NotEncrypt">
            <summary>
            The string should NOT be encrypted when saving the document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfString">
            <summary>
            Represents a PDF String.
            </summary>
            <remarks>
            Technically a PDF string is an array of bytes. Its interpretation depends on the context.
            The PDF specification describes the following possible types:
            <list type="bullet">
            <item>byte string</item>
            <item>text string</item>
            <item>Unicode string</item><description>Starts with Unicode Prefix, two bytes 254 and 255.</description>
            <item>etc.</item><description>See more details in the PDF specification.</description>
            </list>
            </remarks>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfString.Empty">
            <summary>
            The empty instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfString.Adobe">
            <summary>
            "Adobe"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfString.UCS">
            <summary>
            "UCS"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfString.open">
            <summary>
            "open"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfString.print">
            <summary>
            "print"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfString.sRGB">
            <summary>
            "sRGB"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfString.Flags">
            <summary>
            The state of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfString.mi_Content">
            <summary>
            The content of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.#ctor(System.Byte[],GrapeCity.Documents.Pdf.Spec.PdfStringFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="flags">The value of <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfString.Flags"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> class.
            </summary>
            <param name="value">The byte array.</param>
            <param name="offset">The offset in the <paramref name="value"/>.</param>
            <param name="length">The length of the name.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.FromString(System.String)">
            <summary>
            Creates a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> from the passed string.
            </summary>
            <param name="s">The string to create the PDF string from.</param>
            <returns>The created PDF string, or <see langword="null"/> if <paramref name="s"/> is <see langword="null"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.EncodeAsPdfString(System.String)">
            <summary>
            For internal use.
            Encodes a string as a PDF string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.StringToBytes(System.String)">
            <summary>
            Converts a string to the array of bytes representing the PDF string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.BytesToString(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Converts a list of bytes representing a PDF string to a string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.CompareTo(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Compares the current <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> with another <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>
            and returns an integer that indicates whether the current instance precedes,
            follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="other">The other <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.</param>
            <returns>A value that indicates the relative order of the objects being compared.
            The return value has these meanings:
            <list type="bullet">
            <item><term>Less than 0</term><description>This instance precedes <paramref name="other"/> in the sort order.</description></item>
            <item><term>0</term><description>This instance occurs in the same position in the sort order as <paramref name="other"/>.</description></item>
            <item><term>Greater than 0</term><description>This instance follows other in the sort <paramref name="other"/>.</description></item>
            </list>
            </returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.Equals(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> is equal to <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfString.ToString">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfString.Item(System.Int32)">
            <summary>
            Gets or sets the byte at the specified index.
            </summary>
            <param name="index">The zero-based index of the byte to get or set.</param>
            <returns>The byte at the specified index.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfString.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStringObject">
            <summary>
            The PDF String indirect object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStringObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfString)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringObject"/> class.
            </summary>
            <param name="value">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.Value"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfStringObject.String">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.IPdfStringExt">
            <summary>
            Contains extension methods for the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/> interface,
            allows working with <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/> and <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringObject"/> in the same way.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfStringExt.AsString(GrapeCity.Documents.Pdf.Spec.IPdfString)">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/> object to a Unicode string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfStringExt.ToArray(GrapeCity.Documents.Pdf.Spec.IPdfString)">
            <summary>
            Converts the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/> object to a byte array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.IPdfStringExt.IsNullOrEmpty(GrapeCity.Documents.Pdf.Spec.IPdfString)">
            <summary>
            Returns a value indicating whether the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfString"/> is <see langword="null"/> or has zero length.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStringOrName">
            <summary>
            For internal use.
            The PDF object which can be serialized as PDF string or as PDF name,
            the value is specified by the <b>string</b>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStringOrName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringOrName"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStringOrName.WriteAsName(GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase)">
            <summary>
            Gets a value indicating whether the object should be written as PDF name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStringOrName.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStringOrName.CompareTo(GrapeCity.Documents.Pdf.Spec.PdfStringOrName)">
            <summary>
            Compares the current <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringOrName"/> with another <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringOrName"/>
            and returns an integer that indicates whether the current instance precedes,
            follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="other">The other <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringOrName"/>.</param>
            <returns>A value that indicates the relative order of the objects being compared.
            The return value has these meanings:
            Value Meaning Less than zero This instance precedes other in the sort order.
            Zero This instance occurs in the same position in the sort order as other.
            Greater than zero This instance follows other in the sort order.
            </returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStringOrName.Equals(GrapeCity.Documents.Pdf.Spec.PdfStringOrName)">
            <summary>
            Checks whether this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringOrName"/> equals to <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStringOrName.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStringOrName.ToString">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStringOrNameObject">
            <summary>
            The PDF indirect object which can be serialized as PDF string or as PDF name.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStringOrNameObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfStringOrName)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringOrNameObject"/> class.
            </summary>
            <param name="value">The value of <see cref="P:GrapeCity.Documents.Pdf.Spec.PdfIndirectObject`1.Value"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfStringOrNameObject.StringOrName">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStringOrName"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfTree`2">
            <summary>
            Base abstract class representing the PDF tree object.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TItem">The item type.</typeparam>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfTree`2.Empty">
            <summary>
            See <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.Empty"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Spec.PdfTree`2.ObjID">
            <summary>
            See <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.ObjID"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfTree`2.IsContentEqual(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            See <see cref="!:IPdfObject.IsContentEqual(IPdfObject)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfTree`2.IsContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.IsContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfTree`2.ResetContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.ResetContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfTree`2.ReplacePdfObjectWithPdfTree(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfTree{`0,`1})">
            <summary>
            Replaces the value with specified key with <b>PdfTree</b>,
            method assumes that the PdfTree was created from the replaced value, so
            all properties of PdfTree related to the serialization initialized
            from replaced value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfTree`2.Rebuild">
            <summary>
            Rebuilds internal list of the nodes, should be called after SortedItems.BeginUpdate() /
            SortedItems.EndUpdate().
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfDetachedStreamObject">
            <summary>
            The PDF stream object detached from the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfExternalStreamObject">
            <summary>
            The PDF stream object working with external data, not presented in the PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfExternalStreamObject.WriteStream(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfNativeStreamObject">
            <summary>
            The base abstract class for native PDF stream objects created during parsing a PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNativeStreamObject.#ctor(GrapeCity.Documents.Pdf.Spec.PdfDict)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNativeStreamObject"/> class.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfNativeStreamObject.WriteStream(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject">
            <summary>
            The PDF Stream object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.Doc">
            <summary>
            The owning <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.Offset">
            <summary>
            The offset of the stream data in the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.StreamObjID">
            <summary>
            The object ID used to decode the stream data if stream is encrypted,
            it NEVER changes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.#ctor(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.PdfDict,System.Int64,GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObject"/> class.
            </summary>
            <param name="doc">The value of <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.Doc"/>.</param>
            <param name="value">The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/>.</param>
            <param name="offset">The value of <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.Offset"/>.</param>
            <param name="streamObjID">The value of <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObject.StreamObjID"/>.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase">
            <summary>
            The base abstract class for PDF stream objects.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.mi_EncryptionStreamType">
            <summary>
            The encryption stream type assigned to the object when parsing a document,
            can be null, i.e. it was not assigned.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.#ctor(GrapeCity.Documents.Pdf.Spec.PdfDict)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase"/> class.
            </summary>
            <param name="value">The <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDict"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.ToDictObject">
            <summary>
            Converts this <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase"/> to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfDictObject"/>,
            removes all entries related to the stream (Length, Filter, DecodeParms).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetEncryptionStreamType">
            <summary>
            Returns the encryption stream type based on its Type (the "Type" entry in the PDF dictionary).
            </summary>
            <returns>The encryption stream type.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetActualEncryptionStreamType">
            <summary>
            Returns the actual encryption stream type using rules:
            1) Use <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.mi_EncryptionStreamType"/> if it is specified.
            2) Use <see cref="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetEncryptionStreamType"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetDecodedStream(GrapeCity.Documents.Pdf.Security.EncryptionStreamType)">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Parser.PdfParser.GetDecodedStream(GrapeCity.Documents.Pdf.Spec.PdfStreamObject,GrapeCity.Documents.Pdf.Security.EncryptionStreamType)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetStreamData(GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.Boolean)">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Parser.PdfParser.GetStreamData(GrapeCity.Documents.Pdf.Spec.PdfStreamObject,GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetStreamData(System.Boolean)">
            <summary>
            Same as <see cref="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetStreamData(GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.Boolean)"/> but uses
            <see cref="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetActualEncryptionStreamType"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetDecodedStream">
            <summary>
            Same as <see cref="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetDecodedStream(GrapeCity.Documents.Pdf.Security.EncryptionStreamType)"/> but uses
            <see cref="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetActualEncryptionStreamType"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetDecodedStreamBytes">
            <summary>
            Same as <see cref="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.GetDecodedStream"/>, converts the stream to the array of bytes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.WriteStream(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Boolean})">
            <summary>
            Writes the dictionary entries and the stream data to the <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter"/>.
            Note! Method assumes that the PDF dictionary already started.
            </summary>
            <param name="w">The <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter"/> object.</param>
            <param name="propCheckCallback">The callback method allows filtering the entries to write,
            an entry will not be written if the method returns false.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase.ToString">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Spec.PdfStreamProviderStreamObject">
            <summary>
            The PDF stream object working over <see cref="T:GrapeCity.Documents.Pdf.Util.IStreamProvider"/> interface.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Spec.PdfStreamProviderStreamObject.StreamProvider">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Util.IStreamProvider"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.StandardFonts">
            <summary>
            Contains 14 Standard PDF fonts.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.Helvetica">
            <summary>
            Helvetica Regular font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.HelveticaItalic">
            <summary>
            Helvetica Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.HelveticaBold">
            <summary>
            Helvetica Bold font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.HelveticaBoldItalic">
            <summary>
            Helvetica Bold Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.Times">
            <summary>
            Times Regular font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.TimesItalic">
            <summary>
            Times Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.TimesBold">
            <summary>
            Times Bold font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.TimesBoldItalic">
            <summary>
            Times Bold Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.Courier">
            <summary>
            Courier Regular font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.CourierItalic">
            <summary>
            Courier Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.CourierBold">
            <summary>
            Courier Bold font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.CourierBoldItalic">
            <summary>
            Courier Bold Italic font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.Symbol">
            <summary>
            Symbol Regular font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.StandardFonts.ZapfDingbats">
            <summary>
            Wingding Regular font.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.StandardFonts.FontInfo">
            <summary>
            Contains information about PDF standard font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.FontInfo.FontName">
            <summary>
            The name of standard font: "Times-Roman", "Helvetica-Oblique"
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.FontInfo.Type1Font">
            <summary>
            The Type1 font representing this standard font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.FontInfo.Font">
            <summary>
            The <see cref="T:GrapeCity.Documents.Text.Font"/> representing this standard font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.FontInfo.FontTables">
            <summary>
            The <see cref="T:GrapeCity.Documents.Text.FontTables"/> created from <see cref="F:GrapeCity.Documents.Pdf.StandardFonts.FontInfo.Font"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.Type1Font.Length1">
            <summary>
            The length in bytes of the clear-text portion of the Type 1 font program.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.Type1Font.Length2">
            <summary>
            The length in bytes of the encrypted portion of the Type 1 font program.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.Type1Font.Length3">
            <summary>
            The length in bytes of the fixed-content portion of the Type 1 font program.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.StandardFonts.Type1Font.Data">
            <summary>
            The font's data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.StandardFonts.Type1Font.FromStream(System.IO.Stream)">
            <summary>
            Creates <see cref="T:GrapeCity.Documents.Pdf.StandardFonts.Type1Font"/> object from stream.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.AttrCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.Attr">
            <summary>
            Represents a base structure attribute.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.Attr.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevision">
            <summary>
            Contains a structure attribute's (<see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> object) class name and its revision.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrClsRevision.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevision"/> class.
            </summary>
            <param name="attrClsName">The attribute class name.</param>
            <param name="revision">The revision of attribute, 0 by default.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrClsRevision.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection"/> containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrClsRevision.StructElement">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrClsRevision.AttrClsName">
            <summary>
            Gets the attribute class.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevisionCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevision"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrClsRevisionCollection.Add(System.String)">
            <summary>
            Adds a attribute class to the collection with default zero revision.
            </summary>
            <param name="attrCls">The attribute class to add.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevision"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.AttrRevision">
            <summary>
            Represents a structure attribute (<see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> object) and its revision.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrRevision.#ctor(GrapeCity.Documents.Pdf.Structure.Attr,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevision"/> class.
            </summary>
            <param name="attr">The underlying <see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> object.</param>
            <param name="revision">The revision of the attribute, 0 by default.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrRevision.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection"/> containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrRevision.StructElement">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> owning this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.AttrRevision.Attr">
            <summary>
            Gets the underlying <see cref="P:GrapeCity.Documents.Pdf.Structure.AttrRevision.Attr"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevision"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection.Add">
            <summary>
            Adds an empty attribute to the collection with default zero revision.
            </summary>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevision"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection.Add(GrapeCity.Documents.Pdf.Structure.Attr)">
            <summary>
            Adds an attribute to the collection with default zero revision.
            </summary>
            <param name="attr">The <see cref="T:GrapeCity.Documents.Pdf.Structure.Attr"/> object to add.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevision"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ClassMap">
            <summary>
            Represents the <b>ClassMap</b> of a Structure Tree.
            Logically the ClassMap is a dictionary that shall map name objects
            designating attribute classes to the corresponding attribute objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.IContentItem">
            <summary>
            Common interface for objects which can be added to a document's Structure Tree
            as content items, these include <see cref="T:GrapeCity.Documents.Pdf.Page"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/>, <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.IContentItem.StructParent">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.IContentItem.StructParents">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ContentItemLinkCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.ContentItemLinkCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> owning this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink">
            <summary>
            Abstract base class for types representing a content item in a PDF document's structure tree.
            Each <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink"/> is associated with a document object 
            that supports the <see cref="T:GrapeCity.Documents.Pdf.Structure.IContentItem"/> interface, typically it is <see cref="T:GrapeCity.Documents.Pdf.Page"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Annotations.AnnotationBase"/>, <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/> etc.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.ContentItemLink.GetContentItem">
            <summary>
            Returns the document's object associated with the <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink"/>,
            it can be Page, FormXObject, AnnotationBase, Image etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.ContentItemLink.StructElement">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> owning this object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.McidContentItemLink">
            <summary>
            Represents a content item specified via MCID and owning a <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.McidContentItemLink.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.McidContentItemLink"/> class.
            </summary>
            <param name="mcid">The identificator of a Marked Content Sequence in the page specified by <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.DefaultPage"/>.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.McidContentItemLink.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.McidContentItemLink.MCID">
            <summary>
            Gets the identificator of a Marked Content Sequence in the page specified by <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.DefaultPage"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.RContentItemLink">
            <summary>
            Abstract base class for <see cref="T:GrapeCity.Documents.Pdf.Structure.McrContentItemLink"/> and <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/> representing MCR and OBJR PDF objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.RContentItemLink.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.RContentItemLink.Page">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object where this content item is located.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.McrContentItemLink">
            <summary>
            Represents a Marked-Content Sequence as a Content Item in a PDF structure tree (MCR PDF object).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.McrContentItemLink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.McrContentItemLink"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.McrContentItemLink.FormXObject">
            <summary>
            Gets or sets the content stream containing the marked-content sequence.
            This entry should be present only if the marked-content sequence resides in a content stream other
            than the content stream for the page - for example,
            in a form XObject or an annotation’s appearance stream.
            If this entry is absent, the marked-content sequence is contained in the content stream of the page
            identified by <see cref="T:GrapeCity.Documents.Pdf.Page"/>
            (either in the marked-content reference dictionary or in the parent structure element).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.McrContentItemLink.ContentStreamOwner">
            <summary>
            Gets or sets the object owning the content stream identified by
            the <see cref="P:GrapeCity.Documents.Pdf.Structure.McrContentItemLink.FormXObject"/> property.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.McrContentItemLink.MCID">
            <summary>
            Gets or sets the marked-content identifier of the marked-content sequence within its content stream.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink">
            <summary>
            Represents a custom PDF object as a Content Item in a PDF structure tree (OBJR PDF object).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink.#ctor(GrapeCity.Documents.Pdf.Structure.IContentItem)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/> class.
            </summary>
            <param name="contentItem">The associated <see cref="T:GrapeCity.Documents.Pdf.Structure.IContentItem"/> object.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink.SetObj(GrapeCity.Documents.Pdf.Structure.IContentItem)">
            <summary>
            Sets the <see cref="P:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink.Obj"/> property using SetSilent method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink.Obj">
            <summary>
            Gets or sets the referenced object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.IDTree">
            <summary>
            Represets the value of <b>IDTree</b> entry of document structure tree.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.MarkInfo">
            <summary>
            Represents a mark information dictionary.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.MarkInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.MarkInfo"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.MarkInfo.Marked">
            <summary>
            Gets or sets a flag indicating whether the document conforms to Tagged PDF conventions.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.MarkInfo.UserProperties">
            <summary>
            Gets or sets a flag indicating the presence of structure elements that contain user properties attributes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.MarkInfo.Suspects">
            <summary>
            Gets or sets a flag indicating the presence of tag suspects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ParentTree.Item">
            <summary>
            The base abstract class for items of structure ParentTree.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.ParentTree.Item.ContentItem">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Structure.IContentItem"/> associated with this item,
            it can be Page, AnnotationBase etc.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ParentTree.ObjrItem">
            <summary>
            The item creatd from OBJR content item <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.ParentTree.ObjrItem.StructElement">
            <summary>
            The parent <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> object used if <b>whole</b> object is a content item,
            referenced via StructParent entry in ContentObj.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ParentTree.McidItem">
            <summary>
            The item created from MCID or MCR content items, see <see cref="T:GrapeCity.Documents.Pdf.Structure.McidContentItemLink"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Structure.McrContentItemLink"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.ParentTree.McidItem.MCIDs">
            <summary>
            Associates MCID with <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ParentTree.Tree">
            <summary>
            The "image" of the <b>ParentTree</b> created from the structure tree.
            The instance of this class is created when the document is loaded,
            when document is saved new instance is created this new instance is compared
            with previous instance and if they are different the <b>ParentTree</b> entry
            is updated in the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.ParentTree.TreeInfo">
            <summary>
            The "image" of the <b>ParentTree</b> created from the structure tree.
            The instance of this class is created when the document is loaded,
            when document is saved new instance is created this new instance is compared
            with previous instance and if they are different the <b>ParentTree</b> entry
            is updated in the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.ParentTree.TreeInfo.Compare(GrapeCity.Documents.Pdf.Structure.ParentTree.TreeInfo)">
            <summary>
            Compares this object with another, returns true if equals.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.ParentTree.TreeInfo.SetStructParentToContentItems">
            <summary>
            Initializes StructParent and StructParents properties
            of the associated <see cref="T:GrapeCity.Documents.Pdf.Structure.IContentItem"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.RevisionItem">
            <summary>
            The base abstract class for <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevision"/> and <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevision"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.RevisionItem.Revision">
            <summary>
            Gets or sets the attribute's revision.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.RevisionItemCollection`1">
            <summary>
            The collection of the <see cref="T:GrapeCity.Documents.Pdf.Structure.RevisionItem"/> objects,
            base abstract class for <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrRevisionCollection"/> and
            <see cref="T:GrapeCity.Documents.Pdf.Structure.AttrClsRevisionCollection"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.RevisionItemCollection`1.Owner">
            <summary>
            Gets the owning <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.RoleMap">
            <summary>
            Represents value of <b>RoleMap</b> entry of Structure Tree.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructElementCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> objects.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructElement">
            <summary>
            Represents a PDF tag (structure element) in a document's structure tree.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> class.
            </summary>
            <param name="type">The element's type.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.AssociatedFiles">
            <summary>
            Gets the list of embedded files associated with this <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Type">
            <summary>
            Gets or sets the structure type, 
            which is a string identifying the nature 
            of the structure element and its role within the document,
            such as chapter, paragraph, or footnote.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Parent">
            <summary>
            Gets the parent <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.ID">
            <summary>
            Gets or sets the element identifier, a byte array designating this structure element.
            The value must be unique among all elements in the document’s structure hierarchy.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.DefaultPage">
            <summary>
            Gets or sets a <see cref="T:GrapeCity.Documents.Pdf.Page"/> object used as the default page
            for the content items owned by this <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.HasItems">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Items"/> collection
            contains any items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Items">
            <summary>
            Gets the collection of nested <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeItem"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.HasContentItems">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.ContentItems"/> collection
            contains any items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.ContentItems">
            <summary>
            Gets the collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink"/> objects.
            <para>
            This collection is a wrapper around the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Items"/> collection
            that iterates only over its elements of the type <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.HasChildren">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Children"/> collection
            contains any items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Children">
            <summary>
            Gets the collection of child <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> object.
            <para>
            This collection is a wrapper around the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Items"/> collection
            that iterates only over its elements of the type <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.HasAttrs">
            <summary>
            Gets a value indicating whether <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.Attrs"/> collection
            contains any items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Attrs">
            <summary>
            Gets the collection of attributes associated with this structure element.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.HasAttrClasses">
            <summary>
            Gets a value indicating whether the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructElement.AttrClasses"/> collection
            contains any items.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.AttrClasses">
            <summary>
            Gets the collection of attribute classes associated with this element.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Revision">
            <summary>
            Gets or sets the current revision number of this structure element.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.Title">
            <summary>
            Gets or sets the title of the structure element, 
            which is a text string representing it in human-readable form.
            The title should characterize the specific structure element, such as Chapter 1,
            rather than merely a generic element type, such as Chapter.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.AlternateDescription">
            <summary>
            Gets or sets the alternate description of the structure element and its children in human-readable form,
            which is useful when extracting a document’s content in support of accessibility to users with
            disabilities or for other purposes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.ExpandedAbbreviation">
            <summary>
            Gets or sets the expanded form of an abbreviation.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructElement.ActualText">
            <summary>
            Gets or sets a text that is an exact replacement for the structure element and its children.
            This replacement text (which should apply to as small a piece of content as possible)
            is useful when extracting a document’s content in support of accessibility
            to users with disabilities or for other purposes.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollection">
            <summary>
            Represents a collection of <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeItem"/> objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollection.ClearItems">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollection.RemoveItem(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollection.InsertItem(System.Int32,GrapeCity.Documents.Pdf.Structure.StructTreeItem)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollection.SetItem(System.Int32,GrapeCity.Documents.Pdf.Structure.StructTreeItem)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollection.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.IStructElement"/> owning this collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1.Add(`0)">
            <summary>
            Adds an object to the end of the collection.
            </summary>
            <param name="item">The object to be added to the end of the collection.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1.Contains(`0)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from collection. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of item within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollectionWrapper`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the collection.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructTreeItem">
            <summary>
            Abstract base class representing an item in a <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/>.
            Derived classes are <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> and <see cref="T:GrapeCity.Documents.Pdf.Structure.ContentItemLink"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeItem.Owner">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeItemCollection"/> containing this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeItem.StructTreeRoot">
            <summary>
            Gets the root <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeItem.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> owning this object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes">
            <summary>
            The standard structure types.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes.Artifact">
            <summary>
            Artifact.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes.GroupingElements">
            <summary>
            Grouping elements are used solely to group other structure elements;
            they are not directly associated with content items.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes.GroupingElements.Document">
            <summary>
            Document. A complete document.
            This is the root element of any structure tree containing multiple parts or multiple articles.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes.GroupingElements.Part">
            <summary>
            Part. A large-scale division of a document.
            This type of element is appropriate for grouping articles or sections.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StandardStructureTypes.GroupingElements.Art">
            <summary>
            A relatively self-contained body of text constituting a single narrative or exposition.
            Articles should be disjoint; that is, they should not contain other articles as constituent elements.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.IStructElement">
            <summary>
            Common interface for <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/> and <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot">
            <summary>
            Represents the logical structure of a document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Structure.StructTreeRoot._unresolvedObjrLinks">
            <summary>
            Used while loading and contains <see cref="T:GrapeCity.Documents.Pdf.Structure.ObjrContentItemLink"/> objects
            which reference an objects not loaded during document parsing.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.Doc">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object that owns this object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.RoleMap">
            <summary>
            Gets the dictionary that maps the names of structure types used in a document to their approximate equivalents in the set of standard structure types.
            See PDF specification for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.Items">
            <summary>
            Gets the collection of nested <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeItem"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.Children">
            <summary>
            Gets the collection of nested <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/> objects.
            <para>
            This collection is a wrapper around the <see cref="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.Items"/> collection
            that iterates only over its elements of the type <see cref="T:GrapeCity.Documents.Pdf.Structure.StructElement"/>.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ClassMap">
            <summary>
            Gets the dictionary that maps name objects designating attribute classes to the corresponding
            attribute objects or arrays of attribute objects.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.Clear">
            <summary>
            Clears the collections of the <see cref="T:GrapeCity.Documents.Pdf.Structure.StructTreeRoot"/>:
            <see cref="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.Items"/>, <see cref="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.ClassMap"/>, <see cref="P:GrapeCity.Documents.Pdf.Structure.StructTreeRoot.RoleMap"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.HitTestInfo">
            <summary>
            Represents hit test info in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.HitTestInfo.Pos">
            <summary>
            The logical position in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.HitTestInfo.Bounds">
            <summary>
            The bounds of <see cref="F:GrapeCity.Documents.Pdf.TextMap.HitTestInfo.Pos"/> on the page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.HitTestInfo.IsInside">
            <summary>
            Indicates whether the hit test location is inside the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/>.
            If <b>false</b>, the position nearest to the text's edge is returned.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextAttrs">
            <summary>
            Defines text formatting attributes.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.Font">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Text.Font"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.FontSize">
            <summary>
            Gets the font size.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.RenderingMode">
            <summary>
            Gets the PDF text rendering mode.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.StrokeColor">
            <summary>
            Gets the stroke color used if <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.RenderingMode"/> is
            <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStroke"/>, <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStrokeClip"/>
            <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.Stroke"/> or <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.StrokeClip"/>.
            <para>
            Note that this can return null if the stroke method cannot be converted to a single color
            (e.g. if the stroke is specified as a pattern).
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.NonstrokeColor">
            <summary>
            Gets the non-stroke (fill) color used if <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextAttrs.RenderingMode"/> is
            <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.Fill"/>, <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillClip"/>
            <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStroke"/> or <see cref="F:GrapeCity.Documents.Pdf.TextRenderingMode.FillStrokeClip"/>.
            <para>
            Note that this can return null if the stroke method cannot be converted to a single color
            (e.g. if the stroke is specified as a pattern).
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextChar">
            <summary>
            Represents a single character in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/>.
            <para>
            Note that an <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> can be represented by several UTF-16 character codes,
            e.g. some Unicode ranges use two UTF-16 codes to represent a single character.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextChar.Index">
            <summary>
            Gets the start index of this <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> in the text of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextChar.Length">
            <summary>
            Gets the length of this <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> (the count of UTF-16 characters that represent it).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextLine">
            <summary>
            Represents a single continuous line of text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextLine.Paragraph">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph"/> object that owns this line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextLine.RunFragments">
            <summary>
            Gets the list of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> objects.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextLine.Text">
            <summary>
            Gets the line text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextLine.GetCoords(System.Int32,System.Int32)">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The starting index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextLine.GetCoords">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of this line.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextLine.GetPoints(System.Int32,System.Int32)">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The starting index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>The array of points specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextLine.GetPoints">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of this line.
            </summary>
            <returns>The array of points specifying the coordinates on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextLine.GetText(System.Int32,System.Int32)">
            <summary>
            Returns the text of a range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects in this line.
            </summary>
            <param name="startIndex">The starting index of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> object.</param>
            <param name="count">The count of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</param>
            <returns>The text of specified range of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> objects.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.DeleteTextMode">
            <summary>
            Specifies how deleting text affects the surrounding content.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.DeleteTextMode.Standard">
            <summary>
            Any text following the deleted text will be shifted
            into the space previously occupied by the deleted text.
            In some cases (depending on the specifics of the current PDF)
            this may yield unexpected results.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.DeleteTextMode.PreserveSpace">
            <summary>
            The space that was occupied by the deleted text will become blank.
            Other page content will not be affected.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.FindTextCallback">
            <summary>
            Defines the callback method used in text search (see <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Pdf.TextMap.FindTextCallback)"/>).
            </summary>
            <param name="fp">The position of the found instance.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextMap">
            <summary>
            Represents the text map of a page or of a portion of a page.
            Provides methods for text searching, hit testing etc.
            <para>
            The pixel values used by the text map's methods and properties are determined
            by the X and Y resolution passed to the <see cref="M:GrapeCity.Documents.Pdf.Page.GetTextMap(System.Single,System.Single,System.Boolean)"/>
            method to create the text map.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextMap.Invalid">
            <summary>
            Indicates whether this <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> is valid and can be used.
            <para>
            The <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> becomes invalid after editing operations
            like <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.DeleteText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,GrapeCity.Documents.Pdf.TextMap.DeleteTextMode)"/>,
            <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.ReplaceText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,System.String,GrapeCity.Documents.Text.Font,System.Nullable{System.Single})"/> etc.
            </para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextMap.Page">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> object producing this <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextMap.Paragraphs">
            <summary>
            Gets the list of text paragraphs.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetCoords(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Gets the coordinates of a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> on the page.
            </summary>
            <param name="tlf">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.</param>
            <returns>A <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> containing the text coordinates.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetPoints(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Gets the array of points defining a polygon with coordinates of a 
            <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> on the page.
            </summary>
            <param name="tlf">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.</param>
            <returns>An array of points defining the polygon of the fragment on a page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetText(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Gets the text of a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.
            </summary>
            <param name="br">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.</param>
            <returns>The text of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetText">
            <summary>
            Gets the whole text represented by this map.
            </summary>
            <returns>The map text.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.HitTest(System.Single,System.Single)">
            <summary>
            Performs hit testing on the map.
            <para>
            This method accepts a pixel location relative to the top left corner of the page,
            and provides info about the text in that location.
            </para>
            <para>
            The pixel resolution is the resolution specified when building this text map
            (see <see cref="M:GrapeCity.Documents.Pdf.Page.GetTextMap(System.Single,System.Single,System.Boolean)"/> and other GetTextMap() overloads).
            </para>
            </summary>
            <param name="x">The X pixel location relative to the top left corner of the page.</param>
            <param name="y">The Y pixel location relative to the top left corner of the page.</param>
            <returns><see cref="T:GrapeCity.Documents.Pdf.TextMap.HitTestInfo"/> containing the hit test result.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetWord(GrapeCity.Documents.Pdf.TextMap.MapPos,System.Int32@,System.Int32@,GrapeCity.Documents.Common.Quadrilateral@)">
            <summary>
            Gets the info about a word at a specified position in a line.
            </summary>
            <param name="pos">A <see cref="T:GrapeCity.Documents.Pdf.TextMap.MapPos"/> specifying a position in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.</param>
            <param name="start">OUT: the start index of the word in the line.</param>
            <param name="length">OUT: the length of the word in characters.</param>
            <param name="bounds">OUT: the geometric bounds of the word.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.FindText(GrapeCity.Documents.Pdf.FindTextParams,GrapeCity.Documents.Pdf.TextMap.FindTextCallback)">
            <summary>
            Performs a text search within this text map.
            The <paramref name="callback"/> is called for each found instance.
            </summary>
            <param name="tp">A <see cref="T:GrapeCity.Documents.Pdf.FindTextParams"/> specifying the search parameters.</param>
            <param name="callback">The callback method.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetFragment(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> that represents the text
            within a specified range (from <paramref name="startPos"/> to <paramref name="endPos"/>).
            </summary>
            <param name="startPos">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.MapPos"/> specifying the start of the range.</param>
            <param name="endPos">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.MapPos"/> specifying the end of the range.</param>
            <param name="fragment">OUT: a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> representing the text in the range.</param>
            <param name="text">OUT: the fragment's text.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetFragmentToPos(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> that represents the text
            from the start of the page to <paramref name="pos"/>.
            </summary>
            <param name="pos">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.MapPos"/> specifying the end of the range.</param>
            <param name="fragment">OUT: a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> representing the text in the range.</param>
            <param name="text">OUT: the fragment's text.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetFragmentFromPos(GrapeCity.Documents.Pdf.TextMap.MapPos,GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> that represents the text
            from <paramref name="pos"/> to the end of the page.
            </summary>
            <param name="pos">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.MapPos"/> specifying the start of the range.</param>
            <param name="fragment">OUT: a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> representing the text in the range.</param>
            <param name="text">OUT: the fragment's text.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.GetFragment(GrapeCity.Documents.Pdf.TextMap.TextMapFragment@,System.String@)">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> that represents the text of the whole page.
            </summary>
            <param name="fragment">OUT: a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> representing the text on the page.</param>
            <param name="text">OUT: the fragment's text.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.DeleteText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,GrapeCity.Documents.Pdf.TextMap.DeleteTextMode)">
            <summary>
            Deletes a specified text fragment.
            </summary>
            <param name="fragment">The fragment to delete.</param>
            <param name="mode">The text delete mode.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMap.ReplaceText(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,System.String,GrapeCity.Documents.Text.Font,System.Nullable{System.Single})">
            <summary>
            Replaces a specified text fragment with another text.
            </summary>
            <param name="fragment">The fragment to replace.</param>
            <param name="text">The replacement text.</param>
            <param name="font">The font for the replacement text. If <see langword="null"/>, the current font will be used.</param>
            <param name="fontSize">The font size for the replacement text. If <see langword="null"/>, the current font size will be used.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextMapExt">
            <summary>
            Provides extension methods for the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> interface.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMapExt.GetFragmentFromRect(GrapeCity.Documents.Pdf.TextMap.ITextMap,System.Drawing.RectangleF)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> containing all characters inside the specified rectangle,
            or <see langword="null"/> if no fragment could be found.
            A character is included if 50% or more of its area is inside the quadrilateral.
            </summary>
            <param name="tm">The current <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.</param>
            <param name="bounds">The target bounds.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> containing all characters inside <paramref name="bounds"/>, or <see langword="null"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMapExt.GetFragmentFromQuadrilateral(GrapeCity.Documents.Pdf.TextMap.ITextMap,GrapeCity.Documents.Common.Quadrilateral)">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> containing all characters inside the specified quadrilateral,
            or <see langword="null"/> if no fragment could be found.
            A character is included if 50% or more of its area is inside the quadrilateral.
            </summary>
            <param name="tm">The current <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.</param>
            <param name="bounds">The target bounds.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> containing all characters inside <paramref name="bounds"/>, or <see langword="null"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMapExt.GetLines(GrapeCity.Documents.Pdf.TextMap.ITextMap,GrapeCity.Documents.Pdf.TextMap.TextMapFragment)">
            <summary>
            Gets the lines of text in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/>.
            </summary>
            <param name="tm">The current <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.</param>
            <param name="fragment">The target fragment.</param>
            <returns>The list of all lines belonging to the fragment..</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextMapExt.GetText(GrapeCity.Documents.Pdf.TextMap.ITextMap,GrapeCity.Documents.Pdf.TextMap.TextMapFragment)">
            <summary>
            Gets the text of a <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/>.
            </summary>
            <param name="tm">The current <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.</param>
            <param name="fragment">The target fragment.</param>
            <returns>The text of the fragment.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph">
            <summary>
            Represents a paragraph of text.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.TextMap">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/> containing this paragraph.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Page">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Page"/> containing this paragraph.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs">
            <summary>
            Gets the list of text runs that comprise this paragraph.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.GetText">
            <summary>
            Returns the paragraph text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.GetCoords">
            <summary>
            Returns a quadrilateral that specifies the bounds
            of this paragraph (relative to the top left corner of the page).
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> that specifies the bounds.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.GetPoints">
            <summary>
            Returns the list of point arrays that specify the bounds
            of text fragments in this paragraph
            (relative to the top left corner of the page).
            </summary>
            <returns>The list of point arrays that specify the bounds.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.GetTextRuns(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Finds the first and last <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRun"/> objects in the <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs"/> collection of this paragraph
            that contain a specified fragment in this paragraph's whole text (as returned by <see cref="M:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.GetText"/>).
            The fragment is specified by the starting index of its first character in the paragraph text, 
            and the total number of characters in the fragment.
            </summary>
            <param name="startIndex">The zero-based index of the fragment's starting character in this paragraph's text.</param>
            <param name="length">The total number of characters in the fragment.</param>
            <param name="firstRunIndex">OUT: The index of the run in <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs"/> that contains the beginning of the specified text fragment.</param>
            <param name="indexInFirstRun">OUT: The index of the text fragment's first character in the run at <paramref name="firstRunIndex"/> position in <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs"/>.</param>
            <param name="lastRunIndex">OUT: The index of the run in <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs"/> that contains the end of the specified text fragment.</param>
            <param name="indexInLastRun">OUT: The index of the text fragment's last character in the run at <paramref name="lastRunIndex"/> position in <see cref="P:GrapeCity.Documents.Pdf.TextMap.ITextParagraph.Runs"/>.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextRun">
            <summary>
            Represents a portion of a text paragraph with the same formatting,
            possibly spanning several lines.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextRun.Paragraph">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextParagraph"/> that contains this run.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextRun.Attrs">
            <summary>
            Gets the formatting attributes.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextRun.GetText">
            <summary>
            Returns the text of this run.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment">
            <summary>
            Represents a fragment of a text run that resides on a single text line.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment.Line">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/> that contains this run fragment.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment.Run">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRun"/> that contains this run fragment.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment.GetText">
            <summary>
            Returns the text of this run fragment.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragmentExt">
            <summary>
            Provides extension methods for the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> interface.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextRunFragmentExt.GetPoints(GrapeCity.Documents.Pdf.TextMap.ITextRunFragment)">
            <summary>
            Gets the geometric coordinates (relative to the top left corner of the page)
            of this <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> object.
            </summary>
            <param name="runFragment">The current <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> object.</param>
            <returns>The array of points specifying the coordinates of this run fragment on the page.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.ITextRunFragmentExt.GetBounds(GrapeCity.Documents.Pdf.TextMap.ITextRunFragment)">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Common.Quadrilateral"/> representing the four vertices's
            bounding this <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> object.
            The coordinates are relative to the top left corner of the page.
            </summary>
            <param name="runFragment">The current <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextRunFragment"/> object.</param>
            <returns>Quadrilateral representing the bounds of this text run fragment on the page.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.MapPos">
            <summary>
            Represents a logical position in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.MapPos.LineIndex">
            <summary>
            The index of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/> in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.MapPos.CharIndex">
            <summary>
            The index of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.MapPos.IsTrailing">
            <summary>
            Indicates whether the hit test location is at the leading or the trailing
            side of the character.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TextMap.MapPos.PosInLine">
            <summary>
            Gets the position within the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/> depending on <see cref="F:GrapeCity.Documents.Pdf.TextMap.MapPos.IsTrailing"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment">
            <summary>
            Represents a range of characters in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.LineIndex">
            <summary>
            The index of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/> in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.StartIndex">
            <summary>
            The index of the first <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/> in the <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextLine"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.Length">
            <summary>
            The number of <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextChar"/>s in this fragment.
            A value of <b>-1</b> indicates that this fragment includes all characters
            from <see cref="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.StartIndex"/> to the end of the line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> class.
            </summary>
            <param name="lineIndex">The value of <see cref="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.LineIndex"/>.</param>
            <param name="startIndex">The value of <see cref="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.StartIndex"/>.</param>
            <param name="length">The value of <see cref="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.Length"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.Equals(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.op_Equality(GrapeCity.Documents.Pdf.TextMap.TextLineFragment,GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Tests whether two specified <see cref='T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment'/> objects are equivalent.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.op_Inequality(GrapeCity.Documents.Pdf.TextMap.TextLineFragment,GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Tests whether two specified <see cref='T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment'/> objects are NOT equivalent.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment">
            <summary>
            Represents a fragment of text in a <see cref="T:GrapeCity.Documents.Pdf.TextMap.ITextMap"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextMapFragment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextMapFragment.#ctor(GrapeCity.Documents.Pdf.TextMap.TextLineFragment)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/>
            </summary>
            <param name="tlf">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> to add to <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextMapFragment.#ctor(GrapeCity.Documents.Pdf.TextMap.TextLineFragment[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/>
            </summary>
            <param name="tlfs">The array of  <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> objects to add to <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextMapFragment.Add(GrapeCity.Documents.Pdf.TextMap.TextMapFragment)">
            <summary>
            Adds another <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> to this.
            </summary>
            <param name="other">The <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> to add.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextMapFragment.Normalize(GrapeCity.Documents.Pdf.TextMap.ITextMap)">
            <summary>
            Creates a <b>normalized</b> version of this <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/>,
            in which:
            <list type="bullet">
            <item>All intersecting <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> objects are combined.</item>
            <item>All <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> objects are sorted first by <see cref="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.LineIndex"/> and then by <see cref="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.StartIndex"/>.</item>
            <item>All <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextLineFragment"/> objects have valid <see cref="F:GrapeCity.Documents.Pdf.TextMap.TextLineFragment.Length"/> which is not -1 and does not overlap line bounds.</item>
            </list>
            </summary>
            <param name="textMap">The text map to normalize.</param>
            <returns>The normalized <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/>.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TextMap.TextMapFragment.AreSame(GrapeCity.Documents.Pdf.TextMap.TextMapFragment,GrapeCity.Documents.Pdf.TextMap.TextMapFragment)">
            <summary>
            Checks whether two <see cref="T:GrapeCity.Documents.Pdf.TextMap.TextMapFragment"/> objects are the same.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont">
            <summary>
            Base abstract class representing CID-keyed font in PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CIDFont.RemoveEmbeddedData(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Text.FontType0)">
            <summary>
            Removes the embedded font data.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDFont.BaseFont">
            <summary>
            Gets the PostScript name of the CIDFont.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDFont.Descriptor">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object describing the CIDFont’s default metrics.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDFont.IsEmbedded">
            <summary>
            Gets a value indicating whether the font is embedded.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CIDFont.GetNativeFont">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Text.Font"/> object created on the base of embedded data.
            Note! Method returns null if font is NOT embedded.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Text.Font"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont.DefaultGlyphVerticalMetrics">
            <summary>
            Defines default vertical glyph metrics.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont.GlyphVerticalMetrics">
            <summary>
            Defines vertical glyph metrics.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont.WidthList">
            <summary>
            Collection of horizontal glyph metrics.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont.Width2List">
            <summary>
            Collection of vertical glyph metrics.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFont.Parser">
            <summary>
            Parses the content of PDF dictionary of owner <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFont"/>
            and provides more convient and fast access to these properties,
            if content of this class is changing then content of PDF dictionary
            will be updated back when document is saved.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.Parser.CIDSystemInfo">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.CIDSystemInfo"/> object defines the character collection of the CIDFont.
            The <b>CIDSystemInfo</b> entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.Parser.DW">
            <summary>
            The default width for glyphs in the CIDFont, default value is 1000.
            The <b>DW</b> entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.Parser.W">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFont.WidthList"/> list containing width for individual glyphs.
            The <b>W</b> entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.Parser.DW2">
            <summary>
            The default vertical metrics.
            The <b>DW2</b> entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDFont.Parser.W2">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFont.Width2List"/> list containing vertical metrics for individual glyphs.
            The <b>W2</b> entry
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFontType0">
            <summary>
            Represents a CID-keyed font containing glyph descriptions based on the Adobe Type 1 font format.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFontType2">
            <summary>
            Represents a CID-keyed font containing glyph descriptions based on the TrueType font format
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDFontType2.CIDToGIDMap">
            <summary>
            Gets or sets a table defines mapping from CID (PDF character code) to glyph index,
            if this value is null then identity mapping is used.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDFontUnknown">
            <summary>
            Represents a CID-keyed font of unknown type.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDSet">
            <summary>
            The CID font CIDSet, represents "CIDSet" entry in a FontDescriptor.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CIDSystemInfo">
            <summary>
            Defines character collection assumed by the CIDFont.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDSystemInfo.AdobeIdentity">
            <summary>
            Defines Adobe-Identity collection.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDSystemInfo.AdobeUCS">
            <summary>
            Defines Adobe-UCS collection.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDSystemInfo.Registry">
            <summary>
            The issuer of the character collection—for example, Adobe.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDSystemInfo.Ordering">
            <summary>
            The character collection within the specified registry for example, Japan1.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CIDSystemInfo.Supplement">
            <summary>
            The supplement number of the character collection.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDToGIDMapIdentity.PdfNameBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDToGIDMapIdentity.PdfObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CIDToGIDMapStream.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMap">
            <summary>
            The base abstract class for classes representing CMaps.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMap.GetTable">
            <summary>
            Returns the <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> object created from this 
            <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMap.ReadPdfCode(GrapeCity.Documents.Pdf.Spec.PdfString,System.Int32@,System.UInt32@)">
            <summary>
            Used to enumerate PDF string, sequentially reads PDF chars from PDF string
            using information specified in begincodespacerange / endcodespacerange sections.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMap.TryGetUnicode(System.UInt32,System.String@)">
            <summary>
            Returns UTF-16 string for specified code obtained from PDF string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMap.TryGetCID(System.UInt32,System.UInt32@)">
            <summary>
            Converts PDF code to CID.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMap.Vertical">
            <summary>
            Gets a value indicating whether the <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/> defines the vertical font.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMap.PdfNameBased">
            <summary>
            Represents a CMap table defined by the direct PDF name (<see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMap.PdfNameBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMap.PdfNameObjectBased">
            <summary>
            Represents a CMap table defined by the indirect PDF name (<see cref="T:GrapeCity.Documents.Pdf.Spec.PdfNameObject"/>).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMap.PdfNameObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMap.PdfStreamBased">
            <summary>
            Represents a CMap table defined by the PDF stream.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMap.PdfStreamBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMap.PdfObjectBased">
            <summary>
            Represents a CMap table defined by an arbitary PDF object (<see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>).
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMap.PdfObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMapParser.Doc">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable">
            <summary>
            Represents a CMap table.
            <para>
            A CMap specifies the mapping from character codes to character selectors,
            it is used to extract Unicode text from PDF documents.
            In most cases CMaps are fully embedded into the PDF document.
            But in rare cases a CMap in a PDF is specified by a PDF name object,
            where this name identifies a predefined CMap that should be known to the PDF processor.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_CMapName">
            <summary>
            The CMap name.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_Name">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_CMapName"/> converted to <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_CIDSystemInfo">
            <summary>
            The CIDSystemInfo dictionary.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_Registry">
            <summary>
            The "Registry" entry of <see cref="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_CIDSystemInfo"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_Ordering">
            <summary>
            The "Ordering" entry of <see cref="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_CIDSystemInfo"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_CMapType">
            <summary>
            The CMap type, value of CMapType entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_WMode">
            <summary>
            The value of WMode entry.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.mi_CodeSpaceRanges">
            <summary>
            Compiled CMap info.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.Compare(GrapeCity.Documents.Pdf.Text.CMap.CMapTable)">
            <summary>
            Compares this <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> with other, returns
            true if they have same content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.ReadPdfCode(GrapeCity.Documents.Pdf.Spec.PdfString,System.Int32@,System.UInt32@)">
            <summary>
            Used to enumerate PDF string, sequentially reads PDF chars from PDF string
            using information specified in begincodespacerange / endcodespacerange sections.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.TryGetUnicode(System.UInt32,System.String@)">
            <summary>
            Returns UTF-16 string for specified code obtained from PDF string.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.TryGetCID(System.UInt32,System.UInt32@)">
            <summary>
            Converts PDF code to CID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.GetPredefinedCMap(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Returns the predefined cmap table by its name,
            returns null if cmap table is unknown.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.LoadBinary(System.IO.Stream,System.Boolean)">
            <summary>
            Reads <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> from the binary format.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.Compile(System.IO.Stream,System.IO.Stream,System.Boolean)">
            <summary>
            Converts the text CMap file into the binary format.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.Name">
            <summary>
            Gets or sets the CMap name.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.IsPredefined">
            <summary>
            Gets a value indicating whether the CMap is predefined and is specified by name in a PDF file.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.Vertical">
            <summary>
            Gets a value indicating whether the <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/>
            defines the vertical font.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.Save(System.IO.Stream)">
            <summary>
            Saves the <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> to the stream.
            </summary>
            <param name="stream">The output stream.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.Load(System.IO.Stream)">
            <summary>
            Loads a <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> from a specified stream.
            <para>See the PDF spec for the description of the CMap format.</para>
            <para>This method will throw an exception if the stream content has unknown or unsupported format.</para>
            </summary>
            <param name="stream">The stream containing the CMap definition.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.LoadCompressed(System.IO.Stream)">
            <summary>
            Loads a <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> from a specified stream, the content
            of the stream will be decompressed using <see cref="T:System.IO.Compression.DeflateStream"/>.
            <para>See the PDF spec for the description of the CMap format.</para>
            <para>This method will throw an exception if the stream content has unknown or unsupported format.</para>
            </summary>
            <param name="stream">The stream containing the CMap definition.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.Load(System.String,System.Boolean)">
            <summary>
            Loads a <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> from a specified file.
            <para>See the PDF spec for the description of the CMap format.</para>
            If <paramref name="compressed"/> is true then the content of the file will be
            decompressed using <see cref="T:System.IO.Compression.DeflateStream"/>.
            <para>This method will throw an exception if the file content has unknown or unsupported format.</para>
            </summary>
            <param name="fileName">The file containing the CMap definition.</param>
            <param name="compressed">Indicates whether the stream content is compressed and <see cref="T:System.IO.Compression.DeflateStream"/> should be used to decompress.</param>
            <returns>The created <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> object.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.BFValue">
            <summary>
            Defines the value of char-mapping table.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.Range.Start">
            <summary>
            The start of the range.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.Range.Count">
            <summary>
            The length of the range.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.CodeSpaceRange">
            <summary>
            Defines the range of the codes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.CodeSpaceRange.CharMapping">
            <summary>
            The mapping defined via beginbfchar/endbfchar and beginbfrange/endbfrange sections.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.CodeSpaceRange.CidMapping">
            <summary>
            The mapping defined via begincidchar/endcidchar and begincidrange/endcidrange sections.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.CMap.CMapTable.CodeSpaceRange.NotDefMapping">
            <summary>
            The mapping defined via beginnotdefchar/endnotdefchar and beginnotdefrange/endnotdefrange sections.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.CMap.PdfCMapStreamWriter">
            <summary>
            PDF writer used to build PDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.PdfCMapStreamWriter.Write(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.CMap.PdfCMapStreamWriter.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramBase">
            <summary>
            Base class for classes defining PDF embedded font program, see PDF1.7 (5.8 Embedded Font Programs) for details.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramBase.Type">
            <summary>
            Gets or sets the type of the embedded font program,
            unfortunately the font type can depends on external context, for example:
            TrueType font program should be specified via FontFile2 entry of FontDescriptor,
            Type1 -> FontFile
            all other -> FontFile3
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram">
            <summary>
            Defines PDF embedded font program loaded from PDF content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.#ctor(GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.Subtype">
            <summary>
            Gets or sets the value of <b>Subtype</b> entry of underlying PDF dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.Length1">
            <summary>
            (Required for Type 1 and TrueType fonts)
            The length in bytes of the clear-text portion of the Type 1 font program (see below),
            or the entire TrueType font program, after it has been decoded using the filters specified by the stream’s
            Filter entry, if any.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.Length2">
            <summary>
            (Required for Type 1 fonts)
            The length in bytes of the encrypted portion of the Type 1 font program (see below)
            after it has been decoded using the filters specified by the stream’s Filter entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgram.Length3">
            <summary>
            (Required for Type 1 fonts)
            The length in bytes of the fixed-content portion of the Type 1 font program (see below)
            after it has been decoded using the filters specified by the stream’s Filter entry.
            If Length3 is 0, it indicates that the 512 zeros and cleartomark have not been included in
            the FontFile font program and must be added.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.AdobeStandardEncoding">
            <summary>
            Adobe standard Latin-text encoding.
            This is the built-in encoding defined in Type 1 Latin-text font programs
            (but generally not in TrueType font programs).
            PDF does not have a predefined encoding named StandardEncoding.
            However, it is useful to describe this encoding, since a font’s built-in encoding can be
            used as the base encoding from which differences are specified in an encoding dictionary.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Encodings.AdobeStandardEncoding.PdfNameBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Encodings.AdobeStandardEncoding.PdfObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.CustomEncoding">
            <summary>
            Custom encoding, see details in PDF 1.7 427 page.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Encodings.CustomEncoding.AddDifference(System.Byte,System.String)">
            <summary>
            Note! The method is intended to be used from <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.StandardFontEncoder"/>
            only.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Encodings.CustomEncoding.PdfObject">
            <inheritdoc/>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.GlyphNameToUnicode">
            <summary>
            Returns UTF-16 character code by glyph's name, based on "Adobe Glyph List", 
            glyphlist.txt distributed by Adobe.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.WinAnsiTable">
            <summary>
            WinAnsi encoding table.
            <para>
            Windows Code Page 1252, often called the “Windows ANSI” encoding.
            This is the standard Windows encoding for Latin text in Western writing systems.
            PDF has a predefined encoding named WinAnsiEncoding that can be used with both
            Type 1 and TrueType fonts.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.AdobeStandardTable">
            <summary>
            AdobeStandard encoding table.
            <para>
            Adobe standard Latin-text encoding.
            This is the built-in encoding defined in Type 1 Latin-text font programs
            (but generally not in TrueType font programs).
            PDF does not have a predefined encoding named StandardEncoding.
            However, it is useful to describe this encoding, since a font’s built-in encoding can be
            used as the base encoding from which differences are specified in an encoding dictionary.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.DocTable">
            <summary>
            Doc encoding table.
            <para>
            Encoding for text strings in a PDF document outside the document’s content streams.
            This is one of two encodings (the other being Unicode) that can be used to represent text strings;
            see Section , “Text String Type.” PDF does not have a predefined encoding named PDFDocEncoding;
            it is not customary to use this encoding to show text from fonts.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.MacRomanTable">
            <summary>
            MacRoman encoding table.
            <para>
            Mac OS standard encoding for Latin text in Western writing systems.
            PDF has a predefined encoding named MacRomanEncodingthat can be used with both
            Type 1 and TrueType fonts.
            </para>
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.ZapfDingbatsTable">
            <summary>
            The encoding from standard ZapfDingbats font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.CodeToGlyphName">
            <summary>
            Returns the glyph's name by character code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.GlyphNameToCode">
            <summary>
            Returns the character's code by glyph name.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.CodeToUnicode">
            <summary>
            Returns the unicode by character's code.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.TryGetUnicode(System.UInt32,System.String@)">
            <summary>
            Converts PDF code to UTF-16 string, can return false if 
            specified string can not be converted using this encoding.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Encodings.EncodingTable.TryGetPdfCode(System.String,System.UInt32@,System.Int32@)">
            <summary>
            Converts a Unicode value to PDF code.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.MacRomanEncoding">
            <summary>
            Mac OS standard encoding for Latin text in Western writing systems.
            PDF has a predefined encoding named MacRomanEncodingthat can be used with both
            Type 1 and TrueType fonts.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Encodings.MacRomanEncoding.PdfNameBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Encodings.MacRomanEncoding.PdfObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.UnknownEncoding">
            <summary>
            The unknown encoding, returns null as EncodingTable.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Encodings.UnknownEncoding.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Encodings.WinAnsiEncoding">
            <summary>
            Windows Code Page 1252, often called the “Windows ANSI” encoding.
            This is the standard Windows encoding for Latin text in Western writing systems.
            PDF has a predefined encoding named WinAnsiEncoding that can be used with both
            Type 1 and TrueType fonts.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Encodings.WinAnsiEncoding.PdfNameBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Encodings.WinAnsiEncoding.PdfObjectBased.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontDef">
            <summary>
            Defines PDF font and size this combination of font's properties
            occurs very often in PDF specification.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.ISystemFontProvider">
            <summary>
            Allows getting a system font that can be used instead of a font which is not embedded into the PDF document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Font">
            <summary>
            The base abstract class representing a font in a PDF document.
            </summary>
            <summary>
            The base abstract class representing a font in a PDF document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.SetCharWidth(System.UInt32,System.Single)">
            <summary>
            Tries to set the width of a char of PDF font, returns true if it is was done.
            The width should be specified in the PDF text coordinate space (0..1000).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TryGetCharWidth(System.UInt32,System.Single@)">
            <summary>
            Tries to get width of a char of PDF font, in some cases the width can be NOT specified in a font,
            in this case the method returns false.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.ReadChar(GrapeCity.Documents.Pdf.Spec.PdfString,System.Int32@,System.UInt32@,System.Int32@)">
            <summary>
            Reads a PDF code from a PDF string at specified position and advances the position.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.ReadChar(GrapeCity.Documents.Pdf.Spec.PdfString,System.Int32@,GrapeCity.Documents.Pdf.Text.Font.CharInfo@)">
            <summary>
            Reads a PDF code from a PDF string at specified position,
            advances position and returns <see cref="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo"/> corresponding the PDF code.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.GetFallbackFont(GrapeCity.Documents.Pdf.GcPdfDocument,System.Boolean)">
            <summary>
            Selects best <see cref="T:GrapeCity.Documents.Text.Font"/> which can be used to render text of this PDF font.
            
            Unfortunately PDF spec does not contain exact algorithm which should be used
            to determine a font to use when no embedded data. 
            So, this method is a compilation of various "tricks" and "magic" :(.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.ToUnicode">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMap"/> defines ToUnicode mapping.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.propBaseFont">
            <summary>
            Gets the value of <b>BaseFont</b> entry.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.Vertical">
            <summary>
            Indicates whether font is used for vertical drawing.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.EmbeddedFontProgram">
            <summary>
            Gets  or sets the <see cref="T:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramBase"/> object containing font's embedded data,
            can be null if font is not embedded.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.BaseFont">
            <summary>
            Gets or sets the PostScript name of the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.IsEmbedded">
            <summary>
            Gets a value indicating whether the font is embedded.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.GetEmbeddedData">
            <summary>
            Returns the stream containing the embedded font data, returns null if the font is not embedded,
            the stream should be disposed after usage.
            </summary>
            <returns>The stream with font data or null if the font is not embedded.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.RemoveEmbeddedData(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            Removes the embedded font data.
            <para>Please note that a PDF may display incorrectly after removing an embedded font's data. Use with caution.</para>
            </summary>
            <param name="doc">The document that owns the font.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.GetFontAttributes(System.String@,System.Nullable{GrapeCity.Documents.Pdf.Text.FontWeight}@,System.Nullable{GrapeCity.Documents.Pdf.Text.FontStretch}@,System.Nullable{System.Boolean}@)">
            <summary>
            Extracts the attributes of the current font.
            If a specific attribute cannot be determined,
            the corresponding output value is set to null.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.GetFontDescriptor">
            <summary>
            Gets an <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object that describes the font.
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.CreateNativeFont">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Text.Font"/> object created from the embedded font data.
            <para>
            Note that this method will return <b>null</b> if the font is not embedded
            or does not support this operation (e.g. Type3 fonts).
            </para>
            </summary>
            <returns>The <see cref="T:GrapeCity.Documents.Text.Font"/> object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TryGetUnicode(System.UInt32,System.String@)">
            <summary>
            Converts a character's PDF code to its Unicode value.
            <para>
            Note that this method can fail if the font does not contain the necessary info for the conversion.
            </para>
            <para>
            Note also that this method can be slow as it uses large font tables like /Encoding, /ToUnicode etc.,
            so the returned results better be cached by the caller.
            </para>
            </summary>
            <param name="pdfCode">The character PDF code.</param>
            <param name="unicode">OUT: The character Unicode.</param>
            <returns>True if the conversion was successful, false otherwise.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TryGetPdfCode(System.String,System.UInt32@,System.Int32@)">
            <summary>
            Tries to convert a Unicode value to the character's PDF code.
            <para>
            Note that this method can fail if the font does not contain the necessary info for the conversion
            or does not contain the specified Unicode value.
            </para>
            <para>
            Note also that this method can be slow as it uses large font tables like /Encoding, /ToUnicode etc.,
            so it is recommended that the returned results are cached by the caller.
            </para>
            </summary>
            <param name="unicode">The character Unicode.</param>
            <param name="pdfCode">OUT: The character PDF code.</param>
            <param name="pdfCodeLength">OUT: The length of <paramref name="pdfCode"/> in bytes.</param>
            <returns><see langword="true"/> if the conversion was successful, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo">
            <summary>
            Contains information about char used to build text map.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.PdfCode">
            <summary>
            The PDF code of the char as it specified in TJ or Tj commands.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.PdfCodeLength">
            <summary>
            The length of PDF code in bytes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.Text">
            <summary>
            The string representing char, typically it has 1 char length.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.Width">
            <summary>
            The width of the char divided by 1000 as it is specified in a PDF font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.IsSpace">
            <summary>
            Indicates whether this char is a space and word spacing(Tw) should be applied to it.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.W1">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.Text.CIDFont.GlyphVerticalMetrics.W1"/> divided by 1000.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.Vx">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.Text.CIDFont.GlyphVerticalMetrics.Vx"/> divided by 1000.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.Vy">
            <summary>
            The <see cref="F:GrapeCity.Documents.Pdf.Text.CIDFont.GlyphVerticalMetrics.Vy"/> divided by 1000.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.CID">
            <summary>
            Has valid value only for <see cref="T:GrapeCity.Documents.Pdf.Text.FontType0"/>, contains CID for PDF code.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.GlyphIndex">
            <summary>
            The glyph's index in native font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.FontGlyphWidth">
            <summary>
            The glyph's width in native font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.FontGlyphHeight">
            <summary>
            The glyph's height in native font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.CharInfo.FontGlyphBounds">
            <summary>
            The glyph's bounds relative to baseline, all coordinates divided by 1000.
            Note! All coordinates corrected if FontGlyphWidth does not match Width,
            it is possible if substitute font is used.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.CharInfo.Encode(System.Collections.Generic.IList{GrapeCity.Documents.Pdf.Text.Font.CharInfo},System.Int32,System.Int32,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Encodes a list of <see cref="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo"/> into list of bytes.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.m_Renderer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.Font.Renderer"/> used to render text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.Draw(GrapeCity.Documents.Pdf.Renderer.ContentStreamRenderer,GrapeCity.Documents.Pdf.Spec.PdfArray)">
            <summary>
            Renders a text specified by <paramref name="str"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.Renderer.CreateCharInfo(System.UInt32,System.Int32)">
            <summary>
            Creates <see cref="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo"/> object describing properties of specified PDF code.
            NOTE! This method is for internal usage and called from <see cref="M:GrapeCity.Documents.Pdf.Text.Font.Renderer.GetCharInfo(System.UInt32,System.Int32)"/>
            if char does not exist in the cache.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.Renderer.GetCharInfo(System.UInt32,System.Int32)">
            <summary>
            Gets <see cref="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo"/> for specified PDF code.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.Renderer.GetMapFontMetrics(System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets font's metrics used while building <see cref="T:GrapeCity.Documents.Pdf.Recognition.Core.ContentMap"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.Font.Renderer.IsFallback">
            <summary>
            Gets a value indicating whether the rendered was created on the base of a system font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Dimension">
            <summary>
            The width for the horizontal item and height for vertical.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Spacing">
            <summary>
            The spacing after the item, calculated on the base of Text Character Spacing, Text Word Spacing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.CharInfo">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.Font.CharInfo"/> describing this char.
            This property can be null if item was created from number when "Tj" command is used.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.TextBlock.Matrix">
            <summary>
            The text matrix used to display this <see cref="T:GrapeCity.Documents.Pdf.Text.Font.TextBlock"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.TextBlock.Renderer">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.Font.Renderer"/> used to process this block.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.SetText(System.String)">
            <summary>
            Updates the <see cref="T:GrapeCity.Documents.Pdf.Text.Font.TextBlock"/> with specified text.
            Note! If some characters are not supported by the linked <see cref="T:GrapeCity.Documents.Pdf.Text.Font"/>
            then they will be ignored and not will be added to the <see cref="T:GrapeCity.Documents.Pdf.Text.Font.TextBlock"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.ToPdfObject(System.Int32,System.Int32)">
            <summary>
            Returns a PDF object (<see cref="T:GrapeCity.Documents.Pdf.Spec.PdfArray"/> or <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfString"/>)
            representing specified range of this <see cref="T:GrapeCity.Documents.Pdf.Text.Font.TextBlock"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.GetBounds">
            <summary>
            Returns the block's bounds.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.GetBounds(System.Int32,System.Int32)">
            <summary>
            Returns the bounds of fragment of block.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.GetSize">
            <summary>
            Returns sum of <see cref="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Dimension"/> and <see cref="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Spacing"/> for all items.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.GetSize(System.Int32,System.Int32)">
            <summary>
            Returns sum of <see cref="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Dimension"/> and <see cref="F:GrapeCity.Documents.Pdf.Text.Font.TextBlockItem.Spacing"/> for range of items.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.TextBlock.GetText">
            <summary>
            Returns the text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.HTextBlock.FontAscent">
            <summary>
            The font ascent, used to calculate height of the text block.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.HTextBlock.FontDescent">
            <summary>
            The font descent, used to calculate height of the text block.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.HTextBlock.GetBounds(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.HTextBlock.GetBounds">
            <inheritdoc/>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.VTextBlock.LeftOffset">
            <summary>
            The offset relative to baseline to the left edge, used to calculate width of the text block.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.Font.VTextBlock.RightOffset">
            <summary>
            The offset relative to baseline to the right edge, used to calculate width of the text block.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.VTextBlock.GetBounds(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.Font.VTextBlock.GetBounds">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags">
            <summary>
            Specifies various characteristics of the font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.FixedPitch">
            <summary>
            All glyphs have the same width (as opposed to proportional or variable-pitch fonts,
            which have different widths).
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Serif">
            <summary>
            Glyphs have serifs, which are short strokes drawn at an angle on the top and bottom
            of glyph stems. (Sans serif fonts do not have serifs.)
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Symbolic">
            <summary>
            Font contains glyphs outside the Adobe standard Latin character set.
            This flag and the <see cref="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Nonsymbolic"/> flag cannot both be set or both be clear.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Script">
            <summary>
            Glyphs resemble cursive handwriting.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Nonsymbolic">
            <summary>
            Font uses the Adobe standard Latin character set or a subset of it.
            This flag and the <see cref="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Symbolic"/> flag cannot both be set or both be clear.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.Italic">
            <summary>
            Glyphs have dominant vertical strokes that are slanted.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.AllCap">
            <summary>
            Font contains no lowercase letters; typically used for display purposes, such as for titles or headlines.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.SmallCap">
            <summary>
            Font contains both uppercase and lowercase letters.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontDescriptorFlags.ForceBold">
            <summary>
            See PDF1.7 specification, page 459.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontStretch">
            <summary>
            Defines possible font stretch values.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.UltraCondensed">
            <summary>
            UltraCondensed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.ExtraCondensed">
            <summary>
            ExtraCondensed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.Condensed">
            <summary>
            Condensed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.SemiCondensed">
            <summary>
            SemiCondensed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.SemiExpanded">
            <summary>
            SemiExpanded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.Expanded">
            <summary>
            Expanded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.ExtraExpanded">
            <summary>
            ExtraExpanded.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontStretch.UltraExpanded">
            <summary>
            UltraExpanded.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontWeight">
            <summary>
            Defines possible font weight values.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Thin">
            <summary>
            Thin.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.ExtraLight">
            <summary>
            ExtraLight.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.UltraLight">
            <summary>
            UltraLight.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Light">
            <summary>
            Light.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Regular">
            <summary>
            Regular.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Medium">
            <summary>
            Medium.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.DemiBold">
            <summary>
            DemiBold.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.SemiBold">
            <summary>
            SemiBold.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Bold">
            <summary>
            Bold.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.ExtraBold">
            <summary>
            ExtraBold.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Black">
            <summary>
            Black.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontWeight.Heavy">
            <summary>
            Heavy.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontDescriptor">
            <summary>
            Specifies metrics and other attributes of a <see cref="T:GrapeCity.Documents.Pdf.Text.FontSimple"/> or a <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFont"/> as a whole,
            as distinct from the metrics of individual glyphs.
            These font metrics provide information that enables a consumer application to synthesize a substitute font or
            select a similar font when the font program is unavailable.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.FontName">
            <summary>
            Gets or sets the PostScript name of the font.
            This name should be the same as the value of BaseFont in the font or CIDFont dictionary
            that refers to this font descriptor.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.MissingWidth">
            <summary>
            The width to use for character codes whose widths are not specified
            in a font dictionary’s Widths array.
            This has a predictable effect only if all such codes map to glyphs
            whose actual widths are the same as the value of the MissingWidth entry.
            (Optional) Default value: 0.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.CharSet">
            <summary>
            The listing the character names defined in a font subset
            (Optional; meaningful only in Type 1 fonts; PDF 1.1)
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.EmbeddedFontProgram">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.EmbeddedFontProgramBase"/> defining embedded font's data.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.CIDSet">
            <summary>
            The CIDSet entry of Font Descriptor.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.FontFamily">
            <summary>
            Gets the preferred font family name.
            For example, for the font Times Bold Italic, the FontFamily is Times.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.FontStretch">
            <summary>
            Gets the font stretch value.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.FontWeight">
            <summary>
            Gets the weight (thickness) component of the fully-qualified font name or font specifier.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.Flags">
            <summary>
            Gets the flags defining various characteristics of the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.FontBBox">
            <summary>
            Gets a rectangle expressed in the glyph coordinate system, specifying the font bounding box.
            This is the smallest rectangle enclosing the shape that would result if all
            of the glyphs of the font were placed with their origins coincident and then filled.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.ItalicAngle">
            <summary>
            Gets the angle, expressed in degrees counterclockwise from the vertical,
            of the dominant vertical strokes of the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.Ascent">
            <summary>
            Gets the maximum height above the baseline reached by glyphs in this font,
            excluding the height of glyphs for accented characters.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.Descent">
            <summary>
            Gets the maximum depth below the baseline reached by glyphs in this font.
            The value is a negative number.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.Leading">
            <summary>
            Gets the spacing between baselines of consecutive lines of text. 
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.CapHeight">
            <summary>
            Gets the vertical coordinate of the top of flat capital letters, measured from the baseline.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.XHeight">
            <summary>
            Gets the font's x height: the vertical coordinate of the top of flat non ascending lowercase letters
            (like the letter x), measured from the baseline, in fonts that have Latin characters.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.StemV">
            <summary>
            Gets the thickness, measured horizontally, of the dominant vertical stems of glyphs in the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.StemH">
            <summary>
            Gets the thickness, measured vertically, of the dominant horizontal stems of glyphs in the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.AvgWidth">
            <summary>
            Gets the average width of glyphs in the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontDescriptor.MaxWidth">
            <summary>
            Gets the maximum width of glyphs in the font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.GlyphIndex">
            <summary>
            The glyph index.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.GlyphWidth">
            <summary>
            Glyph width in font EM units.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.GlyphHeight">
            <summary>
            Glyph height in font EM units, used in vertical drawing to compare with GlyphAdvance.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.PdfGlyphWidth">
            <summary>
            <see cref="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.GlyphWidth"/> scaled to range 0..1000.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.W1">
            <summary>
            <see cref="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.GlyphHeight"/> scaled to range 0..1000, PDF vertical metric.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.Vx">
            <summary>
            PDF vertical metric.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo.Vy">
            <summary>
            PDF vertical metric.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo.GlyphInfo">
            <summary>
            Associated glyph.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo.Font">
            <summary>
            The pdf font used to draw this char.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder">
            <summary>
            Encodes PDF font data and writes it to PDF stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.FontHandler">
            <summary>
            The owning <see cref="T:GrapeCity.Documents.Pdf.FontHandler"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.GetGlyphInfo(System.UInt16)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo"/> for specified glyph index,
            can return null if <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo"/> does not exists.
            </summary>
            <param name="glyphIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.AddGlyphInfo(System.UInt16)">
            <summary>
            Builds <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfGlyphInfo"/> for specified glyph.
            </summary>
            <param name="glyphIndex"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.HasPdfFont(GrapeCity.Documents.Pdf.Text.Font)">
            <summary>
            Returns a value indicating whether the <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder"/> owns specified PDF font.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.BeforeSave">
            <summary>
            Called before saving the document.
            Can be used to prepare internal objects, for example embedded data.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.GetCharInfo(System.UInt16,System.Boolean)">
            <summary>
            Returns <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo"/> for specified glyph which belongs to the underlying <see cref="T:RawFont"/>,
            returns null if <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo"/> for specified glyph does not exist.
            </summary>
            <param name="glyphIndex"></param>
            <param name="vertical"></param>
            <returns></returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.AddCharInfo(System.UInt16,System.String,System.Boolean)">
            <summary>
            Builds <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo"/> for specified glyph.
            </summary>
            <param name="glyphIndex"></param>
            <param name="unicodes"></param>
            <param name="vertical"></param>
            <returns></returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.FontEncoder.PdfCharInfoCollection">
            <summary>
            Collection of the <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.PdfCharInfo"/>, PdfCharInfo.GlyphInfo.GlyphIndex is used as key.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.StandardFontEncoder">
            <summary>
            Uses following rules:
            -) written as Type1 font
            -) all unicodes with code less than 127 written as is 
            -) all other unicodes will be encoded via custom encoding using /Differences 
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.TwoByteFontEncoder">
            <summary>
            Uses following rules:
            -) each PDF code has two byte length
            -) PDF code is same as glyph index
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.TwoByteFontEncoder.Type0FontWrapper.Chars">
            <summary>
            The collection of characters used by this font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.TwoByteFontEncoder.Type0FontWrapper.Font">
            <summary>
            The underlying <see cref="T:GrapeCity.Documents.Pdf.Text.FontType0"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder">
            <summary>
            Base class for encoders based on Type0 PDF font.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder.CIDFont">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFontType2"/> defining CID font referenced from Type0 fonts.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder.CIDFontParser">
            <summary>
            The CIDFont.Parser of <see cref="F:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder.CIDFont"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder.EncoderEmbeddedFontProgram">
            <summary>
            Represents a PDF embedded font program created during
            encoding of <see cref="T:GrapeCity.Documents.Text.Font"/> by the <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder.EncoderDetachedEmbeddedFontProgram">
            <summary>
            The clone of <see cref="T:GrapeCity.Documents.Pdf.Text.FontEncoders.Type0FontEncoder.EncoderEmbeddedFontProgram"/> created when merge documents.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontSimple">
            <summary>
            The base abstract class representing a simple font in a PDF document.
            <para>See the PDF specification for more info about PDF simple fonts.</para>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontSimple.TryGetWidthsValue(System.UInt32,System.Single@)">
            <summary>
            Tries to get value from <b>Widths</b> array, corresponging to the specified pdf code.
            Note! If the <b>Widths</b> entry is not specified or specified with errors
            the method returns false.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontSimple.Encoding">
            <summary>
            The encoding used by the font.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontSimple.EmbeddedFontProgram">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontSimple.Descriptor">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Text.FontDescriptor"/> object describing the font's metrics.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontSimple.IsEmbedded">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontSimple.CreateNativeFont">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontSimple.RemoveEmbeddedData(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontSimple.TryGetUnicode(System.UInt32,System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontSimple.TryGetPdfCode(System.String,System.UInt32@,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontSimple.GetFontDescriptor">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontSimple.FallbackFontRenderer.IsFallback">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontTrueType">
            <summary>
            Represents True Type font in PDF document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontType0">
            <summary>
            Represents Type0 font in PDF document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.Vertical">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.EmbeddedFontProgram">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.DescendantFont">
            <summary>
            Gets or sets the underlying <see cref="T:GrapeCity.Documents.Pdf.Text.CIDFont"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.EncodingTable">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Text.CMap.CMapTable"/> object that maps character codes to font numbers and CIDs.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.IsEmbedded">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType0.RemoveEmbeddedData(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType0.CreateNativeFont">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType0.GetFontDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType0.TryGetUnicode(System.UInt32,System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType0.TryGetPdfCode(System.String,System.UInt32@,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType0.FallbackFontRender.IsFallback">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontType1">
            <summary>
            Represents Type1 font in PDF document.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Text.FontType3">
            <summary>
            Represents Type3 font in PDF document.
            Type 3 fonts differ from the other fonts supported by PDF.
            In Type 3 fonts, glyphs are defined by streams of PDF graphics operators. These streams are associated with character names.
            Note! <see cref="T:GrapeCity.Documents.Pdf.Text.FontType3"/> does not support <see cref="M:GrapeCity.Documents.Pdf.Text.FontType3.CreateNativeFont"/> method, it returns null.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType3.CharProcs">
            <summary>
            The characters' content streams.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType3.ResourceDictionary">
            <summary>
            The resources used by the font's glyphs.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType3.EmbeddedFontProgram">
            <inheritdoc/>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Text.FontType3.IsEmbedded">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType3.RemoveEmbeddedData(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Text.FontType3.CreateNativeFont">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TransitionStyle">
            <summary>
            Defines the possible transition styles.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Split">
            <summary>
            Two lines sweep across the screen, revealing the new page.
            The lines may be either horizontal or vertical and may move inward from the edges
            of the page or outward from the center, as specified by the <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Dimension"/> and
            <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection"/> properties, respectively.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Blinds">
            <summary>
            Multiple lines, evenly spaced across the screen, synchronously sweep in the same direction
            to reveal the new page.
            The lines may be either horizontal or vertical, as specified by the <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Dimension"/>.
            Horizontal lines move downward; vertical lines move to the right.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Box">
            <summary>
            A rectangular box sweeps inward from the edges of the page or outward from the center,
            as specified by the <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection"/> property, revealing the new page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Wipe">
            <summary>
            A single line sweeps across the screen from one edge
            to the other in the direction specified by the <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/> entry,
            revealing the new page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Dissolve">
            <summary>
            The old page dissolves gradually to reveal the new one.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Glitter">
            <summary>
            Similar to Dissolve, except that the effect sweeps across the page in a wide band moving from one side of the screen to the other
            in the direction specified by the <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/> property.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.R">
            <summary>
            The new page simply replaces the old one with no special transition effect.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Fly">
            <summary>
            Changes are flown out or in (as specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection"/>),
            in the direction specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/>,
            to or from a location that is off-screen except when <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/> is <see cref="F:GrapeCity.Documents.Pdf.TransitionDirection.None"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Push">
            <summary>
            The old page slides off the screen while the new page slides in,
            pushing the old page out in the direction specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Cover">
            <summary>
            The new page slides on to the screen in the direction specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/>,
            covering the old page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Uncover">
            <summary>
            The old page slides off the screen in the direction specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/>,
            uncovering the new page in the direction specified by <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Fade">
            <summary>
            The new page gradually becomes visible through the old one.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionStyle.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TransitionDimension">
            <summary>
            Defines the possible dimensions in which the transition effect shall occur.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDimension.Horizontal">
            <summary>
            Horizontal.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDimension.Vertical">
            <summary>
            Vertical.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDimension.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TransitionDirection">
            <summary>
            Defines the possible directions in which the specified transition effect shall moves.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.LeftToRight">
            <summary>
            The direction is left to right.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.BottomToTop">
            <summary>
            The direction is bottom to top.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.RightToLeft">
            <summary>
            The direction is right to left.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.TopToBottom">
            <summary>
            The direction is top to bottom.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.TopLeftToBottomRight">
            <summary>
            The direction is Top-left to bottom-right. (Used only when <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Style"/> is
            <see cref="F:GrapeCity.Documents.Pdf.TransitionStyle.Glitter"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.None">
            <summary>
            Used only when <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Style"/> is <see cref="F:GrapeCity.Documents.Pdf.TransitionStyle.Fly"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionDirection.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TransitionMotionDirection">
            <summary>
            Defines the possible directions of motion for a transition effect.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionMotionDirection.Inward">
            <summary>
            Inward from the edges of the page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionMotionDirection.Outward">
            <summary>
            Outward from the center of the page.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.TransitionMotionDirection.Unknown">
            <summary>
            Value is unknown.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TransitionEffect">
            <summary>
            Represents a page transition effect,
            describing the style and duration of the visual transition to use when moving
            from another page to the given page during a presentation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.TransitionEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.TransitionEffect"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.Style">
            <summary>
            Gets or sets the transition style that shall be used when moving to this page from another
            during a presentation. Default value: <see cref="F:GrapeCity.Documents.Pdf.TransitionStyle.R"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.Duration">
            <summary>
            Gets or sets the duration of transition effect, in seconds.
            Default value: 1.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.Dimension">
            <summary>
            Gets or sets the dimension in which the specified transition effect shall occur.
            Default value: <see cref="F:GrapeCity.Documents.Pdf.TransitionDimension.Horizontal"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection">
            <summary>
            Gets or sets the direction of motion for the specified transition effect.
            Default value: <see cref="F:GrapeCity.Documents.Pdf.TransitionMotionDirection.Inward"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.Direction">
            <summary>
            Gets or sets the direction in which the specified transition effect shall moves,
            expressed in degrees counterclockwise starting from a left-to-right direction.
            Default value: <see cref="F:GrapeCity.Documents.Pdf.TransitionDirection.LeftToRight"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.Scale">
            <summary>
            Gets or sets the starting or ending scale at which the changes shall be drawn.
            If <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection"/> specifies an inward transition (<see cref="F:GrapeCity.Documents.Pdf.TransitionMotionDirection.Inward"/>),
            the scale of the changes drawn shall progress from <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Scale"/> to 1.0 over the course
            of the transition.
            If <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.MotionDirection"/> specifies an outward transition,
            the scale of the changes drawn shall progress from 1.0 to <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Scale"/> over the course of the transition.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TransitionEffect.FlyRectangularAndOpaque">
            <summary>
            Gets or sets a value indicating whether the area that shall be flown in is rectangular and opaque,
            used only if <see cref="P:GrapeCity.Documents.Pdf.TransitionEffect.Style"/> is <see cref="F:GrapeCity.Documents.Pdf.TransitionStyle.Fly"/>.
            Default: false.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.TriggerEvents">
            <summary>
            Abstract base class for all classes defining set of events associated with some PDF object: annotation, AcroForm field etc.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.TriggerEvents.Item(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Gets or sets the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> for specified event.
            </summary>
            <param name="key">The event type.</param>
            <returns>Returns the <see cref="T:GrapeCity.Documents.Pdf.Actions.ActionBase"/> associated with specified event.</returns>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcGraphicsExt">
            <summary>
            Provides extension methods that draw certain PDF elements
            (such as AcroForm fields) on a <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.GetCircleEllipseIntersection(System.Drawing.PointF,System.Single,System.Drawing.PointF,System.Single,System.Single,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Calculates the points of intersections a circle and an ellipse.
            Called for a custom case:
            the circle center is on ellipse
            the circle radius is a less than Max(ae, be)
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCloudy(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Single,GrapeCity.Documents.Drawing.Pen,System.Drawing.Color)">
            <summary>
            Draws an ellipse with a "cloudy" border.
            (As per the PDF spec, the border should be drawn as a series of convex curved line segments in a manner that simulates the appearance of a cloud.)
            </summary>
            <param name="g">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> object.</param>
            <param name="bounds">The ellipse bounds.</param>
            <param name="intensity">The intensity of the "cloudy" effect, valid values are from 0 to 2.</param>
            <param name="pen">The <see cref="T:GrapeCity.Documents.Drawing.Pen"/> to use.</param>
            <param name="fillColor">The fill color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCloudy(GrapeCity.Documents.Drawing.GcGraphics,System.Collections.Generic.IList{System.Drawing.PointF},System.Boolean,System.Single,GrapeCity.Documents.Drawing.Pen,System.Drawing.Color)">
            <summary>
            Draws a polygon with a "cloudy" border.
            (As per the PDF spec, the border should be drawn as a series of convex curved line segments in a manner that simulates the appearance of a cloud.)
            </summary>
            <param name="g">The <see cref="T:GrapeCity.Documents.Drawing.GcGraphics"/> object.</param>
            <param name="points">The list of <see cref="T:System.Drawing.PointF"/> structures defining the polygon.</param>
            <param name="closed">Indicates whether the polygon is closed, i.e. the last point should be connected with the first point.</param>
            <param name="intensity">The intensity of the "cloudy" effect, valid values are from 0 to 2.</param>
            <param name="pen">The <see cref="T:GrapeCity.Documents.Drawing.Pen"/> to use.</param>
            <param name="fillColor">The fill color.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.InitTextLayout(GrapeCity.Documents.Text.TextLayout,System.Nullable{System.Single},System.Nullable{System.Single},GrapeCity.Documents.Text.TextFormat,System.String,System.Boolean,GrapeCity.Documents.Text.TextAlignment,GrapeCity.Documents.Text.ParagraphAlignment,System.Boolean)">
            <summary>
            Initializes the <see cref="T:GrapeCity.Documents.Text.TextLayout"/> using specified TextFormat and text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.InitTextLayout(GrapeCity.Documents.Text.TextLayout,System.Nullable{System.Single},System.Nullable{System.Single},GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.String,System.Boolean,GrapeCity.Documents.Text.TextAlignment,GrapeCity.Documents.Text.ParagraphAlignment,System.Boolean)">
            <summary>
            Initializes the <see cref="T:GrapeCity.Documents.Text.TextLayout"/> using specified TextFormat and text.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawTextMarkupAnnotation(GrapeCity.Documents.Drawing.GcGraphics,System.Collections.Generic.IEnumerable{GrapeCity.Documents.Common.Quadrilateral},System.Single,System.Single,System.Numerics.Matrix3x2,GrapeCity.Documents.Pdf.Annotations.TextMarkupType,System.Drawing.Color,System.Nullable{GrapeCity.Documents.Drawing.BlendMode})">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.TextMarkupAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCircleAnnotation(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Nullable{GrapeCity.Documents.Common.Offsets},System.Drawing.Color,System.Drawing.Color,System.Single,System.Single[],GrapeCity.Documents.Pdf.Annotations.BorderEffect)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.CircleAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawSquareAnnotation(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Nullable{GrapeCity.Documents.Common.Offsets},System.Drawing.Color,System.Drawing.Color,System.Single,System.Single[],GrapeCity.Documents.Pdf.Annotations.BorderEffect)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.SquareAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawFileAttachmentAnnotation(GrapeCity.Documents.Drawing.GcGraphics,GrapeCity.Documents.Pdf.Util.PdfIcon,System.Drawing.RectangleF,System.Drawing.Color,System.Single)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.FileAttachmentAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawSoundAnnotation(GrapeCity.Documents.Drawing.GcGraphics,GrapeCity.Documents.Pdf.Util.PdfIcon,System.Drawing.RectangleF,System.Drawing.Color,System.Single)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.SoundAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCaretAnnotation(GrapeCity.Documents.Drawing.GcGraphics,GrapeCity.Documents.Pdf.Util.PdfIcon,System.Drawing.RectangleF,System.Drawing.Color,System.Single)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.CaretAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawInkAnnotation(GrapeCity.Documents.Drawing.GcGraphics,System.Collections.Generic.IEnumerable{System.Collections.Generic.IReadOnlyList{System.Drawing.PointF}},System.Single,System.Single,System.Drawing.Color,System.Single,System.Single[])">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.InkAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawLinkAnnotation(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Numerics.Matrix3x2,GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.LinkAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPolygonAnnotation(GrapeCity.Documents.Drawing.GcGraphics,System.Collections.Generic.IReadOnlyList{System.Drawing.PointF},System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single[],GrapeCity.Documents.Pdf.Annotations.BorderEffect)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.PolygonAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawFreeTextAnnotation(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Annotations.DefaultAppearance,System.Single,System.Drawing.Color,System.Nullable{GrapeCity.Documents.Common.Offsets},System.Single,System.Single[],GrapeCity.Documents.Pdf.VariableTextJustification,System.Collections.Generic.IReadOnlyList{System.Drawing.PointF},GrapeCity.Documents.Pdf.Annotations.LineEndingStyle,System.String,System.String,System.String,System.Single)">
            <summary>
            Draws a <see cref="T:GrapeCity.Documents.Pdf.Annotations.FreeTextAnnotation"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawStamp(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.String,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Single)">
            <summary>
            Draws Stamp annotation.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPdfPage(GrapeCity.Documents.Drawing.GcGraphics,GrapeCity.Documents.Pdf.Page,System.Drawing.RectangleF,System.Boolean,System.Boolean,GrapeCity.Documents.Pdf.RenderingCache,System.Boolean,System.Boolean)">
            <summary>
            Draws a PDF page.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="page">The page to draw.</param>
            <param name="bounds">The draw bounds.</param>
            <param name="drawAnnotations">Indicates whether to draw annotations.</param>
            <param name="drawFormFields">Indicates whether to draw form fields.</param>
            <param name="renderingCache">A <see cref="T:GrapeCity.Documents.Pdf.RenderingCache"/> object that is used to cache objects created during rendering.</param>
            <param name="print">Indicates whether the image is generated for printing.</param>
            <param name="ignoreErrors">Indicates whether to ignore errors in the PDF content stream during rendering.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCheckBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Boolean,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Single,System.String)">
            <summary>
            Draws a PDF check mark.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The check mark bounds.</param>
            <param name="value">The check mark value.</param>
            <param name="font">The font to use, can be null in which case <see cref="P:GrapeCity.Documents.Pdf.StandardFonts.ZapfDingbats"/> will be used.</param>
            <param name="fontSize">The font size, can be 0 in which case it will be selected automatically to fit into the specified bounds.</param>
            <param name="foreColor">The foreground color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
            <param name="checkMark">The text to use for the check mark.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCheckBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Boolean,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.String)">
            <summary>
            Draws a PDF check mark.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The check mark bounds.</param>
            <param name="value">The check mark value.</param>
            <param name="font">The font to use, can be null in which case <see cref="P:GrapeCity.Documents.Pdf.StandardFonts.ZapfDingbats"/> will be used.</param>
            <param name="fontSize">The font size, can be 0 in which case it will be selected automatically to fit into the specified bounds.</param>
            <param name="foreColor">The foreground color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="checkMark">The text to use for the check mark.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawDropDownButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF)">
            <summary>
            Draws a combo box drop-down button.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="fieldText">The control text.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
            <param name="drawButton">Indicates whether to draw drop-down button.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="fieldText">The control text.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="fieldText">The control text.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
            <param name="drawButton">Indicates whether to draw drop-down button.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="fieldText">The control text.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="selectedIndex">The index of an item in <paramref name="items"/> the text of which to draw.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
            <param name="drawButton">Indicates whether to draw drop-down button.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="selectedIndex">The index of an item in <paramref name="items"/> the text of which to draw.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="selectedIndex">The index of an item in <paramref name="items"/> the text of which to draw.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
            <param name="drawButton">Indicates whether to draw drop-down button.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawComboBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a combo box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="selectedIndex">The index of an item in <paramref name="items"/> the text of which to draw.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCombTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean,System.Single)">
            <summary>
            Draws a CombTextBox.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="maxLen">The maximum text length.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCombTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean)">
            <summary>
            Draws a CombTextBox.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="maxLen">The maximum text length.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCombTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean,System.Single)">
            <summary>
            Draws a CombTextBox.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="maxLen">The maximum text length.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawCombTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean)">
            <summary>
            Draws a CombTextBox.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="maxLen">The maximum text length.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawListBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32[],System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single)">
            <summary>
            Draws a list box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="si">The list of selected indexes.</param>
            <param name="topIndex">The index of the top visible item.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawListBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32[],System.Int32,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a list box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="si">The list of selected indexes.</param>
            <param name="topIndex">The index of the top visible item.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawListBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32[],System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean,System.Single)">
            <summary>
            Draws a list box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="si">The list of selected indexes.</param>
            <param name="topIndex">The index of the top visible item.</param>
            <param name="font">The font to use.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawListBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.Collections.Generic.IList{GrapeCity.Documents.Pdf.AcroForms.ChoiceFieldItem},System.Int32[],System.Int32,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a list box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="items">The control items.</param>
            <param name="si">The list of selected indexes.</param>
            <param name="topIndex">The index of the top visible item.</param>
            <param name="font">The font to use.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPushButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Object,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.ImageScaleMode,System.Boolean,System.Drawing.PointF,System.Boolean,GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation,GrapeCity.Documents.Pdf.Annotations.Border,System.Single)">
            <summary>
            Draws a pushbutton.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="caption">The button text.</param>
            <param name="image">The button image. If not null, can be an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="imageScaleMode">The image scale mode.</param>
            <param name="imageScaleProportional">Indicates whether the image should be scaled proportionally</param>
            <param name="imageScalePosition">The image position, see <see cref="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.Position"/> for details.</param>
            <param name="imageScaleIgnoreBorder">Indicates whether a button's appearance should be scaled to fit fully
            within the bounds of the annotation without taking into consideration the line width of the border.</param>
            <param name="captionImageRelation">The relative position of caption and image in the button.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPushButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Object,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.ImageScale,GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation,GrapeCity.Documents.Pdf.Annotations.Border,System.Single)">
            <summary>
            Draws a pushbutton.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="caption">The button text.</param>
            <param name="image">The button image. If not null, can be an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="imageScale">The image alignment and scaling.</param>
            <param name="captionImageRelation">The relative position of caption and image in the button.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPushButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Object,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.ImageScale,GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation,GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Draws a pushbutton.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="caption">The button text.</param>
            <param name="image">The button image. If not null, can be an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="imageScale">The image alignment and scaling.</param>
            <param name="captionImageRelation">The relative position of caption and image in the button.</param>
            <param name="border">The border definition.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPushButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Object,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.ImageScaleMode,System.Boolean,System.Drawing.PointF,System.Boolean,GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation,GrapeCity.Documents.Pdf.Annotations.Border,System.Single)">
            <summary>
            Draws a pushbutton.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="caption">The button text.</param>
            <param name="image">The button image. If not null, can be an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="imageScaleMode">The image scale mode.</param>
            <param name="imageScaleProportional">Indicates whether the image should be scaled proportionally</param>
            <param name="imageScalePosition">The image position, see <see cref="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.Position"/> for details.</param>
            <param name="imageScaleIgnoreBorder">Indicates whether a button's appearance should be scaled to fit fully
            within the bounds of the annotation without taking into consideration the line width of the border.</param>
            <param name="captionImageRelation">The relative position of caption and image in the button.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPushButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Object,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.ImageScale,GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation,GrapeCity.Documents.Pdf.Annotations.Border,System.Single)">
            <summary>
            Draws a pushbutton.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="caption">The button text.</param>
            <param name="image">The button image. If not null, can be an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="imageScale">The image alignment and scaling.</param>
            <param name="captionImageRelation">The relative position of caption and image in the button.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPushButton(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Object,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.ImageScale,GrapeCity.Documents.Pdf.Annotations.CaptionImageRelation,GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Draws a pushbutton.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="caption">The button text.</param>
            <param name="image">The button image. If not null, can be an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="imageScale">The image alignment and scaling.</param>
            <param name="captionImageRelation">The relative position of caption and image in the button.</param>
            <param name="border">The border definition.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawImage(GrapeCity.Documents.Drawing.GcGraphics,System.Object,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Annotations.ImageScaleMode,System.Boolean,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws an image represented by an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="image">The image object (an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>).</param>
            <param name="bounds">The image bounds.</param>
            <param name="imageScaleMode">The image scale mode.</param>
            <param name="imageScaleProportional">Indicates whether the image should be scaled proportionally</param>
            <param name="imageScalePosition">The image position, see <see cref="P:GrapeCity.Documents.Pdf.Annotations.ImageScale.Position"/> for details.</param>
            <param name="imageScaleIgnoreBorder">Indicates whether a button's appearance should be scaled to fit fully
            within the bounds of the annotation without taking into consideration the line width of the border.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawImage(GrapeCity.Documents.Drawing.GcGraphics,System.Object,System.Drawing.RectangleF,GrapeCity.Documents.Pdf.Annotations.ImageScale)">
            <summary>
            Draws an image represented by an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="image">The image object (an <see cref="T:GrapeCity.Documents.Drawing.IImage"/> or a <see cref="T:GrapeCity.Documents.Pdf.Graphics.FormXObject"/>).</param>
            <param name="bounds">The image bounds.</param>
            <param name="imageScale">The image alignment and scaling.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawUnsignedSignature(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Single)">
            <summary>
            Draws an unsigned signature.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawUnsignedSignature(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Draws an unsigned signature.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawUnsignedSignature(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Single)">
            <summary>
            Draws an unsigned signature.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="font">The font to use.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawUnsignedSignature(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border)">
            <summary>
            Draws an unsigned signature.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="font">The font to use.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Boolean,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean,System.Single)">
            <summary>
            Draws a text box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="multiLine">Indicates whether the control is multi-line.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Boolean,GrapeCity.Documents.Text.TextFormat,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean)">
            <summary>
            Draws a text box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="multiLine">Indicates whether the control is multi-line.</param>
            <param name="textFormat">The text format to use.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Boolean,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean,System.Single)">
            <summary>
            Draws a text box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="multiLine">Indicates whether the control is multi-line.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
            <param name="orientation">The rotation angle, should be a multiple of 90.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.Boolean,GrapeCity.Documents.Text.Font,System.Single,System.Drawing.Color,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,GrapeCity.Documents.Pdf.VariableTextJustification,System.Boolean)">
            <summary>
            Draws a text box.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="text">The control text.</param>
            <param name="multiLine">Indicates whether the control is multi-line.</param>
            <param name="font">The font.</param>
            <param name="fontSize">The font size.</param>
            <param name="foreColor">The fore color.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="justification">The text justification.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawRichTextBox(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.String,System.Drawing.Color,GrapeCity.Documents.Pdf.Annotations.Border,System.Boolean)">
            <summary>
            Draws a text box containing a rich text.
            <para>
            Note that all rich text formatting is ignored, just the text is drawn using a predefined format
            within specified bounds.
            </para>
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="richText">The rich text to draw.</param>
            <param name="styleString">The style string specified for the control.</param>
            <param name="backColor">The background color.</param>
            <param name="border">The border definition.</param>
            <param name="required">Indicates whether to draw the border in red, ignoring the color specified in <paramref name="border"/>.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawRichText(GrapeCity.Documents.Drawing.GcGraphics,System.Drawing.RectangleF,System.String,System.String)">
            <summary>
            Draws rich text at specified bounds.
            <para>
            Note that all rich text formatting is ignored, just the text is drawn using a predefined format
            within specified bounds.
            </para>
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="bounds">The control bounds.</param>
            <param name="richText">The rich text to draw.</param>
            <param name="styleString">The style string specified for the control.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.GcGraphicsExt.DrawPdfLine(GrapeCity.Documents.Drawing.GcGraphics,System.Collections.Generic.IReadOnlyList{System.Drawing.PointF},System.Single,System.Drawing.Color,System.Single[],GrapeCity.Documents.Pdf.Annotations.LineEndingStyle,GrapeCity.Documents.Pdf.Annotations.LineEndingStyle,System.Drawing.Color)">
            <summary>
            Draws a line composed of several segments, with start and end markers.
            </summary>
            <param name="g">The graphics to draw on.</param>
            <param name="points">An array of points defining the line.</param>
            <param name="lineWidth">The line width.</param>
            <param name="lineColor">The line color.</param>
            <param name="lineDashPattern">The dash pattern, null indicates a solid line.</param>
            <param name="lineStartStyle">The style of the start marker.</param>
            <param name="lineEndStyle">The style of the end marker.</param>
            <param name="lineEndingsFillColor">The fill color used to render the markers.</param>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcGraphicsExt.Seg">
            <summary>
            The line segment from <see cref="F:GrapeCity.Documents.Pdf.GcGraphicsExt.Seg.SP"/> point to <see cref="F:GrapeCity.Documents.Pdf.GcGraphicsExt.Seg.EP"/> point.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.GcGraphicsExt.SegEnd">
            <summary>
            Represents the end of the line segment.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PdfDashPattern">
            <summary>
            Defines PDF dash pattern.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PdfDashPattern.Solid">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.PdfDashPattern"/> object defining a solid line.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDashPattern.#ctor(System.Single[],System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfDashPattern"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.PdfDashPattern.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.PdfDashPattern"/> class.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDashPattern.Dashes">
            <summary>
            Gets the dash's array.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.PdfDashPattern.Phase">
            <summary>
            Gets the dash phase specifies the distance into the dash pattern at which to start the dash.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageLayout">
            <summary>
            Specifies the page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.SinglePage">
            <summary>
            Display one page at a time.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.OneColumn">
            <summary>
            Display the pages in one column.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.TwoColumnLeft">
            <summary>
            Display the pages in two columns, with odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.TwoColumnRight">
            <summary>
            Display the pages in two columns, with odd-numbered pages on the right.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.TwoPageLeft">
            <summary>
            (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageLayout.TwoPageRight">
            <summary>
            (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the right.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageMode">
            <summary>
            Specifies how the document should be displayed when opened.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.Automatic">
            <summary>
            Document outline visible if available.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.UseNone">
            <summary>
            Neither document outline nor thumbnail images visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.UseOutlines">
            <summary>
            Document outline visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.UseThumbs">
            <summary>
            Thumbnail images visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.FullScreen">
            <summary>
            Full-screen mode, with no menu bar, window controls, or any other window visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.UseOC">
            <summary>
            (PDF 1.5) Optional content group panel visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageMode.UseAttachments">
            <summary>
            (PDF 1.6) Attachments panel visible.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.NonFullScreenPageMode">
            <summary>
            Specifies how the document should be displayed on exiting full-screen mode.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NonFullScreenPageMode.UseNone">
            <summary>
            Neither document outline nor thumbnail images visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NonFullScreenPageMode.UseOutlines">
            <summary>
            Document outline visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NonFullScreenPageMode.UseThumbs">
            <summary>
            Thumbnail images visible.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.NonFullScreenPageMode.UseOC">
            <summary>
            (PDF 1.5) Optional content group panel visible.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PrintScaling">
            <summary>
            (PDF 1.6) The page scaling option to be selected when a print dialog is displayed for this document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PrintScaling.None">
            <summary>
            Indicates that the print dialog should reflect no page scaling.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PrintScaling.AppDefault">
            <summary>
            Indicates that applications should use the current print scaling.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Duplex">
            <summary>
            (PDF 1.7) The paper handling option to use when printing the file from the print dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Duplex.Simplex">
            <summary>
            Print single sided.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Duplex.DuplexFlipShortEdge">
            <summary>
            Duplex and flip on the short edge of the sheet.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Duplex.DuplexFlipLongEdge">
            <summary>
            Duplex and flip on the long edge of the sheet.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ReadingDirection">
            <summary>
            Specifies the possible predominant reading order for text.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ReadingDirection.L2R">
            <summary>
            Left to right.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ReadingDirection.R2L">
            <summary>
            Right to left (including vertical writing systems, such as Chinese, Japanese, and Korean).
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.PageBoundary">
            <summary>
            Specifies the types of page boundaries. See PDF specification for details.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageBoundary.CropBox">
            <summary>
            The region to which the contents of the page are to be clipped (cropped) when displayed or printed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageBoundary.MediaBox">
            <summary>
            The boundaries of the physical medium on which the page is to be printed.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageBoundary.BleedBox">
            <summary>
            The region to which the contents of the page should be clipped when output in a production environment.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageBoundary.TrimBox">
            <summary>
            The intended dimensions of the finished page after trimming.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.PageBoundary.ArtBox">
            <summary>
            The extent of the pages meaningful content (including potential white space) as intended by the pages creator.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.ViewerPreferences">
            <summary>
            Represents viewer preferences to be used when displaying the document.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.ViewerPreferences.DocumentCatalog">
            <summary>
            The owning <see cref="T:GrapeCity.Documents.Pdf.DocumentCatalog"/> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.ViewerPreferences.Reset">
            <summary>
            Resets properties of this <see cref="T:GrapeCity.Documents.Pdf.ViewerPreferences"/> to default values.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.Doc">
            <summary>
            Gets the owning <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PageMode">
            <summary>
            Gets or sets how the document should be displayed when opened.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PageLayout">
            <summary>
            Gets or sets the page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.HideToolbar">
            <summary>
            Gets or sets whether to hide the viewer tool bars when the document is active.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.HideMenubar">
            <summary>
            Gets or sets whether to hide the viewer menu bar when the document is active.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.FitWindow">
            <summary>
            Gets or sets whether to resize the document's window to fit the size of the first displayed page.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.CenterWindow">
            <summary>
            Gets or sets whether to position the document's window in the center of the screen.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.HideWindowUI">
            <summary>
            Gets or sets whether to hide user interface elements in the document's window (such as scroll bars and navigation controls),
            leaving only the document's contents displayed.
            <para>Default value: false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.DisplayDocTitle">
            <summary>
            Gets or sets whether the window's title bar should display the document title taken from the Title entry of the document information dictionary.
            <para>Default value: false.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.NonFullScreenPageMode">
            <summary>
            Specifies how to display the document on exiting full-screen mode.
            Ignored unless <see cref="P:GrapeCity.Documents.Pdf.ViewerPreferences.PageMode"/> is <see cref="F:GrapeCity.Documents.Pdf.PageMode.FullScreen"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.Direction">
            <summary>
            Gets or sets the predominant reading order for text.
            </summary>
            <remarks>
            This property has no direct effect on the document�s contents or page numbering but
            can be used to determine the relative positioning of pages when displayed side by side or printed n-up.
            Default value: L2R.
            </remarks>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.ViewArea">
            <summary>
            Gets or sets the name of the page boundary representing the area of a page to be displayed when viewing
            the document on the screen.
            <para>Default value: CropBox.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.ViewClip">
            <summary>
            Gets or sets the name of the page boundary to which the contents of a page are to be clipped when viewing
            the document on the screen.
            <para>Default value: CropBox.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PrintArea">
            <summary>
            Gets or sets the name of the page boundary representing the area of a page to be rendered when
            printing the document.
            <para>Default value: CropBox.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PrintClip">
            <summary>
            Gets or sets the name of the page boundary to which the contents of a page are
            to be clipped when printing the document.
            <para>Default value: CropBox.</para>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PrintScaling">
            <summary>
            Specifies the page scaling option to be selected when a print dialog is displayed for this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.Duplex">
            <summary>
            Specifies the page scaling option to be selected when a print dialog is displayed for this document.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PickTrayByPDFSize">
            <summary>
            (PDF 1.7) A flag specifying whether the PDF page size is used to select the input paper tray.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.NumCopies">
            <summary>
            (PDF 1.7) The number of copies to be printed when the print dialog is opened for this file.
            Supported values are the integers 2 through 5. Values outside this range are ignored.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.ViewerPreferences.PrintPageRange">
            <summary>
            (PDF 1.7) The page numbers used to initialize the print dialog box when the file is printed.
            This is a comma-delimited list of individual page numbers and/or dash-delimited page ranges.
            <para>
            Setting this property to a value that cannot be parsed will be ignored.
            </para>
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Wrappers.PdfArrayWrapper">
            <summary>
            For internal use.
            Represents a wrapper over <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> interface.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfArrayWrapper.PdfArray">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1">
            <summary>
            Represents an <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfArray"/> of objects implementing the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> interface.
            </summary>
            <typeparam name="TItem">The type of items in the array.</typeparam>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1"/> class.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.ClearItems">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.InsertItem(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.RemoveItem(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.SetItem(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.RemoveSilent(`0)">
            <summary>
            Removes an item inside <see cref="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.BeginUpdate"/> and <see cref="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.EndUpdate"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.AddSilent(`0)">
            <summary>
            Adds an item inside <see cref="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.BeginUpdate"/> and <see cref="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.EndUpdate"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire collection using the specified <see cref="T:System.Comparison`1"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire collection using the specified <see cref="T:System.Collections.Generic.IComparer`1"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in a range of elements using the specified <see cref="T:System.Collections.Generic.IComparer`1"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds all items from <paramref name="items"/> to this collection.
            </summary>
            <param name="items">The collection containing the items to add.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.AddRange(System.Collections.IEnumerable)">
            <summary>
            Adds all items from <paramref name="items"/> to this collection.
            </summary>
            <param name="items">The collection containing the items to add.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.ToString">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.BeginUpdate">
            <summary>
            For internal use.
            Together with <see cref="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.EndUpdate"/> can be used to disable changing the <see cref="P:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.Changed"/> property.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.EndUpdate">
            <summary>
            For internal use.
            Together with <see cref="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.BeginUpdate"/> can be used to disable changing the <see cref="P:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.Changed"/> property.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.IsUpdating">
            <summary>
            For internal use.
            Returns true if <see cref="M:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.BeginUpdate"/> is called.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.Changed">
            <summary>
            Gets or sets a value indicating whether the collection was changed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1.ListImplementor">
            <summary>
            Implements IList{IPdfObject} interface, the different object is used
            because otherwise PdfCollection will support both interfaces:
            IList{TItem} and IList{IPdfObject} and linq will not work by default.
            i.e. this:
            collection.FirstOrDefault(...) will not work
            you should use:
            ((IList{TItem})collection).FirstOrDefault(...)
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Wrappers.PdfDictWrapper">
            <summary>
            Represents a wrapper over <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/> interface.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfDictWrapper.PdfDict">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1">
            <summary>
            For internal use.
            Represents a wrapper used to dynamically rebuild the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>.
            The underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> can be directly specified by the user.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.m_PdfObject">
            <summary>
            The underlying <b>IPdfObject</b> object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.CheckPdfObject">
            <summary>
            Ensures the <see cref="F:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.m_PdfObject"/> matches the content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.CheckContent">
            <summary>
            Ensures the content matches the <see cref="F:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.m_PdfObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.BuildPdfObject">
            <summary>
            Builds the <see cref="F:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.m_PdfObject"/> from the content.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.BuildContent">
            <summary>
            Builds the content from <see cref="F:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.m_PdfObject"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.SetPdfObj(`0)">
            <summary>
            Sets the underlying PDF object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.PdfObjectDirty">
            <summary>
            Gets or sets a value indicating whether the underlying PDF object does not match the current object content.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.ContentDirty">
            <summary>
            Gets or sets a value indicating whether the parsed content does not match the PDF object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.Changed">
            <summary>
            Gets or sets a value indicating whether the object is changed.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfDynamicWrapper`1.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Wrappers.PdfOwnedCollection`1">
            <summary>
            Represents a PDF owned collection (see <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfOwnedCollectionBase`1"/>)
            in which items support the <see cref="T:GrapeCity.Documents.Common.IOwnedObject"/> interface.
            </summary>
            <typeparam name="TItem">The item type.</typeparam>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfOwnedCollection`1.ClearItems">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfOwnedCollection`1.InsertItem(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfOwnedCollection`1.RemoveItem(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfOwnedCollection`1.SetItem(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Wrappers.PdfOwnedCollectionBase`1">
            <summary>
            Represents a <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfCollection`1"/> supporting the <see cref="T:GrapeCity.Documents.Common.IOwnedObject"/> interface,
            with items supporting <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>.
            </summary>
            <typeparam name="TItem">The item type.</typeparam>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfOwnedCollectionBase`1.SetOwner(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Sets the owner of the current object.
            </summary>
            <param name="value">The owner to set.</param>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfOwnedCollectionBase`1.Owner">
            <summary>
            Gets the owner of the collection.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapper`1">
            <summary>
            The base abstract class for <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfDictWrapper"/> and <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfArrayWrapper"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Wrappers.PdfWrapper`1.m_PdfObject">
            <summary>
            The underlying <b>IPdfObject</b> object.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfWrapper`1.PdfObject">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase">
            <summary>
            Represents a wrapper over <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> interface.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.m_PdfFlags">
            <summary>
            The field of bit flags, can be used by derived classes to hold custom information.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.Write(GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase)">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.Write(GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.WriteIndirectObject(GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter)"/>.
            By default implemented as:
            <code>
            if (w.Doc.WriteComments)
                w.WriteComment(this.GetType().Name);
            PdfObject.WriteIndirectObject(w);
            </code>
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.IsContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.IsContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.ResetContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.ResetContentChanged(GrapeCity.Documents.Pdf.GcPdfDocument)"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.Empty">
            <summary>
            See <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.Empty"/>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.DocID">
            <summary>
            See <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.DocID"/>
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.Indirect">
            <summary>
            See <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.Indirect"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.WasLoaded">
            <summary>
            See <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.WasLoaded"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.ObjIDGenerated">
            <summary>
            See <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.ObjIDGenerated"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.Parsed">
            <summary>
            Gets or sets a value indicating whether the object was parsed,
            intended to be used in derived classes, see <see cref="T:GrapeCity.Documents.Pdf.FileSpecification"/> as example.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.SetStreamData(System.Byte[])">
            <summary>
            Converts underlying object to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamProviderStreamObject"/>
            properties related to the stream are removed, all other remains unchanged.
            Note! The method can be called only if underlying object is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.SetStreamData(System.IO.Stream)">
            <summary>
            Converts underlying object to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamProviderStreamObject"/>
            properties related to the stream are removed, all other remains unchanged.
            Note! The method can be called only if underlying object is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.SetStreamData(GrapeCity.Documents.Pdf.Util.IStreamProvider)">
            <summary>
            Converts underlying object to the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamProviderStreamObject"/>
            properties related to the stream are removed, all other remains unchanged.
            Note! The method can be called only if underlying object is <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfDict"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.MakeIndirect">
            <summary>
            Makes underlying PDF object indirect, does nothing if it is already indirect.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.GetPdfStream">
            <summary>
            Gets the <see cref="T:System.IO.Stream"/> object containing the data
            of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase"/> owned by this wrapper.
            Note! The stream should be disposed after usage.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.GetPdfStreamInfo">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamInfo"/> object containing the data
            of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase"/> owned by this wrapper.
            Note! The stream should be disposed after usage.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.GetPdfStreamData">
            <summary>
            Gets the data of <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfStreamObjectBase"/> owned by this wrapper.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.PdfObject">
            <summary>
            Gets the underlying <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase.ObjID">
            <summary>
            Gets the PDF object ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.CheckExistingWrapper``1(GrapeCity.Documents.Pdf.Spec.PdfObjID,GrapeCity.Documents.Pdf.Spec.IPdfObject,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{``0})">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.ParseOrCreate``2(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Func{``0},System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.CreateEmptyWrapper``1(GrapeCity.Documents.Pdf.Spec.PdfObjID,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{``0})">
            <summary>
            See <see cref="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.ParseOrCreate``2(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Func{``0},System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.ParseOrCreate``2(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Func{``0},System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates a new empty instance or parse an instance from a PDF object.
            <para>
            The <paramref name="value"/> defining the PDF object can
            be null, in this case empty instance will be created using 
            <paramref name="createEmptyInstance"/> method.
            </para>
            <para>
            If requested object can't be parsed from <paramref name="value"/> then
            <paramref name="createEmptyInstance"/> is used to create the empty instance.
            </para>
            <para>
            The <paramref name="createEmptyInstance"/> can be null, in this function will return null.
            </para>
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <typeparam name="TValue">The type of PDF object required for parse method.</typeparam>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.</param>
            <param name="value">The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> which will be parsed.</param>
            <param name="createEmptyInstance">The method creates a new instance of <typeparamref name="TResult"/>.</param>
            <param name="parseInstance">The method parses an instance of <typeparamref name="TResult"/> from
            <typeparamref name="TValue"/>.</param>
            <returns>The "wrapper" object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.GetParsedObject``2(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{``0},System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates or returns existing wrapper object for entry with specified key.
            The original PDF object is replaced with the wrapper if it was created,
            i.e. if it was successfully parsed from existing PDF object or was created
            with <paramref name="createEmptyInstance"/> method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.GetParsedObject``2(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates or returns existing wrapper object for entry with specified key.
            The original PDF object is replaced with the wrapper,
            if wrapper was successfully parsed from existing PDF object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.GetParsedObject``2(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{``0},System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates or returns existing wrapper object for an item at specified index.
            The original PDF object is replaced with the wrapper if it was created,
            i.e. if it was successfully parsed from existing PDF object or was created
            with <paramref name="createEmptyInstance"/> method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.GetParsedObject``2(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates or returns existing wrapper object for an item at specified index.
            The original PDF object is replaced with the wrapper,
            if wrapper was successfully parsed from existing PDF object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.ParseOrCreateWrapper``2(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Func{``0},System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates a new empty <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase"/> or parse a <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase"/> from a PDF object.
            <para>
            The <paramref name="value"/> defining the PDF object can
            be null, in this case empty instance will be created using 
            <paramref name="createEmptyInstance"/> method.
            </para>
            <para>
            If requested object can't be parsed from <paramref name="value"/> then
            <paramref name="createEmptyInstance"/> is used to create the empty instance.
            </para>
            <para>
            The <paramref name="createEmptyInstance"/> can be null, in this function will return null.
            </para>
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
            <typeparam name="TValue">The type of PDF object required for parse method.</typeparam>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.</param>
            <param name="value">The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> which will be parsed.</param>
            <param name="createEmptyInstance">The method creates a new instance of <typeparamref name="TResult"/>.</param>
            <param name="parseInstance">The method parses an instance of <typeparamref name="TResult"/> from
            <typeparamref name="TValue"/>.</param>
            <returns>The <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase"/> object, the result can be null if parsing was fail
            and <paramref name="createEmptyInstance"/> is null.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.ParseWrapper``2(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Parses the <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase"/> from a PDF object,
            returns null if parsing was failed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.GetWrapper``2(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{``0},System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates or returns existing <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase"/> object for entry with specified key.
            The original PDF object is replaced with the wrapper if it was created,
            i.e. if it was successfully parsed from existing PDF object or was created
            with <paramref name="createEmptyInstance"/> method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.GetWrapper``2(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates or returns existing <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase"/> object for entry with specified key.
            The original PDF object is replaced with the wrapper,
            if wrapper was successfully parsed from existing PDF object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.GetWrapper``2(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{``0},System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates or returns existing <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase"/> object for an item at specified index.
            The original PDF object is replaced with the wrapper if it was created,
            i.e. if it was successfully parsed from existing PDF object or was created
            with <paramref name="createEmptyInstance"/> method.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.GetWrapper``2(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates or returns existing <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase"/> object for an item at specified index.
            The original PDF object is replaced with the wrapper,
            if wrapper was successfully parsed from existing PDF object.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.ParseOrCreateCollection``3(GrapeCity.Documents.Pdf.GcPdfDocument,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Boolean,System.Boolean,System.Func{``0},System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``2,``1})">
            <summary>
            Creates a new empty collection or parse a collection from a PDF object.
            <para>
            The <paramref name="value"/> defining the PDF object can
            be null, in this case empty instance will be created using 
            <paramref name="createEmptyCollection"/> method.
            </para>
            <para>
            If requested collection can't be parsed from <paramref name="value"/> then
            <paramref name="createEmptyCollection"/> is used to create the empty instance.
            </para>
            <para>
            The <paramref name="createEmptyCollection"/> can be null, in this function will return null.
            </para>
            </summary>
            <typeparam name="TCollection">The collection type.</typeparam>
            <typeparam name="TCollectionItem">The collection item type.</typeparam>
            <typeparam name="TItemValue">The type of PDF object required for item parse method.</typeparam>
            <param name="doc">The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.</param>
            <param name="value">The <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> which will be parsed.</param>
            <param name="singleValueAsOneElementList"></param>
            <param name="checkItemOwner"></param>
            <param name="createEmptyCollection">The method creates a new instance of <typeparamref name="TCollection"/>.</param>
            <param name="parseItemInstance">The method parses an instance of <typeparamref name="TCollectionItem"/> from
            <typeparamref name="TItemValue"/>.</param>
            <returns>The "wrapper" object.</returns>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.ParseWrapper``2(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates or returns existing <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase"/> object for an item with specified key.
            The original PDF object with specified key is NOT changed.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperUtils.ParseWrapper``2(GrapeCity.Documents.Pdf.Spec.IPdfArray,System.Int32,GrapeCity.Documents.Pdf.GcPdfDocument,System.Func{GrapeCity.Documents.Pdf.GcPdfDocument,``1,``0})">
            <summary>
            Creates or returns existing <see cref="T:GrapeCity.Documents.Pdf.Wrappers.PdfWrapperBase"/> object for an item at specified index.
            The original PDF object at the specified index is NOT changed.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.FdfDocStreamWriter">
            <summary>
            FDF writer used to build FDF content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.FdfDocStreamWriter.BeginObjFDF(System.Int32)">
            <summary>
            Starts writing a new PDF object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.FdfDocStreamWriter.EndObjFDF">
            <summary>
            Ends PDF object.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter">
            <summary>
            PDF writer used to build PDF content stream.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.CurrentGraphicsState">
            <summary>
            The current graphics state.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpModifyCurrentTransformationMatrix(System.Numerics.Matrix3x2)">
            <summary>
            "cm"
            Modify the current transformation matrix (CTM) by concatenating the specified matrix
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSaveGraphicsState">
            <summary>
            "q"
            Save the current graphics state on the graphics state stack
            (see “Graphics State Stack” on page 214).
            Note! <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> does not maintain graphics state stack.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpRestoreGraphicsState">
            <summary>
            "Q"
            Restore the graphics state by removing the most recently saved state from the stack
            and making it the current state (see “Graphics State Stack” on page 214).
            Note! <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/> does not maintain graphics state stack.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpClosePath">
            <summary>
            "n"
            Closes current path.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetLineWidth(System.Single)">
            <summary>
            "w"
            Set the line width in the graphics state (see “Line Width” on page 215).
            It is a non-negative number expressed in user space units;
            stroking a path entails painting all points whose perpendicular distance from the
            path in user space is less than or equal to half the line width.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetLineDashPattern(System.Single,System.Single[])">
            <summary>
            "d"
            Set the line dash pattern in the graphics state (see “Line Dash Pattern” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetLineCapStyle(GrapeCity.Documents.Pdf.LineCapStyle)">
            <summary>
            "J"
            Set the line cap style in the graphics state (see “Line Cap Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetLineJoinStyle(GrapeCity.Documents.Pdf.LineJoinStyle)">
            <summary>
            "j"
            Set the line join style in the graphics state (see “Line Join Style” on page 216).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetMiterLimit(System.Single)">
            <summary>
            "M"
            Set the miter limit in the graphics state (see “Miter Limit” on page 217).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetStrokeColor(System.Drawing.Color,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "RG"
            Set the stroking color space to DeviceRGB (or the DefaultRGB color space; see “Default Color Spaces” on page 257)
            and set the color to use for stroking operations.
            Note! This methods sets stroke alpha value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetSMask(GrapeCity.Documents.Pdf.Graphics.SoftMaskBase,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            Set the Soft Mask.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetBlendMode(GrapeCity.Documents.Pdf.PdfBlendMode,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            Set the blend mode.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetStrokeColor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            Set stroke color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetNonstrokeColor(GrapeCity.Documents.Pdf.Graphics.ColorSpaces.ColorSpace.ColorBase,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            Set non-stroke color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpFillRectangle(System.Drawing.RectangleF)">
            <summary>
            Fills a rectangle.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetNonstrokeColor(System.Drawing.Color,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "rg"
            Set the non stroking color space to DeviceRGB.
            Note! This methods sets non stroke alpha value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetGraphicsStateParameters(System.Single,System.Single,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "gs"
            Sets graphics state parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetNonstrokeAlpha(System.Single,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "gs"
            Sets graphics state parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetStrokeAlpha(System.Single,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "gs"
            Sets graphics state parameters.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetNonstrokeColor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "cs", "scn"
            Set pattern non stroke color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetNonstrokeColor(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Graphics.Patterns.Pattern,System.Drawing.Color,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "cs", "scn"
            Set uncolored pattern non stroke color.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetTextFontAndSize(GrapeCity.Documents.Pdf.Text.Font,System.Single,GrapeCity.Documents.Pdf.Graphics.ResourceDictionary)">
            <summary>
            "Tf"
            Set the text font, Tf , to font and the text font size, Tfs, to size.
            font is the name of a font resource in the Font sub-dictionary of the current resource dictionary;
            size is a number representing a scale factor.
            There is no initial value for either font or size;
            they must be specified explicitly by using Tf before any text is shown.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetTextRenderingMode(GrapeCity.Documents.Pdf.TextRenderingMode)">
            <summary>
            "Tr"
            Set the text rendering mode, Tmode , to render, which is an integer. Initial value: 0.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.OpSetTextHorizontalScaling(System.Single)">
            <summary>
            "Tz"
            Set the horizontal scaling, Th , to (scale ÷ 100). scale is a number specifying
            the percentage of the normal width. Initial value: 100 (normal width).
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.WriteString(System.Byte[],System.Int32)">
            <summary>
            Writes string in format "(BLABLA)".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.WriteContentFragment(System.Byte[])">
            <summary>
            Writes bytes which determines fragment of page content, it can contains one or more operators.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.WriteContentFragment(System.IO.Stream,System.Boolean)">
            <summary>
            Writes another content stream to this content stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.BeginOperator">
            <summary>
            Begins writing of page content operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.EndOperator(System.Byte[])">
            <summary>
            Ends writing of page content operator.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.Write(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter">
            <summary>
            PDF writer used to build PDF document content.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.m_CurrentObjID">
            <summary>
            The ID of indirect PDF object that is currently being written.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter._indirectObjectsToWrite">
            <summary>
            The list of direct <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> object which will be written
            to the PDF stream when writing of current object will be finished,
            they will be written in the <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndObj"/> method.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.CurrentObjID">
            <summary>
            Gets the ID of the object that is currently being written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteComment(System.String)">
            <summary>
            Writes a comment string to the stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginObj(GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Starts writing a new PDF indirect object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginObj(GrapeCity.Documents.Pdf.Spec.PdfObjID,System.String)">
            <summary>
            Starts writing a new PDF indirect object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginObj(System.String)">
            <summary>
            Generates an ID and starts writing a new PDF indirect object, returns the generated ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginObj(System.Int32)">
            <summary>
            Starts writing a new PDF indirect object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginObj(System.Int32,System.String)">
            <summary>
            Starts writing a new PDF indirect object with specified ID.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndObj">
            <summary>
            Ends writing a PDF indirect object started with one of BeginObj(...) methods.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndStream(System.IO.Stream,GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfDict,System.Boolean,GrapeCity.Documents.Pdf.Security.EncryptionStreamType,System.Boolean)">
            <summary>
            Ends writing a PDF indirect object started with one of BeginObj(...) methods.
            If <paramref name="stream"/> is not empty then writes PDF stream,
            including "Length" and "Filter" dictionary properties.
            </summary>
            <param name="stream">The data to write.</param>
            <param name="filterName">The PDF filter used to decode stream data, can be null (no filter).</param>
            <param name="filterParams">The parameters of PDF filter, can be null.</param>
            <param name="useCompression">Indicates whether to compress data if compression specified for the <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/>.</param>
            <param name="est">The stream type, indicates whether to encrypt data.</param>
            <param name="forceLengthAsDirectValue">If true then Length entry will be written as DIRECT VALUE.</param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.ShouldBeWritten(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Checks whether the indirect object should be written to the output stream,
            generates the object's ID if it was not generated before.
            Note! In case of incremental update OLD instance of an object can be referenced,
            i.e. the object will NOT be written to the generated PDF stream,
            the <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.ShouldBeWritten(GrapeCity.Documents.Pdf.Spec.IPdfObject)"/> returns false in this case.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteIndirectObject(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Writes the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> object to the PDF stream.
            Generates the <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.ObjID"/> if it was not generated before.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.GenerateObjID(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Checks whether the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> will be in the output PDF stream and
            generates the ID if it was not generated before.
            Note! The method assumes <paramref name="ipo"/> is indirect,
            i.e. its <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.Indirect"/> is true.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.Write(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.AddDictEntryRaw(GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Adds a dictionary entry with "raw" value, passed value is written as is,
            each char converted to byte using (byte)value[...].
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginStream(System.Int64@,System.IO.Stream@,System.Boolean@)">
            <summary>
            Starts a stream, PDF stream dictionary should be already started.
            Should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndStream(System.Int64)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.EndStream(System.Int64)">
            <summary>
            Ends a PDF stream started with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.BeginStream(System.Int64@,System.IO.Stream@,System.Boolean@)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteCrossRefTableHeader(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Writes start of "xref" table.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteCrossRefTableItem(System.Int32)">
            <summary>
            Writes item of "xref" table.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter.WriteCrossRefTableTrailer(System.Int64,System.Int32,System.Int64,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Writes trailer of "xref" table.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriterIncremental">
            <summary>
            PDF writer used to write PDF document in incremental update mode.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriterIncremental.Write(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <inheritdoc/>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriterIncremental.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <inheritdoc/>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriterLinearized">
            <summary>
            PDF writer used to write PDF document in linearized form.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriterLinearized.AddIndirectObjectToWriteFilter">
            <summary>
            The method called for each object in the <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriterLinearized.AddIndirectObjectToWrite(GrapeCity.Documents.Pdf.Spec.IPdfObject)"/>
            if it returns false then object will NOT be added to the internal queue of delayed writing.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriterLinearized.WriteEmbeddedFileStreams">
            <summary>
            Indicates whether <see cref="T:GrapeCity.Documents.Pdf.EmbeddedFileStream"/> objects should be processed as regular objects,
            otherwise they will be NOT written but added to the <see cref="F:GrapeCity.Documents.Pdf.GcPdfDocument.LinearizedEmbeddedFileStreams"/> list.
            </summary>
        </member>
        <member name="T:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase">
            <summary>
            Base class for PDF writers: <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfContentStreamWriter"/>,
            <see cref="T:GrapeCity.Documents.Pdf.Writer.PdfDocStreamWriter"/>.
            </summary>
        </member>
        <member name="F:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Doc">
            <summary>
            The <see cref="T:GrapeCity.Documents.Pdf.GcPdfDocument"/> object content of which is written.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EncryptHandler">
            <summary>
            Gets the <see cref="T:GrapeCity.Documents.Pdf.Security.SecurityHandlerBase"/> used to encrypt strings and streams.
            By default returns Doc.Security.EncryptHandler.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.DictUseCRLF">
            <summary>
            Indicates whether the entries PDF dictionary should be delimited with CRLF.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WritePdfDateTimeValue(GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            Writes a <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value, the value is encoded as it defined
            in chapter 3.8.3 Dates of PdfSpec 1.7.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteBoolValue(System.Boolean)">
            <summary>
            Writes a bool value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteFloatValue(System.Single,System.Int32)">
            <summary>
            Writes a float value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteDoubleValue(System.Double,System.Int32)">
            <summary>
            Writes a double value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteLongValue(System.Int64)">
            <summary>
            Writes a long value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteUintValue(System.UInt32)">
            <summary>
            Writes an uint value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteIntValue(System.Int32)">
            <summary>
            Writes an integer value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteNameValue(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Writes a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfName"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteNameValue(System.String)">
            <summary>
            Writes a string as PDF name value, i.e. like "/name".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteNameValue(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Writes a byte array as PDF name value, i.e. like "/name".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteStringValue(System.String,System.Boolean)">
            <summary>
            Writes a string as PDF string i.e. like (BlaBla).
            Note! String is encrypted if <paramref name="encrypt"/> is true and encryption is specified for the document.
            Note! If <paramref name="value"/> is null or empty then empty '()' PDF string is written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteStringValue(System.Collections.Generic.IList{System.Byte},System.Boolean)">
            <summary>
            Writes a byte array as PDF string, i.e. like (BlaBla).
            Note! String is encrypted if <paramref name="encrypt"/> is true and encryption is specified for the document.
            Note! If <paramref name="value"/> is null or empty then empty '()' PDF string is written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteHexStringValue(System.Collections.Generic.IList{System.Byte},System.Boolean)">
            <summary>
            Writes string value in format &lt;FF01&gt;.
            Note! String is encrypted if <paramref name="encrypt"/> is true and encryption is specified for the document.
            Note! If <paramref name="value"/> is null or empty then empty '&lt;&gt;' PDF string is written.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.CurrentObjID">
            <summary>
            Gets a <see cref="T:GrapeCity.Documents.Pdf.Spec.PdfObjID"/> structure defining ID of PDF object currently written to the stream,
            used to encrypt strings.
            By default returns <see cref="F:GrapeCity.Documents.Pdf.Spec.PdfObjID.Empty"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Stream">
            <summary>
            Gets or sets the underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteDelim">
            <summary>
            Writes the (space) if <see cref="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.NeedDelimiter"/> is true, resets <see cref="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.NeedDelimiter"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteCRLF">
            <summary>
            Writes the CRLF, resets <see cref="P:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.NeedDelimiter"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteLine(System.String)">
            <summary>
            Writes a string and adds CRLF after, each char of the string
            converted to byte.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Flush">
            <summary>
            Flushes all data to the underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.GetPosition">
            <summary>
            For internal use only. Gets the Position on the underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the underlying stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.IO.Stream)">
            <summary>
            Writes content of specified stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteBytes(System.Byte,System.Int32)">
            <summary>
            Writes specified count of bytes to the stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteString(System.String,System.Boolean)">
            <summary>
            Writes a string as PDF string, like "(BlaBla)".
            Note! String is encrypted if <paramref name="encrypt"/> is true and encryption is specified for the document.
            Note! If <paramref name="value"/> is null or empty then empty "()" PDF string is written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteString(System.Collections.Generic.IList{System.Byte},System.Boolean)">
            <summary>
            Writes a byte array as PDF string, like "(BlaBla)".
            Note! String is encrypted if <paramref name="encrypt"/> is true and encryption is specified for the document.
            Note! If <paramref name="value"/> is null or empty then empty "()" PDF string is written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteHexString(System.Collections.Generic.IList{System.Byte},System.Boolean)">
            <summary>
            Writes a string as PDF HEX string, like &lt;FF01&gt;.
            Note! String is encrypted if <paramref name="encrypt"/> is true and encryption is specified for the document.
            Note! If <paramref name="value"/> is null or empty then empty '()' PDF string is written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteNull">
            <summary>
            Writes a NULL value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.String)">
            <summary>
            Writes a string using ASCII encoding, each char converted to byte as (byte)s[i].
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.String,System.Int32)">
            <summary>
            Writes a string using ASCII encoding, each char converted to byte as (byte)s[i].
            If string length is less than <paramref name="length"/> the spaces will be added at right,
            if string length is greater than <paramref name="length"/> the string will be truncated.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Byte[])">
            <summary>
            Writes a byte array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteByte(System.Byte)">
            <summary>
            Writes a single byte.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WritePdfDateTime(GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            Writes a <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value, the value is encoded as it defined
            in chapter 3.8.3 Dates of PdfSpec 1.7.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteUint(System.UInt32)">
            <summary>
            Writes an uint value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteFloat(System.Single,System.Int32)">
            <summary>
            Writes a float value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteFloat(System.Nullable{System.Single},System.Int32)">
            <summary>
            Writes a nullable float value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteFloatArray(System.Single[],System.Int32)">
            <summary>
            Writes a float array, writes a <b>null</b> if value is null.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteDouble(System.Double,System.Int32)">
            <summary>
            Writes a double value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteLong(System.Int64)">
            <summary>
            Writes a long value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteInt(System.Int32)">
            <summary>
            Writes an integer value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteBool(System.Boolean)">
            <summary>
            Writes a bool value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WritePlaceHolder(System.Int32,System.Int64@)">
            <summary>
            Writes a placeholder to the PDF stream and returns its offset.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Numerics.Matrix3x2)">
            <summary>
            Writes a <see cref="T:System.Numerics.Matrix3x2"/> structure.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteColor(System.Drawing.Color)">
            <summary>
            Writes a <see cref="T:System.Drawing.Color"/> value as sequence of 3 numbers R, G, B.
            NOTE! alpha channel is NOT written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteName(System.String)">
            <summary>
            Writes a string as PDF name value, like "/name".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteName(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Writes a PDF name value, like "/name".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteName(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Writes a byte array as PDF name value, i.e. like "/name".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteRectLTRB(System.Drawing.RectangleF)">
            <summary>
            Writes a <see cref="T:System.Drawing.RectangleF"/> structure as 4 float values Left, Top, Right, Bottom.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteRect(System.Drawing.RectangleF)">
            <summary>
            Writes a <see cref="T:System.Drawing.RectangleF"/> structure as 4 float values Left, Top, Width, Height.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteOffsets(GrapeCity.Documents.Common.Offsets)">
            <summary>
            Writes an <see cref="T:GrapeCity.Documents.Common.Offsets"/> structure as 4 float values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(System.Drawing.PointF)">
            <summary>
            Writes a <see cref="T:System.Drawing.PointF"/> structure as 2 float values.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteRef(System.Int32)">
            <summary>
            Writes a PDF reference like "10 0 R".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.WriteRef(GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Writes a PDF reference like "10 0 R".
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.BeginArrayEntry(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Starts a PDF dictionary entry with array value, should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EndArrayEntry"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EndArrayEntry">
            <summary>
            Ends a PDF dictionary entry started with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.BeginArrayEntry(GrapeCity.Documents.Pdf.Spec.PdfName)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.BeginDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Starts a PDF dictionary entry with nested dictionary value, should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EndDictEntry"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EndDictEntry">
            <summary>
            Ends a PDF dictionary entry started with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.BeginDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.BeginEntry(GrapeCity.Documents.Pdf.Spec.PdfName)">
            <summary>
            Starts a PDF dictionary entry, should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EndEntry"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EndEntry">
            <summary>
            Ends a PDF dictionary entry started with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.BeginEntry(GrapeCity.Documents.Pdf.Spec.PdfName)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryArray(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject[])">
            <summary>
            Adds a dictionary entry with PDF array value, does nothing if value is null,
            writes empty PDF array if value has no items.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryPlaceHolder(GrapeCity.Documents.Pdf.Spec.PdfName,System.Int32,System.Int64@)">
            <summary>
            Adds a dictionary entry with "placeholder" (spaces) the actual value should be written later,
            used when generating linearized PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntriesSkipLength(GrapeCity.Documents.Pdf.Spec.IPdfDict,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Boolean})">
            <summary>
            Adds dictionary entries except for "Length" entry.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntriesSkipStreamProps(GrapeCity.Documents.Pdf.Spec.IPdfDict,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Boolean})">
            <summary>
            Adds dictionary entries except for "Length", "Filter" and "DecodeParms" entries.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryString(GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Adds a dictionary entry with PDF string value.
            If string contains chars with code greater than 126 it encoded as unicode.
            The string is encrypted if an encryption specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryString(GrapeCity.Documents.Pdf.Spec.PdfName,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Adds string dict entry, string is written as PDF string i.e. like (BlaBla).
            If string contains chars with code greater than 126 it encoded as unicode.
            String is encoded if encoding specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean)">
            <summary>
            Adds a dictionary entry with PDF bool value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Int32)">
            <summary>
            Adds a dictionary entry with integer value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Int64)">
            <summary>
            Adds a dictionary entry with integer value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Single)">
            <summary>
            Adds a dictionary entry with float value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Double)">
            <summary>
            Adds a dictionary entry with double value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Single},System.Single)">
            <summary>
            Adds a dictionary entry with nullable float value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Single})">
            <summary>
            Adds a dictionary entry with nullable float value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Int32})">
            <summary>
            Adds a dictionary entry with nullable integer value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Int32,System.Int32)">
            <summary>
            Adds a dictionary entry with integer value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Boolean})">
            <summary>
            Adds a dictionary entry with nullable bool value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Boolean,System.Boolean)">
            <summary>
            Adds a dictionary entry with bool value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryName(GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Adds a dictionary entry with PDF name value, the entry is added only if <paramref name="value"/>
            is not null and not empty.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Common.Offsets)">
            <summary>
            Adds a dictionary entry with <see cref="T:GrapeCity.Documents.Common.Offsets"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{GrapeCity.Documents.Common.Offsets})">
            <summary>
            Adds a dictionary entry with nullable <see cref="T:GrapeCity.Documents.Common.Offsets"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Drawing.RectangleF})">
            <summary>
            Adds a dictionary entry with nullable <see cref="T:System.Drawing.RectangleF"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{System.Drawing.RectangleF},System.Drawing.RectangleF)">
            <summary>
            Adds a dictionary entry with nullable <see cref="T:System.Drawing.RectangleF"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.RectangleF)">
            <summary>
            Adds a dictionary entry with <see cref="T:System.Drawing.RectangleF"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Drawing.Color)">
            <summary>
            Adds a dictionary entry with <see cref="T:System.Drawing.Color"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.PdfDateTime)">
            <summary>
            Adds a dictionary entry with <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{GrapeCity.Documents.Pdf.PdfDateTime})">
            <summary>
            Adds a dictionary entry with nullable <see cref="T:GrapeCity.Documents.Pdf.PdfDateTime"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryRichString(GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Adds a dictionary entry with PDF rich string value,
            see PDF specification for details about Rich text in PDF.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Collections.Generic.IList{System.Single},System.Collections.Generic.IList{System.Single})">
            <summary>
            Adds a dictionary entry with float array value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Adds a dictionary entry with integer array value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryNameArray(GrapeCity.Documents.Pdf.Spec.PdfName,System.String[])">
            <summary>
            Adds a dictionary entry with PDF name array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryNames(GrapeCity.Documents.Pdf.Spec.PdfName,System.String[],System.String[])">
            <summary>
            Adds a dictionary entry with PDF name array.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Single[],System.Single)">
            <summary>
            Adds a dictionary entry with line style value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry``1(GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{``0},``0)">
            <summary>
            Adds a dictionary entry with PDF name value, the PDF name obtained as value.ToString().
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntries(GrapeCity.Documents.Pdf.Spec.IPdfDict,GrapeCity.Documents.Pdf.Spec.PdfName[])">
            <summary>
            Adds dictionary entries, skips entries with name in <paramref name="propsToSkip"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntries(GrapeCity.Documents.Pdf.Spec.IPdfDict,System.Func{GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject,System.Boolean})">
            <summary>
            Adds dictionary entries from specified collection, PDF dictionary should be started.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry``1(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.PdfEnum{``0})">
            <summary>
            Adds a dictionary entry with <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry``1(GrapeCity.Documents.Pdf.Spec.PdfName,System.Nullable{GrapeCity.Documents.Pdf.PdfEnum{``0}})">
            <summary>
            Adds a dictionary entry with nullable <see cref="T:GrapeCity.Documents.Pdf.PdfEnum`1"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryString(GrapeCity.Documents.Pdf.Spec.PdfName,System.Collections.Generic.IList{System.Byte},System.Boolean)">
            <summary>
            Adds a dictionary entry with PDF string value.
            If string contains chars with code greater than 126 it encoded as unicode.
            The string is encrypted if an encryption specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryStringNotEmpty(GrapeCity.Documents.Pdf.Spec.PdfName,System.String)">
            <summary>
            Adds a dictionary entry with PDF string value.
            If string contains chars with code greater than 126 it encoded as unicode.
            The string is encrypted if an encryption specified for document.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryHexString(GrapeCity.Documents.Pdf.Spec.PdfName,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Adds a dictionary entry with PDF string value written as HEX string: &lt;F1A0&gt;
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Numerics.Matrix3x2)">
            <summary>
            Adds a dictionary entry with <see cref="T:System.Numerics.Matrix3x2"/> value.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,System.Collections.Generic.IList{System.Drawing.PointF},System.Func{System.Drawing.PointF,System.Drawing.PointF})">
            <summary>
            Adds a dictionary entry with array of points.
            <paramref name="convertMethod"/> is called for each item in <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryObjRef(GrapeCity.Documents.Pdf.Spec.PdfName,System.Int32)">
            <summary>
            Adds a dictionary entry with PDF reference.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntryObjRef(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.PdfObjID)">
            <summary>
            Adds a dictionary entry with PDF reference.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Writes the <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/> object
            if <paramref name="value"/> is indirect object then reference to this object will be written
            otherwise <see cref="M:GrapeCity.Documents.Pdf.Spec.IPdfObject.Write(GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase)"/> will be
            called to write value representing an object.
            If <paramref name="value"/> is null or <see cref="P:GrapeCity.Documents.Pdf.Spec.IPdfObject.Empty"/> is true
            then PDF NULL value will be written.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.AddDictEntry(GrapeCity.Documents.Pdf.Spec.PdfName,GrapeCity.Documents.Pdf.Spec.IPdfObject)">
            <summary>
            Adds a dictionary entry with value representing <see cref="T:GrapeCity.Documents.Pdf.Spec.IPdfObject"/>,
            see <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.Write(GrapeCity.Documents.Pdf.Spec.IPdfObject)"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.BeginDict">
            <summary>
            Starts a PDF dictionary, should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EndDict"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EndDict">
            <summary>
            Ends a PDF dictionary started with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.BeginDict"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.BeginArray">
            <summary>
            Starts a PDF array, should be enclosed with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EndArray"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.EndArray">
            <summary>
            Ends a PDF array started with <see cref="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.BeginArray"/>.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.FmtDouble(System.Single)">
            <summary>
            Converts specified float to string which can be written to PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.FmtDouble(System.Double)">
            <summary>
            Converts specified float to string which can be written to PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.FmtLong(System.Int64)">
            <summary>
            Converts specified long to string which can be written to PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.FmtUint(System.UInt32)">
            <summary>
            Converts specified uint to string which can be written to PDF stream.
            </summary>
        </member>
        <member name="M:GrapeCity.Documents.Pdf.Writer.PdfStreamWriterBase.FmtInteger(System.Int32)">
            <summary>
            Converts specified integer to string which can be written to PDF stream.
            </summary>
        </member>
        <member name="F:org.jpedal.jbig2.decoders.MMRDecoder.whiteTable1">
            <summary>
            white run lengths
            </summary>
        </member>
        <member name="F:org.jpedal.jbig2.decoders.MMRDecoder.blackTable1">
            <summary>
            black run lengths
            </summary>
        </member>
        <member name="M:org.jpedal.jbig2.image.JBIG2Bitmap.setPixel(System.Int32,System.Int32,org.jpedal.jbig2.image.JBIG2Bitmap.FastBitSet,System.Int32)">
            <summary>
            private static void setPixel(int col, int row, FastBitSet data, int value) {
            if (value == 1)
            	data.set(row, col);
            else
            	data.clear(row, col);
            }/*
            </summary>
        </member>
        <member name="T:org.jpedal.jbig2.image.JBIG2Bitmap.FastBitSet">
            <summary>
            Faster BitSet implementation. Does not perfom any bound checks.
             
            @author Boris von Loesch
            
            </summary>
        </member>
        <member name="M:org.jpedal.jbig2.JBIG2Exception.#ctor">
            <summary>
            Constructs a <CODE>JBIGException</CODE> whithout a message.
            </summary>
        </member>
        <member name="M:org.jpedal.jbig2.JBIG2Exception.#ctor(System.String)">
            <summary>
            Constructs a <code>JBIGException</code> with a message.
            </summary>
            <param name="message">A message describing the exception</param>
        </member>
    </members>
</doc>
